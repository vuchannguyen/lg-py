#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRM_Dev")]
	public partial class CRMDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnnualHoliday(AnnualHoliday instance);
    partial void UpdateAnnualHoliday(AnnualHoliday instance);
    partial void DeleteAnnualHoliday(AnnualHoliday instance);
    partial void InsertWorkFlow(WorkFlow instance);
    partial void UpdateWorkFlow(WorkFlow instance);
    partial void DeleteWorkFlow(WorkFlow instance);
    partial void InsertAssetCategory(AssetCategory instance);
    partial void UpdateAssetCategory(AssetCategory instance);
    partial void DeleteAssetCategory(AssetCategory instance);
    partial void InsertAssetMaster(AssetMaster instance);
    partial void UpdateAssetMaster(AssetMaster instance);
    partial void DeleteAssetMaster(AssetMaster instance);
    partial void InsertAssetProperty(AssetProperty instance);
    partial void UpdateAssetProperty(AssetProperty instance);
    partial void DeleteAssetProperty(AssetProperty instance);
    partial void InsertAssetPropertyDetail(AssetPropertyDetail instance);
    partial void UpdateAssetPropertyDetail(AssetPropertyDetail instance);
    partial void DeleteAssetPropertyDetail(AssetPropertyDetail instance);
    partial void InsertAssetStatus(AssetStatus instance);
    partial void UpdateAssetStatus(AssetStatus instance);
    partial void DeleteAssetStatus(AssetStatus instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertCandidate(Candidate instance);
    partial void UpdateCandidate(Candidate instance);
    partial void DeleteCandidate(Candidate instance);
    partial void InsertCandidateSource(CandidateSource instance);
    partial void UpdateCandidateSource(CandidateSource instance);
    partial void DeleteCandidateSource(CandidateSource instance);
    partial void InsertCIM(CIM instance);
    partial void UpdateCIM(CIM instance);
    partial void DeleteCIM(CIM instance);
    partial void InsertCIM_History(CIM_History instance);
    partial void UpdateCIM_History(CIM_History instance);
    partial void DeleteCIM_History(CIM_History instance);
    partial void InsertCIM_Log(CIM_Log instance);
    partial void UpdateCIM_Log(CIM_Log instance);
    partial void DeleteCIM_Log(CIM_Log instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertContractType(ContractType instance);
    partial void UpdateContractType(ContractType instance);
    partial void DeleteContractType(ContractType instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEForm(EForm instance);
    partial void UpdateEForm(EForm instance);
    partial void DeleteEForm(EForm instance);
    partial void InsertEForm_Detail(EForm_Detail instance);
    partial void UpdateEForm_Detail(EForm_Detail instance);
    partial void DeleteEForm_Detail(EForm_Detail instance);
    partial void InsertEFormMaster(EFormMaster instance);
    partial void UpdateEFormMaster(EFormMaster instance);
    partial void DeleteEFormMaster(EFormMaster instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployee_Certification(Employee_Certification instance);
    partial void UpdateEmployee_Certification(Employee_Certification instance);
    partial void DeleteEmployee_Certification(Employee_Certification instance);
    partial void InsertEmployeeDepartmentJobTitleTracking(EmployeeDepartmentJobTitleTracking instance);
    partial void UpdateEmployeeDepartmentJobTitleTracking(EmployeeDepartmentJobTitleTracking instance);
    partial void DeleteEmployeeDepartmentJobTitleTracking(EmployeeDepartmentJobTitleTracking instance);
    partial void InsertEmployeeInsuranceHospitalTracking(EmployeeInsuranceHospitalTracking instance);
    partial void UpdateEmployeeInsuranceHospitalTracking(EmployeeInsuranceHospitalTracking instance);
    partial void DeleteEmployeeInsuranceHospitalTracking(EmployeeInsuranceHospitalTracking instance);
    partial void InsertEmployeeStatus(EmployeeStatus instance);
    partial void UpdateEmployeeStatus(EmployeeStatus instance);
    partial void DeleteEmployeeStatus(EmployeeStatus instance);
    partial void InsertFloor(Floor instance);
    partial void UpdateFloor(Floor instance);
    partial void DeleteFloor(Floor instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupPermission(GroupPermission instance);
    partial void UpdateGroupPermission(GroupPermission instance);
    partial void DeleteGroupPermission(GroupPermission instance);
    partial void InsertInsuranceHospital(InsuranceHospital instance);
    partial void UpdateInsuranceHospital(InsuranceHospital instance);
    partial void DeleteInsuranceHospital(InsuranceHospital instance);
    partial void InsertInterview(Interview instance);
    partial void UpdateInterview(Interview instance);
    partial void DeleteInterview(Interview instance);
    partial void InsertInterviewResult(InterviewResult instance);
    partial void UpdateInterviewResult(InterviewResult instance);
    partial void DeleteInterviewResult(InterviewResult instance);
    partial void InsertInterviewStatus(InterviewStatus instance);
    partial void UpdateInterviewStatus(InterviewStatus instance);
    partial void DeleteInterviewStatus(InterviewStatus instance);
    partial void InsertJobRequest(JobRequest instance);
    partial void UpdateJobRequest(JobRequest instance);
    partial void DeleteJobRequest(JobRequest instance);
    partial void InsertJobRequestComment(JobRequestComment instance);
    partial void UpdateJobRequestComment(JobRequestComment instance);
    partial void DeleteJobRequestComment(JobRequestComment instance);
    partial void InsertJobRequestItem(JobRequestItem instance);
    partial void UpdateJobRequestItem(JobRequestItem instance);
    partial void DeleteJobRequestItem(JobRequestItem instance);
    partial void InsertJobRequestItemStatus(JobRequestItemStatus instance);
    partial void UpdateJobRequestItemStatus(JobRequestItemStatus instance);
    partial void DeleteJobRequestItemStatus(JobRequestItemStatus instance);
    partial void InsertJobTitle(JobTitle instance);
    partial void UpdateJobTitle(JobTitle instance);
    partial void DeleteJobTitle(JobTitle instance);
    partial void InsertJobTitleLevel(JobTitleLevel instance);
    partial void UpdateJobTitleLevel(JobTitleLevel instance);
    partial void DeleteJobTitleLevel(JobTitleLevel instance);
    partial void InsertLogAccess(LogAccess instance);
    partial void UpdateLogAccess(LogAccess instance);
    partial void DeleteLogAccess(LogAccess instance);
    partial void InsertLogDetail(LogDetail instance);
    partial void UpdateLogDetail(LogDetail instance);
    partial void DeleteLogDetail(LogDetail instance);
    partial void InsertLOT_Answer(LOT_Answer instance);
    partial void UpdateLOT_Answer(LOT_Answer instance);
    partial void DeleteLOT_Answer(LOT_Answer instance);
    partial void InsertLOT_Candidate_Exam(LOT_Candidate_Exam instance);
    partial void UpdateLOT_Candidate_Exam(LOT_Candidate_Exam instance);
    partial void DeleteLOT_Candidate_Exam(LOT_Candidate_Exam instance);
    partial void InsertLOT_Candidate_Topic(LOT_Candidate_Topic instance);
    partial void UpdateLOT_Candidate_Topic(LOT_Candidate_Topic instance);
    partial void DeleteLOT_Candidate_Topic(LOT_Candidate_Topic instance);
    partial void InsertLOT_CandidateAnswer(LOT_CandidateAnswer instance);
    partial void UpdateLOT_CandidateAnswer(LOT_CandidateAnswer instance);
    partial void DeleteLOT_CandidateAnswer(LOT_CandidateAnswer instance);
    partial void InsertLOT_ComprehensionParagraph(LOT_ComprehensionParagraph instance);
    partial void UpdateLOT_ComprehensionParagraph(LOT_ComprehensionParagraph instance);
    partial void DeleteLOT_ComprehensionParagraph(LOT_ComprehensionParagraph instance);
    partial void InsertLOT_Exam(LOT_Exam instance);
    partial void UpdateLOT_Exam(LOT_Exam instance);
    partial void DeleteLOT_Exam(LOT_Exam instance);
    partial void InsertLOT_ExamQuestion(LOT_ExamQuestion instance);
    partial void UpdateLOT_ExamQuestion(LOT_ExamQuestion instance);
    partial void DeleteLOT_ExamQuestion(LOT_ExamQuestion instance);
    partial void InsertLOT_ExamQuestion_Section(LOT_ExamQuestion_Section instance);
    partial void UpdateLOT_ExamQuestion_Section(LOT_ExamQuestion_Section instance);
    partial void DeleteLOT_ExamQuestion_Section(LOT_ExamQuestion_Section instance);
    partial void InsertLOT_ExamQuestion_Section_Comprehension(LOT_ExamQuestion_Section_Comprehension instance);
    partial void UpdateLOT_ExamQuestion_Section_Comprehension(LOT_ExamQuestion_Section_Comprehension instance);
    partial void DeleteLOT_ExamQuestion_Section_Comprehension(LOT_ExamQuestion_Section_Comprehension instance);
    partial void InsertLOT_ExamQuestion_Section_ListeningTopic(LOT_ExamQuestion_Section_ListeningTopic instance);
    partial void UpdateLOT_ExamQuestion_Section_ListeningTopic(LOT_ExamQuestion_Section_ListeningTopic instance);
    partial void DeleteLOT_ExamQuestion_Section_ListeningTopic(LOT_ExamQuestion_Section_ListeningTopic instance);
    partial void InsertLOT_ExamQuestion_Section_Question(LOT_ExamQuestion_Section_Question instance);
    partial void UpdateLOT_ExamQuestion_Section_Question(LOT_ExamQuestion_Section_Question instance);
    partial void DeleteLOT_ExamQuestion_Section_Question(LOT_ExamQuestion_Section_Question instance);
    partial void InsertLOT_ListeningTopic(LOT_ListeningTopic instance);
    partial void UpdateLOT_ListeningTopic(LOT_ListeningTopic instance);
    partial void DeleteLOT_ListeningTopic(LOT_ListeningTopic instance);
    partial void InsertLOT_ProgrammingSkillType(LOT_ProgrammingSkillType instance);
    partial void UpdateLOT_ProgrammingSkillType(LOT_ProgrammingSkillType instance);
    partial void DeleteLOT_ProgrammingSkillType(LOT_ProgrammingSkillType instance);
    partial void InsertLOT_Question(LOT_Question instance);
    partial void UpdateLOT_Question(LOT_Question instance);
    partial void DeleteLOT_Question(LOT_Question instance);
    partial void InsertLOT_Section(LOT_Section instance);
    partial void UpdateLOT_Section(LOT_Section instance);
    partial void DeleteLOT_Section(LOT_Section instance);
    partial void InsertMasterLog(MasterLog instance);
    partial void UpdateMasterLog(MasterLog instance);
    partial void DeleteMasterLog(MasterLog instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMenuPermission(MenuPermission instance);
    partial void UpdateMenuPermission(MenuPermission instance);
    partial void DeleteMenuPermission(MenuPermission instance);
    partial void InsertModulePermission(ModulePermission instance);
    partial void UpdateModulePermission(ModulePermission instance);
    partial void DeleteModulePermission(ModulePermission instance);
    partial void InsertOffice(Office instance);
    partial void UpdateOffice(Office instance);
    partial void DeleteOffice(Office instance);
    partial void InsertPerformanceReview(PerformanceReview instance);
    partial void UpdatePerformanceReview(PerformanceReview instance);
    partial void DeletePerformanceReview(PerformanceReview instance);
    partial void InsertPortal_LogAccess(Portal_LogAccess instance);
    partial void UpdatePortal_LogAccess(Portal_LogAccess instance);
    partial void DeletePortal_LogAccess(Portal_LogAccess instance);
    partial void InsertPortal_LogDetail(Portal_LogDetail instance);
    partial void UpdatePortal_LogDetail(Portal_LogDetail instance);
    partial void DeletePortal_LogDetail(Portal_LogDetail instance);
    partial void InsertPR_PaymentMethod(PR_PaymentMethod instance);
    partial void UpdatePR_PaymentMethod(PR_PaymentMethod instance);
    partial void DeletePR_PaymentMethod(PR_PaymentMethod instance);
    partial void InsertPRComment(PRComment instance);
    partial void UpdatePRComment(PRComment instance);
    partial void DeletePRComment(PRComment instance);
    partial void InsertPTO(PTO instance);
    partial void UpdatePTO(PTO instance);
    partial void DeletePTO(PTO instance);
    partial void InsertPTO_Detail(PTO_Detail instance);
    partial void UpdatePTO_Detail(PTO_Detail instance);
    partial void DeletePTO_Detail(PTO_Detail instance);
    partial void InsertPTO_Report(PTO_Report instance);
    partial void UpdatePTO_Report(PTO_Report instance);
    partial void DeletePTO_Report(PTO_Report instance);
    partial void InsertPTO_Status(PTO_Status instance);
    partial void UpdatePTO_Status(PTO_Status instance);
    partial void DeletePTO_Status(PTO_Status instance);
    partial void InsertPTO_Type(PTO_Type instance);
    partial void UpdatePTO_Type(PTO_Type instance);
    partial void DeletePTO_Type(PTO_Type instance);
    partial void InsertPurchaseComment(PurchaseComment instance);
    partial void UpdatePurchaseComment(PurchaseComment instance);
    partial void DeletePurchaseComment(PurchaseComment instance);
    partial void InsertPurchaseInvoice(PurchaseInvoice instance);
    partial void UpdatePurchaseInvoice(PurchaseInvoice instance);
    partial void DeletePurchaseInvoice(PurchaseInvoice instance);
    partial void InsertPurchaseItem(PurchaseItem instance);
    partial void UpdatePurchaseItem(PurchaseItem instance);
    partial void DeletePurchaseItem(PurchaseItem instance);
    partial void InsertPurchaseRequest(PurchaseRequest instance);
    partial void UpdatePurchaseRequest(PurchaseRequest instance);
    partial void DeletePurchaseRequest(PurchaseRequest instance);
    partial void InsertPurchaseRequestApproval(PurchaseRequestApproval instance);
    partial void UpdatePurchaseRequestApproval(PurchaseRequestApproval instance);
    partial void DeletePurchaseRequestApproval(PurchaseRequestApproval instance);
    partial void InsertResultTemplate(ResultTemplate instance);
    partial void UpdateResultTemplate(ResultTemplate instance);
    partial void DeleteResultTemplate(ResultTemplate instance);
    partial void InsertSeatCode(SeatCode instance);
    partial void UpdateSeatCode(SeatCode instance);
    partial void DeleteSeatCode(SeatCode instance);
    partial void InsertSR_Activity(SR_Activity instance);
    partial void UpdateSR_Activity(SR_Activity instance);
    partial void DeleteSR_Activity(SR_Activity instance);
    partial void InsertSR_Category(SR_Category instance);
    partial void UpdateSR_Category(SR_Category instance);
    partial void DeleteSR_Category(SR_Category instance);
    partial void InsertSR_Comment(SR_Comment instance);
    partial void UpdateSR_Comment(SR_Comment instance);
    partial void DeleteSR_Comment(SR_Comment instance);
    partial void InsertSR_ServiceRequest(SR_ServiceRequest instance);
    partial void UpdateSR_ServiceRequest(SR_ServiceRequest instance);
    partial void DeleteSR_ServiceRequest(SR_ServiceRequest instance);
    partial void InsertSR_Setting(SR_Setting instance);
    partial void UpdateSR_Setting(SR_Setting instance);
    partial void DeleteSR_Setting(SR_Setting instance);
    partial void InsertSR_Status(SR_Status instance);
    partial void UpdateSR_Status(SR_Status instance);
    partial void DeleteSR_Status(SR_Status instance);
    partial void InsertSR_Urgency(SR_Urgency instance);
    partial void UpdateSR_Urgency(SR_Urgency instance);
    partial void DeleteSR_Urgency(SR_Urgency instance);
    partial void InsertSTT(STT instance);
    partial void UpdateSTT(STT instance);
    partial void DeleteSTT(STT instance);
    partial void InsertSTT_RefResult(STT_RefResult instance);
    partial void UpdateSTT_RefResult(STT_RefResult instance);
    partial void DeleteSTT_RefResult(STT_RefResult instance);
    partial void InsertSTT_Result(STT_Result instance);
    partial void UpdateSTT_Result(STT_Result instance);
    partial void DeleteSTT_Result(STT_Result instance);
    partial void InsertSTT_Status(STT_Status instance);
    partial void UpdateSTT_Status(STT_Status instance);
    partial void DeleteSTT_Status(STT_Status instance);
    partial void InsertTraining_Attendee(Training_Attendee instance);
    partial void UpdateTraining_Attendee(Training_Attendee instance);
    partial void DeleteTraining_Attendee(Training_Attendee instance);
    partial void InsertTraining_CertificationMaster(Training_CertificationMaster instance);
    partial void UpdateTraining_CertificationMaster(Training_CertificationMaster instance);
    partial void DeleteTraining_CertificationMaster(Training_CertificationMaster instance);
    partial void InsertTraining_Class(Training_Class instance);
    partial void UpdateTraining_Class(Training_Class instance);
    partial void DeleteTraining_Class(Training_Class instance);
    partial void InsertTraining_Course(Training_Course instance);
    partial void UpdateTraining_Course(Training_Course instance);
    partial void DeleteTraining_Course(Training_Course instance);
    partial void InsertTraining_CourseType(Training_CourseType instance);
    partial void UpdateTraining_CourseType(Training_CourseType instance);
    partial void DeleteTraining_CourseType(Training_CourseType instance);
    partial void InsertTraining_EmpEnglishInfo(Training_EmpEnglishInfo instance);
    partial void UpdateTraining_EmpEnglishInfo(Training_EmpEnglishInfo instance);
    partial void DeleteTraining_EmpEnglishInfo(Training_EmpEnglishInfo instance);
    partial void InsertTraining_EnglishTitleMapping(Training_EnglishTitleMapping instance);
    partial void UpdateTraining_EnglishTitleMapping(Training_EnglishTitleMapping instance);
    partial void DeleteTraining_EnglishTitleMapping(Training_EnglishTitleMapping instance);
    partial void InsertTraining_MasterEnglishType(Training_MasterEnglishType instance);
    partial void UpdateTraining_MasterEnglishType(Training_MasterEnglishType instance);
    partial void DeleteTraining_MasterEnglishType(Training_MasterEnglishType instance);
    partial void InsertTraining_Material(Training_Material instance);
    partial void UpdateTraining_Material(Training_Material instance);
    partial void DeleteTraining_Material(Training_Material instance);
    partial void InsertTraining_RegStatus(Training_RegStatus instance);
    partial void UpdateTraining_RegStatus(Training_RegStatus instance);
    partial void DeleteTraining_RegStatus(Training_RegStatus instance);
    partial void InsertTraining_SkillMapping(Training_SkillMapping instance);
    partial void UpdateTraining_SkillMapping(Training_SkillMapping instance);
    partial void DeleteTraining_SkillMapping(Training_SkillMapping instance);
    partial void InsertTraining_SkillType(Training_SkillType instance);
    partial void UpdateTraining_SkillType(Training_SkillType instance);
    partial void DeleteTraining_SkillType(Training_SkillType instance);
    partial void InsertTraining_Status(Training_Status instance);
    partial void UpdateTraining_Status(Training_Status instance);
    partial void DeleteTraining_Status(Training_Status instance);
    partial void InsertTraining_VerbalMapping(Training_VerbalMapping instance);
    partial void UpdateTraining_VerbalMapping(Training_VerbalMapping instance);
    partial void DeleteTraining_VerbalMapping(Training_VerbalMapping instance);
    partial void InsertUniversity(University instance);
    partial void UpdateUniversity(University instance);
    partial void DeleteUniversity(University instance);
    partial void InsertUser_Group(User_Group instance);
    partial void UpdateUser_Group(User_Group instance);
    partial void DeleteUser_Group(User_Group instance);
    partial void InsertUserAdmin(UserAdmin instance);
    partial void UpdateUserAdmin(UserAdmin instance);
    partial void DeleteUserAdmin(UserAdmin instance);
    partial void InsertUserAdmin_WFRole(UserAdmin_WFRole instance);
    partial void UpdateUserAdmin_WFRole(UserAdmin_WFRole instance);
    partial void DeleteUserAdmin_WFRole(UserAdmin_WFRole instance);
    partial void InsertUserConfig(UserConfig instance);
    partial void UpdateUserConfig(UserConfig instance);
    partial void DeleteUserConfig(UserConfig instance);
    partial void InsertWFResolution(WFResolution instance);
    partial void UpdateWFResolution(WFResolution instance);
    partial void DeleteWFResolution(WFResolution instance);
    partial void InsertWFResolution_WFStatus(WFResolution_WFStatus instance);
    partial void UpdateWFResolution_WFStatus(WFResolution_WFStatus instance);
    partial void DeleteWFResolution_WFStatus(WFResolution_WFStatus instance);
    partial void InsertWFRole(WFRole instance);
    partial void UpdateWFRole(WFRole instance);
    partial void DeleteWFRole(WFRole instance);
    partial void InsertWFRole_WFResolution(WFRole_WFResolution instance);
    partial void UpdateWFRole_WFResolution(WFRole_WFResolution instance);
    partial void DeleteWFRole_WFResolution(WFRole_WFResolution instance);
    partial void InsertWFStatus(WFStatus instance);
    partial void UpdateWFStatus(WFStatus instance);
    partial void DeleteWFStatus(WFStatus instance);
    #endregion
		
		public CRMDB() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CRM_DevConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CRMDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnnualHoliday> AnnualHolidays
		{
			get
			{
				return this.GetTable<AnnualHoliday>();
			}
		}
		
		public System.Data.Linq.Table<WorkFlow> WorkFlows
		{
			get
			{
				return this.GetTable<WorkFlow>();
			}
		}
		
		public System.Data.Linq.Table<AssetCategory> AssetCategories
		{
			get
			{
				return this.GetTable<AssetCategory>();
			}
		}
		
		public System.Data.Linq.Table<AssetMaster> AssetMasters
		{
			get
			{
				return this.GetTable<AssetMaster>();
			}
		}
		
		public System.Data.Linq.Table<AssetProperty> AssetProperties
		{
			get
			{
				return this.GetTable<AssetProperty>();
			}
		}
		
		public System.Data.Linq.Table<AssetPropertyDetail> AssetPropertyDetails
		{
			get
			{
				return this.GetTable<AssetPropertyDetail>();
			}
		}
		
		public System.Data.Linq.Table<AssetStatus> AssetStatus
		{
			get
			{
				return this.GetTable<AssetStatus>();
			}
		}
		
		public System.Data.Linq.Table<aTest> aTests
		{
			get
			{
				return this.GetTable<aTest>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Candidate> Candidates
		{
			get
			{
				return this.GetTable<Candidate>();
			}
		}
		
		public System.Data.Linq.Table<CandidateSource> CandidateSources
		{
			get
			{
				return this.GetTable<CandidateSource>();
			}
		}
		
		public System.Data.Linq.Table<CIM> CIMs
		{
			get
			{
				return this.GetTable<CIM>();
			}
		}
		
		public System.Data.Linq.Table<CIM_History> CIM_Histories
		{
			get
			{
				return this.GetTable<CIM_History>();
			}
		}
		
		public System.Data.Linq.Table<CIM_Log> CIM_Logs
		{
			get
			{
				return this.GetTable<CIM_Log>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<ContractType> ContractTypes
		{
			get
			{
				return this.GetTable<ContractType>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<EForm> EForms
		{
			get
			{
				return this.GetTable<EForm>();
			}
		}
		
		public System.Data.Linq.Table<EForm_Detail> EForm_Details
		{
			get
			{
				return this.GetTable<EForm_Detail>();
			}
		}
		
		public System.Data.Linq.Table<EFormMaster> EFormMasters
		{
			get
			{
				return this.GetTable<EFormMaster>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Employee_Certification> Employee_Certifications
		{
			get
			{
				return this.GetTable<Employee_Certification>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDepartmentJobTitleTracking> EmployeeDepartmentJobTitleTrackings
		{
			get
			{
				return this.GetTable<EmployeeDepartmentJobTitleTracking>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeInsuranceHospitalTracking> EmployeeInsuranceHospitalTrackings
		{
			get
			{
				return this.GetTable<EmployeeInsuranceHospitalTracking>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeStatus> EmployeeStatus
		{
			get
			{
				return this.GetTable<EmployeeStatus>();
			}
		}
		
		public System.Data.Linq.Table<Floor> Floors
		{
			get
			{
				return this.GetTable<Floor>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupPermission> GroupPermissions
		{
			get
			{
				return this.GetTable<GroupPermission>();
			}
		}
		
		public System.Data.Linq.Table<InsuranceHospital> InsuranceHospitals
		{
			get
			{
				return this.GetTable<InsuranceHospital>();
			}
		}
		
		public System.Data.Linq.Table<Interview> Interviews
		{
			get
			{
				return this.GetTable<Interview>();
			}
		}
		
		public System.Data.Linq.Table<InterviewResult> InterviewResults
		{
			get
			{
				return this.GetTable<InterviewResult>();
			}
		}
		
		public System.Data.Linq.Table<InterviewStatus> InterviewStatus
		{
			get
			{
				return this.GetTable<InterviewStatus>();
			}
		}
		
		public System.Data.Linq.Table<JobRequest> JobRequests
		{
			get
			{
				return this.GetTable<JobRequest>();
			}
		}
		
		public System.Data.Linq.Table<JobRequestComment> JobRequestComments
		{
			get
			{
				return this.GetTable<JobRequestComment>();
			}
		}
		
		public System.Data.Linq.Table<JobRequestItem> JobRequestItems
		{
			get
			{
				return this.GetTable<JobRequestItem>();
			}
		}
		
		public System.Data.Linq.Table<JobRequestItemStatus> JobRequestItemStatus
		{
			get
			{
				return this.GetTable<JobRequestItemStatus>();
			}
		}
		
		public System.Data.Linq.Table<JobTitle> JobTitles
		{
			get
			{
				return this.GetTable<JobTitle>();
			}
		}
		
		public System.Data.Linq.Table<JobTitleLevel> JobTitleLevels
		{
			get
			{
				return this.GetTable<JobTitleLevel>();
			}
		}
		
		public System.Data.Linq.Table<LogAccess> LogAccesses
		{
			get
			{
				return this.GetTable<LogAccess>();
			}
		}
		
		public System.Data.Linq.Table<LogDetail> LogDetails
		{
			get
			{
				return this.GetTable<LogDetail>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Answer> LOT_Answers
		{
			get
			{
				return this.GetTable<LOT_Answer>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Candidate_Exam> LOT_Candidate_Exams
		{
			get
			{
				return this.GetTable<LOT_Candidate_Exam>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Candidate_Topic> LOT_Candidate_Topics
		{
			get
			{
				return this.GetTable<LOT_Candidate_Topic>();
			}
		}
		
		public System.Data.Linq.Table<LOT_CandidateAnswer> LOT_CandidateAnswers
		{
			get
			{
				return this.GetTable<LOT_CandidateAnswer>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ComprehensionParagraph> LOT_ComprehensionParagraphs
		{
			get
			{
				return this.GetTable<LOT_ComprehensionParagraph>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Exam> LOT_Exams
		{
			get
			{
				return this.GetTable<LOT_Exam>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ExamQuestion> LOT_ExamQuestions
		{
			get
			{
				return this.GetTable<LOT_ExamQuestion>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ExamQuestion_Section> LOT_ExamQuestion_Sections
		{
			get
			{
				return this.GetTable<LOT_ExamQuestion_Section>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ExamQuestion_Section_Comprehension> LOT_ExamQuestion_Section_Comprehensions
		{
			get
			{
				return this.GetTable<LOT_ExamQuestion_Section_Comprehension>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ExamQuestion_Section_ListeningTopic> LOT_ExamQuestion_Section_ListeningTopics
		{
			get
			{
				return this.GetTable<LOT_ExamQuestion_Section_ListeningTopic>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ExamQuestion_Section_Question> LOT_ExamQuestion_Section_Questions
		{
			get
			{
				return this.GetTable<LOT_ExamQuestion_Section_Question>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ListeningTopic> LOT_ListeningTopics
		{
			get
			{
				return this.GetTable<LOT_ListeningTopic>();
			}
		}
		
		public System.Data.Linq.Table<LOT_ProgrammingSkillType> LOT_ProgrammingSkillTypes
		{
			get
			{
				return this.GetTable<LOT_ProgrammingSkillType>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Question> LOT_Questions
		{
			get
			{
				return this.GetTable<LOT_Question>();
			}
		}
		
		public System.Data.Linq.Table<LOT_Section> LOT_Sections
		{
			get
			{
				return this.GetTable<LOT_Section>();
			}
		}
		
		public System.Data.Linq.Table<MasterLog> MasterLogs
		{
			get
			{
				return this.GetTable<MasterLog>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<MenuPermission> MenuPermissions
		{
			get
			{
				return this.GetTable<MenuPermission>();
			}
		}
		
		public System.Data.Linq.Table<ModulePermission> ModulePermissions
		{
			get
			{
				return this.GetTable<ModulePermission>();
			}
		}
		
		public System.Data.Linq.Table<Office> Offices
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this.GetTable<PerformanceReview>();
			}
		}
		
		public System.Data.Linq.Table<Portal_LogAccess> Portal_LogAccesses
		{
			get
			{
				return this.GetTable<Portal_LogAccess>();
			}
		}
		
		public System.Data.Linq.Table<Portal_LogDetail> Portal_LogDetails
		{
			get
			{
				return this.GetTable<Portal_LogDetail>();
			}
		}
		
		public System.Data.Linq.Table<PR_PaymentMethod> PR_PaymentMethods
		{
			get
			{
				return this.GetTable<PR_PaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<PRComment> PRComments
		{
			get
			{
				return this.GetTable<PRComment>();
			}
		}
		
		public System.Data.Linq.Table<PTO> PTOs
		{
			get
			{
				return this.GetTable<PTO>();
			}
		}
		
		public System.Data.Linq.Table<PTO_Detail> PTO_Details
		{
			get
			{
				return this.GetTable<PTO_Detail>();
			}
		}
		
		public System.Data.Linq.Table<PTO_Report> PTO_Reports
		{
			get
			{
				return this.GetTable<PTO_Report>();
			}
		}
		
		public System.Data.Linq.Table<PTO_Status> PTO_Status
		{
			get
			{
				return this.GetTable<PTO_Status>();
			}
		}
		
		public System.Data.Linq.Table<PTO_Type> PTO_Types
		{
			get
			{
				return this.GetTable<PTO_Type>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseComment> PurchaseComments
		{
			get
			{
				return this.GetTable<PurchaseComment>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseInvoice> PurchaseInvoices
		{
			get
			{
				return this.GetTable<PurchaseInvoice>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseItem> PurchaseItems
		{
			get
			{
				return this.GetTable<PurchaseItem>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this.GetTable<PurchaseRequest>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseRequestApproval> PurchaseRequestApprovals
		{
			get
			{
				return this.GetTable<PurchaseRequestApproval>();
			}
		}
		
		public System.Data.Linq.Table<ResultTemplate> ResultTemplates
		{
			get
			{
				return this.GetTable<ResultTemplate>();
			}
		}
		
		public System.Data.Linq.Table<SeatCode> SeatCodes
		{
			get
			{
				return this.GetTable<SeatCode>();
			}
		}
		
		public System.Data.Linq.Table<SR_Activity> SR_Activities
		{
			get
			{
				return this.GetTable<SR_Activity>();
			}
		}
		
		public System.Data.Linq.Table<SR_Category> SR_Categories
		{
			get
			{
				return this.GetTable<SR_Category>();
			}
		}
		
		public System.Data.Linq.Table<SR_Comment> SR_Comments
		{
			get
			{
				return this.GetTable<SR_Comment>();
			}
		}
		
		public System.Data.Linq.Table<SR_ServiceRequest> SR_ServiceRequests
		{
			get
			{
				return this.GetTable<SR_ServiceRequest>();
			}
		}
		
		public System.Data.Linq.Table<SR_Setting> SR_Settings
		{
			get
			{
				return this.GetTable<SR_Setting>();
			}
		}
		
		public System.Data.Linq.Table<SR_Status> SR_Status
		{
			get
			{
				return this.GetTable<SR_Status>();
			}
		}
		
		public System.Data.Linq.Table<SR_Urgency> SR_Urgencies
		{
			get
			{
				return this.GetTable<SR_Urgency>();
			}
		}
		
		public System.Data.Linq.Table<STT> STTs
		{
			get
			{
				return this.GetTable<STT>();
			}
		}
		
		public System.Data.Linq.Table<STT_RefResult> STT_RefResults
		{
			get
			{
				return this.GetTable<STT_RefResult>();
			}
		}
		
		public System.Data.Linq.Table<STT_Result> STT_Results
		{
			get
			{
				return this.GetTable<STT_Result>();
			}
		}
		
		public System.Data.Linq.Table<STT_Status> STT_Status
		{
			get
			{
				return this.GetTable<STT_Status>();
			}
		}
		
		public System.Data.Linq.Table<Training_Attendee> Training_Attendees
		{
			get
			{
				return this.GetTable<Training_Attendee>();
			}
		}
		
		public System.Data.Linq.Table<Training_CertificationMaster> Training_CertificationMasters
		{
			get
			{
				return this.GetTable<Training_CertificationMaster>();
			}
		}
		
		public System.Data.Linq.Table<Training_Class> Training_Classes
		{
			get
			{
				return this.GetTable<Training_Class>();
			}
		}
		
		public System.Data.Linq.Table<Training_Course> Training_Courses
		{
			get
			{
				return this.GetTable<Training_Course>();
			}
		}
		
		public System.Data.Linq.Table<Training_CourseType> Training_CourseTypes
		{
			get
			{
				return this.GetTable<Training_CourseType>();
			}
		}
		
		public System.Data.Linq.Table<Training_EmpEnglishInfo> Training_EmpEnglishInfos
		{
			get
			{
				return this.GetTable<Training_EmpEnglishInfo>();
			}
		}
		
		public System.Data.Linq.Table<Training_EnglishTitleMapping> Training_EnglishTitleMappings
		{
			get
			{
				return this.GetTable<Training_EnglishTitleMapping>();
			}
		}
		
		public System.Data.Linq.Table<Training_MasterEnglishType> Training_MasterEnglishTypes
		{
			get
			{
				return this.GetTable<Training_MasterEnglishType>();
			}
		}
		
		public System.Data.Linq.Table<Training_Material> Training_Materials
		{
			get
			{
				return this.GetTable<Training_Material>();
			}
		}
		
		public System.Data.Linq.Table<Training_RegStatus> Training_RegStatus
		{
			get
			{
				return this.GetTable<Training_RegStatus>();
			}
		}
		
		public System.Data.Linq.Table<Training_SkillMapping> Training_SkillMappings
		{
			get
			{
				return this.GetTable<Training_SkillMapping>();
			}
		}
		
		public System.Data.Linq.Table<Training_SkillType> Training_SkillTypes
		{
			get
			{
				return this.GetTable<Training_SkillType>();
			}
		}
		
		public System.Data.Linq.Table<Training_Status> Training_Status
		{
			get
			{
				return this.GetTable<Training_Status>();
			}
		}
		
		public System.Data.Linq.Table<Training_VerbalMapping> Training_VerbalMappings
		{
			get
			{
				return this.GetTable<Training_VerbalMapping>();
			}
		}
		
		public System.Data.Linq.Table<University> Universities
		{
			get
			{
				return this.GetTable<University>();
			}
		}
		
		public System.Data.Linq.Table<User_Group> User_Groups
		{
			get
			{
				return this.GetTable<User_Group>();
			}
		}
		
		public System.Data.Linq.Table<UserAdmin> UserAdmins
		{
			get
			{
				return this.GetTable<UserAdmin>();
			}
		}
		
		public System.Data.Linq.Table<UserAdmin_WFRole> UserAdmin_WFRoles
		{
			get
			{
				return this.GetTable<UserAdmin_WFRole>();
			}
		}
		
		public System.Data.Linq.Table<UserConfig> UserConfigs
		{
			get
			{
				return this.GetTable<UserConfig>();
			}
		}
		
		public System.Data.Linq.Table<WFResolution> WFResolutions
		{
			get
			{
				return this.GetTable<WFResolution>();
			}
		}
		
		public System.Data.Linq.Table<WFResolution_WFStatus> WFResolution_WFStatus
		{
			get
			{
				return this.GetTable<WFResolution_WFStatus>();
			}
		}
		
		public System.Data.Linq.Table<WFRole> WFRoles
		{
			get
			{
				return this.GetTable<WFRole>();
			}
		}
		
		public System.Data.Linq.Table<WFRole_WFResolution> WFRole_WFResolutions
		{
			get
			{
				return this.GetTable<WFRole_WFResolution>();
			}
		}
		
		public System.Data.Linq.Table<WFStatus> WFStatus
		{
			get
			{
				return this.GetTable<WFStatus>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertGenerator")]
		public int InsertGenerator([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string tableName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdatePTOReport")]
		public int sp_UpdatePTOReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteInterviewCandidate")]
		public int sp_DeleteInterviewCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateId", DbType="Int")] System.Nullable<int> candidateId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteModulePermisson")]
		public int sp_DeleteModulePermisson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteOldInterview")]
		public int sp_DeleteOldInterview([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateId", DbType="Int")] System.Nullable<int> candidateId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteOldPTO_Detail")]
		public int sp_DeleteOldPTO_Detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string ptoID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ptoID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GenerateJobRequest")]
		public int sp_GenerateJobRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateBy", DbType="NVarChar(100)")] string createBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignID", DbType="Int")] System.Nullable<int> assignID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignRole", DbType="Int")] System.Nullable<int> assignRole)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, createBy, assignID, assignRole);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAccessibleModules")]
		public ISingleResult<sp_GetAccessibleModulesResult> sp_GetAccessibleModules([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userAdminID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> readPermissionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAdminID, readPermissionID);
			return ((ISingleResult<sp_GetAccessibleModulesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAllSeatCodeAndEmpSTT")]
		public ISingleResult<sp_GetAllSeatCodeAndEmpSTTResult> sp_GetAllSeatCodeAndEmpSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> floorId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), floorId);
			return ((ISingleResult<sp_GetAllSeatCodeAndEmpSTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAssetMaster")]
		public ISingleResult<sp_GetAssetMasterResult> sp_GetAssetMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetCategoryID", DbType="Int")] System.Nullable<int> assetCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetStatusID", DbType="Int")] System.Nullable<int> assetStatusID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Project", DbType="NVarChar(100)")] string project)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, assetCategoryID, assetStatusID, project);
			return ((ISingleResult<sp_GetAssetMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAssetMasterProperty")]
		public ISingleResult<sp_GetAssetMasterPropertyResult> sp_GetAssetMasterProperty([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToolTipId", DbType="NVarChar(50)")] string toolTipId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), toolTipId);
			return ((ISingleResult<sp_GetAssetMasterPropertyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAssetProperty")]
		public ISingleResult<sp_GetAssetPropertyResult> sp_GetAssetProperty([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetPropertyName", DbType="NVarChar(200)")] string assetPropertyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetCategoryID", DbType="Int")] System.Nullable<int> assetCategoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assetPropertyName, assetCategoryID);
			return ((ISingleResult<sp_GetAssetPropertyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAssetToolTip")]
		public ISingleResult<sp_GetAssetToolTipResult> sp_GetAssetToolTip([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToolTipId", DbType="NVarChar(50)")] string toolTipId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), toolTipId);
			return ((ISingleResult<sp_GetAssetToolTipResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCandidate")]
		public ISingleResult<sp_GetCandidateResult> sp_GetCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateName", DbType="NVarChar(50)")] string candidateName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Source", DbType="Int")] System.Nullable<int> source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Position", DbType="Int")] System.Nullable<int> position, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="VarChar(10)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="VarChar(10)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="University", DbType="Int")] System.Nullable<int> university, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficeId", DbType="Int")] System.Nullable<int> officeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateName, source, position, status, fromDate, toDate, university, officeId);
			return ((ISingleResult<sp_GetCandidateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCandidateAnswerList")]
		public ISingleResult<sp_GetCandidateAnswerListResult> sp_GetCandidateAnswerList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateExamID", DbType="Int")] System.Nullable<int> candidateExamID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamQuestionSecsionID", DbType="Int")] System.Nullable<int> examQuestionSecsionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateExamID, examQuestionSecsionID);
			return ((ISingleResult<sp_GetCandidateAnswerListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCandidateExam")]
		public ISingleResult<sp_GetCandidateExamResult> sp_GetCandidateExam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamId", DbType="Int")] System.Nullable<int> examId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examId);
			return ((ISingleResult<sp_GetCandidateExamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCandidateListByExam")]
		public ISingleResult<sp_GetCandidateListByExamResult> sp_GetCandidateListByExam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamID", DbType="Int")] System.Nullable<int> examID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examID, type);
			return ((ISingleResult<sp_GetCandidateListByExamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetClassPlanning")]
		public ISingleResult<sp_GetClassPlanningResult> sp_GetClassPlanning([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> course, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string instructors, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> typeCourse)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, course, type, status, instructors, typeCourse);
			return ((ISingleResult<sp_GetClassPlanningResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetComprehensionParagraphListByExamQuestionSectionID")]
		public ISingleResult<sp_GetComprehensionParagraphListByExamQuestionSectionIDResult> sp_GetComprehensionParagraphListByExamQuestionSectionID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamQuesionSectionID", DbType="Int")] System.Nullable<int> examQuesionSectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examQuesionSectionID);
			return ((ISingleResult<sp_GetComprehensionParagraphListByExamQuestionSectionIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetDateOffPTO")]
		public ISingleResult<sp_GetDateOffPTOResult> sp_GetDateOffPTO([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string empID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID, fromDate);
			return ((ISingleResult<sp_GetDateOffPTOResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeCertification")]
		public ISingleResult<sp_GetEmployeeCertificationResult> sp_GetEmployeeCertification([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(100)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitle", DbType="NVarChar(100)")] string jobTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manager", DbType="NVarChar(100)")] string manager, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Certification", DbType="Int")] System.Nullable<int> certification)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, jobTitle, manager, certification);
			return ((ISingleResult<sp_GetEmployeeCertificationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeCertificationManager")]
		public ISingleResult<sp_GetEmployeeCertificationManagerResult> sp_GetEmployeeCertificationManager()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetEmployeeCertificationManagerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeExam")]
		public ISingleResult<sp_GetEmployeeExamResult> sp_GetEmployeeExam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamId", DbType="Int")] System.Nullable<int> examId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examId);
			return ((ISingleResult<sp_GetEmployeeExamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeForExport")]
		public ISingleResult<sp_GetEmployeeForExportResult> sp_GetEmployeeForExport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Department", DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubDepartment", DbType="Int")] System.Nullable<int> subDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="Int")] System.Nullable<int> title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string locationCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subDepartment, title, isActive, status, locationCode);
			return ((ISingleResult<sp_GetEmployeeForExportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeJobtitleCertification")]
		public ISingleResult<sp_GetEmployeeJobtitleCertificationResult> sp_GetEmployeeJobtitleCertification()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetEmployeeJobtitleCertificationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeManager")]
		public ISingleResult<sp_GetEmployeeManagerResult> sp_GetEmployeeManager([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text);
			return ((ISingleResult<sp_GetEmployeeManagerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeProject")]
		public ISingleResult<sp_GetEmployeeProjectResult> sp_GetEmployeeProject()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetEmployeeProjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeesForPR")]
		public ISingleResult<sp_GetEmployeesForPRResult> sp_GetEmployeesForPR([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string managerId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), managerId, statusId);
			return ((ISingleResult<sp_GetEmployeesForPRResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeesPRForHR")]
		public ISingleResult<sp_GetEmployeesPRForHRResult> sp_GetEmployeesPRForHR([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> days)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, statusId, days);
			return ((ISingleResult<sp_GetEmployeesPRForHRResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployeeSTTList")]
		public ISingleResult<sp_GetEmployeeSTTListResult> sp_GetEmployeeSTTList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text);
			return ((ISingleResult<sp_GetEmployeeSTTListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEssayInfoByCandidateExamID")]
		public ISingleResult<sp_GetEssayInfoByCandidateExamIDResult> sp_GetEssayInfoByCandidateExamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateExamID", DbType="Int")] System.Nullable<int> candidateExamID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionID", DbType="Int")] System.Nullable<int> sectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateExamID, sectionID);
			return ((ISingleResult<sp_GetEssayInfoByCandidateExamIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetExam")]
		public ISingleResult<sp_GetExamResult> sp_GetExam([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> examQuestionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> examDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> examDateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, examQuestionId, examDateFrom, examDateTo);
			return ((ISingleResult<sp_GetExamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetIndexEForm")]
		public int sp_GetIndexEForm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MasterID", DbType="VarChar(5)")] string masterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="VarChar(50)")] string personID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonType", DbType="Int")] System.Nullable<int> personType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Round", DbType="Int")] System.Nullable<int> round)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), masterID, personID, personType, round);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetInterviewCandidate")]
		public ISingleResult<sp_GetInterviewCandidateResult> sp_GetInterviewCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateId", DbType="Int")] System.Nullable<int> candidateId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckHistory", DbType="Int")] System.Nullable<int> checkHistory)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId, checkHistory);
			return ((ISingleResult<sp_GetInterviewCandidateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetInterviewHistoryList")]
		public ISingleResult<sp_GetInterviewHistoryListResult> sp_GetInterviewHistoryList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateName", DbType="NVarChar(50)")] string candidateName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Source", DbType="Int")] System.Nullable<int> source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Position", DbType="Int")] System.Nullable<int> position, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="Int")] System.Nullable<int> result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateName, source, position, result, fromDate, toDate);
			return ((ISingleResult<sp_GetInterviewHistoryListResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetInterviewList")]
		public ISingleResult<sp_GetInterviewListResult> sp_GetInterviewList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JR", DbType="NVarChar(5)")] string jR, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateName", DbType="NVarChar(50)")] string candidateName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InterviewStatus", DbType="Int")] System.Nullable<int> interviewStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InterviewResult", DbType="Int")] System.Nullable<int> interviewResult, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InterviewedBy", DbType="NVarChar(50)")] string interviewedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jR, candidateName, interviewStatus, interviewResult, interviewedBy, fromDate, toDate);
			return ((ISingleResult<sp_GetInterviewListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobRequest")]
		public ISingleResult<sp_GetJobRequestResult> sp_GetJobRequest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> positionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestorId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subdepartment, positionId, requestorId, statusId, requestType);
			return ((ISingleResult<sp_GetJobRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobRequestComplete")]
		public ISingleResult<sp_GetJobRequestCompleteResult> sp_GetJobRequestComplete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> positionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> issueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> resolution, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subdepartment, positionId, issueDate, resolution, status, requestType);
			return ((ISingleResult<sp_GetJobRequestCompleteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobRequestCompleteInterview")]
		public ISingleResult<sp_GetJobRequestCompleteInterviewResult> sp_GetJobRequestCompleteInterview([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> positionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subdepartment, positionId, requestType);
			return ((ISingleResult<sp_GetJobRequestCompleteInterviewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobRequestForHR")]
		public ISingleResult<sp_GetJobRequestForHRResult> sp_GetJobRequestForHR([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> positionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestorId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subdepartment, positionId, requestorId, statusId, requestType);
			return ((ISingleResult<sp_GetJobRequestForHRResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobRequestItemList")]
		public ISingleResult<sp_GetJobRequestItemListResult> sp_GetJobRequestItemList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JRID", DbType="Int")] System.Nullable<int> jRID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jRID);
			return ((ISingleResult<sp_GetJobRequestItemListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobTitle")]
		public ISingleResult<sp_GetJobTitleResult> sp_GetJobTitle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitleName", DbType="NVarChar(50)")] string jobTitleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentId", DbType="Int")] System.Nullable<int> departmentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobTitleName, departmentId);
			return ((ISingleResult<sp_GetJobTitleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJobTitleLevel")]
		public ISingleResult<sp_GetJobTitleLevelResult> sp_GetJobTitleLevel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> jobTitleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, jobTitleID);
			return ((ISingleResult<sp_GetJobTitleLevelResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetJRForAdmin")]
		public ISingleResult<sp_GetJRForAdminResult> sp_GetJRForAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkFlow", DbType="Int")] System.Nullable<int> workFlow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Role", DbType="Int")] System.Nullable<int> role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, workFlow, role);
			return ((ISingleResult<sp_GetJRForAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListApprovalAssign")]
		public ISingleResult<sp_GetListApprovalAssignResult> sp_GetListApprovalAssign([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> request)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), request);
			return ((ISingleResult<sp_GetListApprovalAssignResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListAssignByResolutionId")]
		public ISingleResult<sp_GetListAssignByResolutionIdResult> sp_GetListAssignByResolutionId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> wfID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, wfID);
			return ((ISingleResult<sp_GetListAssignByResolutionIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListAssignByRole")]
		public ISingleResult<sp_GetListAssignByRoleResult> sp_GetListAssignByRole([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_GetListAssignByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListEmpEnglishInfo")]
		public ISingleResult<sp_GetListEmpEnglishInfoResult> sp_GetListEmpEnglishInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> typeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, typeId);
			return ((ISingleResult<sp_GetListEmpEnglishInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListEmployeeSttNotSeat")]
		public ISingleResult<sp_GetListEmployeeSttNotSeatResult> sp_GetListEmployeeSttNotSeat([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text);
			return ((ISingleResult<sp_GetListEmployeeSttNotSeatResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListEnglishExamOfEmployee")]
		public ISingleResult<sp_GetListEnglishExamOfEmployeeResult> sp_GetListEnglishExamOfEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_multi_choice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_sentence_correction, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_comprehension_skill, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_writing_skill, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_listening_skill, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_verval)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, const_section_multi_choice, const_section_sentence_correction, const_section_comprehension_skill, const_section_writing_skill, const_section_listening_skill, const_section_verval);
			return ((ISingleResult<sp_GetListEnglishExamOfEmployeeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListEngLishTitleMapping")]
		public ISingleResult<sp_GetListEngLishTitleMappingResult> sp_GetListEngLishTitleMapping([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> departmentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentId);
			return ((ISingleResult<sp_GetListEngLishTitleMappingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListeningTopicListByExamQuestionSectionID")]
		public ISingleResult<sp_GetListeningTopicListByExamQuestionSectionIDResult> sp_GetListeningTopicListByExamQuestionSectionID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamQuesionSectionID", DbType="Int")] System.Nullable<int> examQuesionSectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examQuesionSectionID);
			return ((ISingleResult<sp_GetListeningTopicListByExamQuestionSectionIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListInterviewedBy")]
		public ISingleResult<sp_GetListInterviewedByResult> sp_GetListInterviewedBy()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetListInterviewedByResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListItHelpDesk")]
		public ISingleResult<sp_GetListItHelpDeskResult> sp_GetListItHelpDesk([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permissionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, moduleId, permissionId);
			return ((ISingleResult<sp_GetListItHelpDeskResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListMaterial")]
		public ISingleResult<sp_GetListMaterialResult> sp_GetListMaterial(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string employeeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> courseId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string category, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_coursetype_pro, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_coursetype_english, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_materialtype_course, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_materialtype_category, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_searchtype_procourse, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_searchtype_englishcourse, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_searchtype_category, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_material_permission_public, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_material_permission_incourse, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_material_permission_admin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, text, type, courseId, category, isActive, const_coursetype_pro, const_coursetype_english, const_materialtype_course, const_materialtype_category, const_searchtype_procourse, const_searchtype_englishcourse, const_searchtype_category, const_material_permission_public, const_material_permission_incourse, const_material_permission_admin);
			return ((ISingleResult<sp_GetListMaterialResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListUSAccounting")]
		public ISingleResult<sp_GetListUSAccountingResult> sp_GetListUSAccounting([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), role);
			return ((ISingleResult<sp_GetListUSAccountingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListUserAdmin")]
		public ISingleResult<sp_GetListUserAdminResult> sp_GetListUserAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> resolutionID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> wfID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isHold)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resolutionID, wfID, isHold);
			return ((ISingleResult<sp_GetListUserAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetListUserOfModule")]
		public ISingleResult<sp_GetListUserOfModuleResult> sp_GetListUserOfModule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> moduleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> groupid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, moduleId, groupid);
			return ((ISingleResult<sp_GetListUserOfModuleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetManager")]
		public ISingleResult<sp_GetManagerResult> sp_GetManager([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> jobtitle)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, jobtitle);
			return ((ISingleResult<sp_GetManagerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetManageWorkFlow")]
		public ISingleResult<sp_GetManageWorkFlowResult> sp_GetManageWorkFlow([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> wfID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> resolutionID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), wfID, roleID, resolutionID, status);
			return ((ISingleResult<sp_GetManageWorkFlowResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMaxIndexEForm")]
		public int sp_GetMaxIndexEForm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MasterID", DbType="VarChar(5)")] string masterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="VarChar(50)")] string personID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonType", DbType="Int")] System.Nullable<int> personType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), masterID, personID, personType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMaxMarkByCandidateExamID")]
		public ISingleResult<sp_GetMaxMarkByCandidateExamIDResult> sp_GetMaxMarkByCandidateExamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CandidateExamID", DbType="Int")] System.Nullable<int> candidateExamID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionID", DbType="Int")] System.Nullable<int> sectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateExamID, sectionID);
			return ((ISingleResult<sp_GetMaxMarkByCandidateExamIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetModulePermission")]
		public ISingleResult<sp_GetModulePermissionResult> sp_GetModulePermission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userAdminId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAdminId);
			return ((ISingleResult<sp_GetModulePermissionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPerformanceReviewList")]
		public ISingleResult<sp_GetPerformanceReviewListResult> sp_GetPerformanceReviewList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, statusId);
			return ((ISingleResult<sp_GetPerformanceReviewListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPosition")]
		public ISingleResult<sp_GetPositionResult> sp_GetPosition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> departmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subDepartmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> titleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string project, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sttTitleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string locationCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, departmentID, subDepartmentID, titleID, project, sttTitleID, locationCode);
			return ((ISingleResult<sp_GetPositionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPTODetailByEmployeeID")]
		public ISingleResult<sp_GetPTODetailByEmployeeIDResult> sp_GetPTODetailByEmployeeID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string employeeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID, fromDate, toDate);
			return ((ISingleResult<sp_GetPTODetailByEmployeeIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPTOEmployeeList")]
		public ISingleResult<sp_GetPTOEmployeeListResult> sp_GetPTOEmployeeList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="NVarChar(15)")] string empId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, type, fromDate, toDate, empId);
			return ((ISingleResult<sp_GetPTOEmployeeListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPTOEmployeeListForManager")]
		public ISingleResult<sp_GetPTOEmployeeListForManagerResult> sp_GetPTOEmployeeListForManager([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterText", DbType="NVarChar(50)")] string filterText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManagerId", DbType="NVarChar(10)")] string managerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filterText, status, type, fromDate, toDate, managerId);
			return ((ISingleResult<sp_GetPTOEmployeeListForManagerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPTOListForAdmin")]
		public ISingleResult<sp_GetPTOListForAdminResult> sp_GetPTOListForAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterText", DbType="NVarChar(50)")] string filterText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filterText, status, type, fromDate, toDate);
			return ((ISingleResult<sp_GetPTOListForAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPTOReport")]
		public ISingleResult<sp_GetPTOReportResult> sp_GetPTOReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeName", DbType="VarChar(200)")] string employeeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOffFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateOffFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOffTo", DbType="DateTime")] System.Nullable<System.DateTime> dateOffTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeName, dateOffFrom, dateOffTo);
			return ((ISingleResult<sp_GetPTOReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPurchaseRequest")]
		public ISingleResult<sp_GetPurchaseRequestResult> sp_GetPurchaseRequest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestorId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> assignId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string resolutionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> loginId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> loginRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> constRequestorRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string ccSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string involveSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isUsPurchasing)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subdepartment, requestorId, assignId, resolutionId, statusId, loginId, loginRole, constRequestorRole, ccSeparator, involveSeparator, fromDate, toDate, isUsPurchasing);
			return ((ISingleResult<sp_GetPurchaseRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPurchaseRequestById")]
		public ISingleResult<sp_GetPurchaseRequestByIdResult> sp_GetPurchaseRequestById([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> subdepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestorId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> assignId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string resolutionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> loginId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> loginRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> constRequestorRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string ccSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string involveSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, department, subdepartment, requestorId, assignId, resolutionId, statusId, loginId, loginRole, constRequestorRole, ccSeparator, involveSeparator, fromDate, toDate);
			return ((ISingleResult<sp_GetPurchaseRequestByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetQuestionListByExamQuestionSectionID")]
		public ISingleResult<sp_GetQuestionListByExamQuestionSectionIDResult> sp_GetQuestionListByExamQuestionSectionID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamQuesionSectionID", DbType="Int")] System.Nullable<int> examQuesionSectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examQuesionSectionID);
			return ((ISingleResult<sp_GetQuestionListByExamQuestionSectionIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetQuestionListRandomBySectionID")]
		public ISingleResult<sp_GetQuestionListRandomBySectionIDResult> sp_GetQuestionListRandomBySectionID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionID", DbType="Int")] System.Nullable<int> sectionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumberOfQuestions", DbType="Int")] System.Nullable<int> numberOfQuestions)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sectionID, numberOfQuestions);
			return ((ISingleResult<sp_GetQuestionListRandomBySectionIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetRandomComprehensionParagraph")]
		public ISingleResult<sp_GetRandomComprehensionParagraphResult> sp_GetRandomComprehensionParagraph([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumberOfQuestions", DbType="Int")] System.Nullable<int> numberOfQuestions)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfQuestions);
			return ((ISingleResult<sp_GetRandomComprehensionParagraphResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetRandomListeningTopic")]
		public ISingleResult<sp_GetRandomListeningTopicResult> sp_GetRandomListeningTopic([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumberOfQuestions", DbType="Int")] System.Nullable<int> numberOfQuestions)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfQuestions);
			return ((ISingleResult<sp_GetRandomListeningTopicResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetResolutionByRole")]
		public ISingleResult<sp_GetResolutionByRoleResult> sp_GetResolutionByRole([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), role);
			return ((ISingleResult<sp_GetResolutionByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSeatCode")]
		public ISingleResult<sp_GetSeatCodeResult> sp_GetSeatCode([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> branch, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> office, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> floor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isAvailable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> deleteFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, branch, office, floor, isAvailable, isActive, deleteFlag);
			return ((ISingleResult<sp_GetSeatCodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSeatCodeAndEmployeeSTT")]
		public ISingleResult<sp_GetSeatCodeAndEmployeeSTTResult> sp_GetSeatCodeAndEmployeeSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> branch, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> office, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> floor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isAvailable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> deleteFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, branch, office, floor, isAvailable, isActive, deleteFlag);
			return ((ISingleResult<sp_GetSeatCodeAndEmployeeSTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSectionListByExamQuestionID")]
		public ISingleResult<sp_GetSectionListByExamQuestionIDResult> sp_GetSectionListByExamQuestionID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExamQuesionID", DbType="Int")] System.Nullable<int> examQuesionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), examQuesionID);
			return ((ISingleResult<sp_GetSectionListByExamQuestionIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSR_Setting")]
		public ISingleResult<sp_GetSR_SettingResult> sp_GetSR_Setting([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string project, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> branch, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> office)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, project, branch, office);
			return ((ISingleResult<sp_GetSR_SettingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSRCategory")]
		public ISingleResult<sp_GetSRCategoryResult> sp_GetSRCategory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, categoryId, isActive);
			return ((ISingleResult<sp_GetSRCategoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSTT")]
		public ISingleResult<sp_GetSTTResult> sp_GetSTT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="Int")] System.Nullable<int> result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromStartDate", DbType="DateTime")] System.Nullable<System.DateTime> fromStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToStartDate", DbType="DateTime")] System.Nullable<System.DateTime> toStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromEndDate", DbType="DateTime")] System.Nullable<System.DateTime> fromEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToEndDate", DbType="DateTime")] System.Nullable<System.DateTime> toEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="NVarChar(50)")] string className, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string locationCode)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, status, result, fromStartDate, toStartDate, fromEndDate, toEndDate, className, locationCode);
			return ((ISingleResult<sp_GetSTTResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSTTClass")]
		public ISingleResult<sp_GetSTTClassResult> sp_GetSTTClass()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetSTTClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSTTForExport")]
		public ISingleResult<sp_GetSTTForExportResult> sp_GetSTTForExport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="Int")] System.Nullable<int> result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromStartDate", DbType="DateTime")] System.Nullable<System.DateTime> fromStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToStartDate", DbType="DateTime")] System.Nullable<System.DateTime> toStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromEndDate", DbType="DateTime")] System.Nullable<System.DateTime> fromEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToEndDate", DbType="DateTime")] System.Nullable<System.DateTime> toEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="NVarChar(50)")] string className, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string locationCode)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, status, result, fromStartDate, toStartDate, fromEndDate, toEndDate, className, locationCode);
			return ((ISingleResult<sp_GetSTTForExportResult>)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetSubListPerformanceReviewHR")]
		public ISingleResult<sp_GetSubListPerformanceReviewHRResult> sp_GetSubListPerformanceReviewHR([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="NVarChar(10)")] string empId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId);
			return ((ISingleResult<sp_GetSubListPerformanceReviewHRResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetTrainingCertification")]
		public ISingleResult<sp_GetTrainingCertificationResult> sp_GetTrainingCertification([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CertificationName", DbType="NVarChar(200)")] string certificationName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), certificationName);
			return ((ISingleResult<sp_GetTrainingCertificationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetTrainingCourses")]
		public ISingleResult<sp_GetTrainingCoursesResult> sp_GetTrainingCourses([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> typeOfCourse, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> typeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, typeOfCourse, typeId);
			return ((ISingleResult<sp_GetTrainingCoursesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserInPurchaseRequest")]
		public ISingleResult<sp_GetUserInPurchaseRequestResult> sp_GetUserInPurchaseRequest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isRequestor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsUsPurchasing", DbType="Bit")] System.Nullable<bool> isUsPurchasing)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isRequestor, isUsPurchasing);
			return ((ISingleResult<sp_GetUserInPurchaseRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserMenuPermisson")]
		public ISingleResult<sp_GetUserMenuPermissonResult> sp_GetUserMenuPermisson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userAdminID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAdminID);
			return ((ISingleResult<sp_GetUserMenuPermissonResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetWFStatus")]
		public ISingleResult<sp_GetWFStatusResult> sp_GetWFStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> workflowId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> resolutionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), workflowId, roleId, resolutionId);
			return ((ISingleResult<sp_GetWFStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_InsertEForm")]
		public int sp_InsertEForm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MasterID", DbType="VarChar(5)")] string masterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="VarChar(50)")] string personID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonType", DbType="Int")] System.Nullable<int> personType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormIndex", DbType="Int")] System.Nullable<int> formIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateBy", DbType="NVarChar(100)")] string createBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), masterID, personID, personType, formIndex, createBy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LogDetail")]
		public ISingleResult<sp_LogDetailResult> sp_LogDetail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string logid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), logid);
			return ((ISingleResult<sp_LogDetailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LogDetailGroup")]
		public ISingleResult<sp_LogDetailGroupResult> sp_LogDetailGroup([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> logdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string action, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string table, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, logdate, action, table, type);
			return ((ISingleResult<sp_LogDetailGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LogMaster")]
		public ISingleResult<sp_LogMasterResult> sp_LogMaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string logdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, logdate, type);
			return ((ISingleResult<sp_LogMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LogMasterGroup")]
		public ISingleResult<sp_LogMasterGroupResult> sp_LogMasterGroup([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> logdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, logdate, type);
			return ((ISingleResult<sp_LogMasterGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetFilesOfService_req")]
		public ISingleResult<sp_SR_GetFilesOfService_reqResult> sp_SR_GetFilesOfService_req()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_SR_GetFilesOfService_reqResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetListActivity")]
		public ISingleResult<sp_SR_GetListActivityResult> sp_SR_GetListActivity([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentId", DbType="Int")] System.Nullable<int> departmentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, departmentId);
			return ((ISingleResult<sp_SR_GetListActivityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetListOpenCloseRequest")]
		public ISingleResult<sp_SR_GetListOpenCloseRequestResult> sp_SR_GetListOpenCloseRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, categoryId, type);
			return ((ISingleResult<sp_SR_GetListOpenCloseRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetListReportITTeam")]
		public ISingleResult<sp_SR_GetListReportITTeamResult> sp_SR_GetListReportITTeam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignUser", DbType="NVarChar(50)")] string assignUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, assignUser, type);
			return ((ISingleResult<sp_SR_GetListReportITTeamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetListReportStatus")]
		public ISingleResult<sp_SR_GetListReportStatusResult> sp_SR_GetListReportStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignUser", DbType="NVarChar(50)")] string assignUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, statusId, assignUser);
			return ((ISingleResult<sp_SR_GetListReportStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetNotesOfService_req")]
		public ISingleResult<sp_SR_GetNotesOfService_reqResult> sp_SR_GetNotesOfService_req()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_SR_GetNotesOfService_reqResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetOpenCloseRequest")]
		public ISingleResult<sp_SR_GetOpenCloseRequestResult> sp_SR_GetOpenCloseRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end);
			return ((ISingleResult<sp_SR_GetOpenCloseRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetReportAllStatus")]
		public ISingleResult<sp_SR_GetReportAllStatusResult> sp_SR_GetReportAllStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end);
			return ((ISingleResult<sp_SR_GetReportAllStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetReportITTeam")]
		public ISingleResult<sp_SR_GetReportITTeamResult> sp_SR_GetReportITTeam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end);
			return ((ISingleResult<sp_SR_GetReportITTeamResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetRequestClosed")]
		public ISingleResult<sp_SR_GetRequestClosedResult> sp_SR_GetRequestClosed([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, status);
			return ((ISingleResult<sp_SR_GetRequestClosedResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetServiceRequest")]
		public ISingleResult<sp_SR_GetServiceRequestResult> sp_SR_GetServiceRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleDes", DbType="NVarChar(50)")] string titleDes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubCatId", DbType="Int")] System.Nullable<int> subCatId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CatId", DbType="Int")] System.Nullable<int> catId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignName", DbType="NVarChar(50)")] string assignName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Requestor", DbType="NVarChar(50)")] string requestor, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string loginRole, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string loginName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusTobeApprove, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusApprove, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> statusRejected, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string ccSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string involveSeparator, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string con_Manager, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string con_Employee)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titleDes, subCatId, catId, statusId, assignName, requestor, loginRole, loginName, statusTobeApprove, statusApprove, statusRejected, ccSeparator, involveSeparator, con_Manager, con_Employee);
			return ((ISingleResult<sp_SR_GetServiceRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetServiceRequest4Admin")]
		public ISingleResult<sp_SR_GetServiceRequest4AdminResult> sp_SR_GetServiceRequest4Admin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleDes", DbType="NVarChar(50)")] string titleDes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubCatId", DbType="Int")] System.Nullable<int> subCatId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CatId", DbType="Int")] System.Nullable<int> catId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignName", DbType="NVarChar(50)")] string assignName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Requestor", DbType="NVarChar(50)")] string requestor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titleDes, subCatId, catId, statusId, assignName, startDate, endDate, requestor);
			return ((ISingleResult<sp_SR_GetServiceRequest4AdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SR_GetSRActivity")]
		public ISingleResult<sp_SR_GetSRActivityResult> sp_SR_GetSRActivity([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end);
			return ((ISingleResult<sp_SR_GetSRActivityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetClassEmpAttend")]
		public ISingleResult<sp_TC_GetClassEmpAttendResult> sp_TC_GetClassEmpAttend([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> skillType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, empId, skillType);
			return ((ISingleResult<sp_TC_GetClassEmpAttendResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetClassEmpNotAttend")]
		public ISingleResult<sp_TC_GetClassEmpNotAttendResult> sp_TC_GetClassEmpNotAttend([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> skillType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, empid, skillType);
			return ((ISingleResult<sp_TC_GetClassEmpNotAttendResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetCourseEmpAttend")]
		public ISingleResult<sp_TC_GetCourseEmpAttendResult> sp_TC_GetCourseEmpAttend([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string empId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, empId);
			return ((ISingleResult<sp_TC_GetCourseEmpAttendResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetEnglishCourseAttendance")]
		public ISingleResult<sp_TC_GetEnglishCourseAttendanceResult> sp_TC_GetEnglishCourseAttendance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Department", DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="Int")] System.Nullable<int> title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManagerID", DbType="Int")] System.Nullable<int> managerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, title, managerID);
			return ((ISingleResult<sp_TC_GetEnglishCourseAttendanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetListAttendeesOfClass")]
		public ISingleResult<sp_TC_GetListAttendeesOfClassResult> sp_TC_GetListAttendeesOfClass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> classId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classId);
			return ((ISingleResult<sp_TC_GetListAttendeesOfClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TC_GetMaterialList")]
		public ISingleResult<sp_TC_GetMaterialListResult> sp_TC_GetMaterialList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type);
			return ((ISingleResult<sp_TC_GetMaterialListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateBalanceForMonth", IsComposable=true)]
		public object sp_UpdateBalanceForMonth([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LOCK_DATE_PTO", DbType="Char(2)")] string lOCK_DATE_PTO, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResetMonth", DbType="Int")] System.Nullable<int> resetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxHours", DbType="Int")] System.Nullable<int> maxHours, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTimeUpdate", DbType="DateTime")] System.Nullable<System.DateTime> dateTimeUpdate)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lOCK_DATE_PTO, statusID, resetMonth, maxHours, dateTimeUpdate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.check_in_list_int", IsComposable=true)]
		public System.Nullable<int> check_in_list_int([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string list, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string rolelist, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string csp)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list, id, rolelist, role, csp).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.WriteBinaryFile", IsComposable=true)]
		public System.Nullable<int> WriteBinaryFile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilePath", DbType="VarChar(255)")] string filePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataToWrite", DbType="VarBinary(8000)")] System.Data.Linq.Binary dataToWrite)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filePath, dataToWrite).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.check_in_list_invoice_SR", IsComposable=true)]
		public System.Nullable<int> check_in_list_invoice_SR([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string list, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string statusList, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string statusApprove, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string statusReject, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string role, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string con_Manager, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string con_Employee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string csp)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list, user, statusList, statusApprove, statusReject, role, con_Manager, con_Employee, csp).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.check_in_list_string", IsComposable=true)]
		public System.Nullable<int> check_in_list_string([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string list, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string csp)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list, id, csp).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckInUserGroup", IsComposable=true)]
		public System.Nullable<bool> CheckInUserGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAdminId", DbType="Int")] System.Nullable<int> userAdminId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAdminId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CompareMonthYear", IsComposable=true)]
		public System.Nullable<int> CompareMonthYear([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date2)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date1, date2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ContainsExact", IsComposable=true)]
		public System.Nullable<bool> ContainsExact([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string subtext)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, subtext).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Date", IsComposable=true)]
		public System.Nullable<System.DateTime> Date([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Day", DbType="Int")] System.Nullable<int> day)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year, month, day).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DateOnly", IsComposable=true)]
		public System.Nullable<System.DateTime> DateOnly([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTime", DbType="DateTime")] System.Nullable<System.DateTime> dateTime)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateTime).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_CheckUserHasPermissionModule", IsComposable=true)]
		public System.Nullable<bool> func_CheckUserHasPermissionModule([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permissionId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, permissionId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_CountAttendess", IsComposable=true)]
		public System.Nullable<int> func_CountAttendess([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> classID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Func_CountOverlapDate", IsComposable=true)]
		public System.Nullable<int> Func_CountOverlapDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string startdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string enddate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, empId, startdate, enddate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_GetCurrentBalanceInMonth", IsComposable=true)]
		public System.Nullable<int> func_GetCurrentBalanceInMonth([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_GetIdServiceRequestFormSysAid", IsComposable=true)]
		public System.Nullable<int> func_GetIdServiceRequestFormSysAid([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_GetPrevNextMonthForPTO", IsComposable=true)]
		public System.Nullable<System.DateTime> func_GetPrevNextMonthForPTO([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isPrev, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isPrev, date).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_SR_GetTotalClosedOfCategory", IsComposable=true)]
		public System.Nullable<int> func_SR_GetTotalClosedOfCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, categoryId, status).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_SR_GetTotalClosedOfUser", IsComposable=true)]
		public System.Nullable<int> func_SR_GetTotalClosedOfUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="NVarChar(50)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, user, status).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_SR_GetTotalTimeOfDepartment", IsComposable=true)]
		public System.Nullable<double> func_SR_GetTotalTimeOfDepartment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentId", DbType="Int")] System.Nullable<int> departmentId)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, departmentId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_SR_GetTotalTimeOfSR", IsComposable=true)]
		public System.Nullable<double> func_SR_GetTotalTimeOfSR([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="NVarChar(50)")] string user)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, user).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_SR_GetTotalTimeOfSRId", IsComposable=true)]
		public System.Nullable<double> func_SR_GetTotalTimeOfSRId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="From", DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="NVarChar(50)")] string iD)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, end, iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_value_from_index_of_other_list", IsComposable=true)]
		public System.Nullable<System.DateTime> get_value_from_index_of_other_list([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string listin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string listvalues, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string csp)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listin, listvalues, id, csp).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBalancePTO", IsComposable=true)]
		public System.Nullable<int> GetBalancePTO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PTO_ID", DbType="VarChar(15)")] string pTO_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateOffFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateOffTo)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTO_ID, dateOffFrom, dateOffTo).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCategoryIdBySubId", IsComposable=true)]
		public System.Nullable<int> GetCategoryIdBySubId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubId", DbType="Int")] System.Nullable<int> subId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCurrentRoundCandidate", IsComposable=true)]
		public System.Nullable<int> GetCurrentRoundCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCurrentStatusCandidate", IsComposable=true)]
		public string GetCurrentStatusCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDepartmentIdBySubId", IsComposable=true)]
		public System.Nullable<int> GetDepartmentIdBySubId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubId", DbType="Int")] System.Nullable<int> subId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDepartmentNameBySubDepartmentName", IsComposable=true)]
		public string GetDepartmentNameBySubDepartmentName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string text)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDepartmentNameBySubId", IsComposable=true)]
		public string GetDepartmentNameBySubId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubId", DbType="Int")] System.Nullable<int> subId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmployeeFullName", IsComposable=true)]
		public string GetEmployeeFullName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EMP_ID", DbType="NVarChar(15)")] string eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WHICHFORMAT", DbType="Int")] System.Nullable<int> wHICHFORMAT)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, wHICHFORMAT).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEnglishSkillLevel", IsComposable=true)]
		public System.Nullable<double> GetEnglishSkillLevel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> score, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isTOEIC)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), score, isTOEIC).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEOMBalance", IsComposable=true)]
		public System.Nullable<int> GetEOMBalance([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHoursOfPTO", IsComposable=true)]
		public System.Nullable<double> GetHoursOfPTO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PTO_ID", DbType="VarChar(15)")] string pTO_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isCompanyPayType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isCompanyPayDetail)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTO_ID, fromDate, toDate, isCompanyPayType, isCompanyPayDetail).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxRound", IsComposable=true)]
		public System.Nullable<int> GetMaxRound([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNumCorrectAnswerOfSection", IsComposable=true)]
		public System.Nullable<double> GetNumCorrectAnswerOfSection([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateExamId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sectionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_writing_skill, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_verbal)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateExamId, sectionId, const_section_writing_skill, const_section_verbal).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRoundInterviewedCandidate", IsComposable=true)]
		public System.Nullable<int> GetRoundInterviewedCandidate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetScoreOfSection", IsComposable=true)]
		public System.Nullable<double> GetScoreOfSection([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> candidateExamId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sectionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_writing_skill, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> const_section_verbal)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), candidateExamId, sectionId, const_section_writing_skill, const_section_verbal).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSRAttachment", IsComposable=true)]
		public string GetSRAttachment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> srId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), srId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSttFullName", IsComposable=true)]
		public string GetSttFullName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EMP_ID", DbType="NVarChar(15)")] string eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WHICHFORMAT", DbType="Int")] System.Nullable<int> wHICHFORMAT)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, wHICHFORMAT).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubTotalItem", IsComposable=true)]
		public System.Nullable<double> GetSubTotalItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubtractedBalanceOfEmp", IsComposable=true)]
		public System.Nullable<int> GetSubtractedBalanceOfEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSumCompanyPaidHourOfPTO", IsComposable=true)]
		public System.Nullable<double> GetSumCompanyPaidHourOfPTO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PTO_ID", DbType="VarChar(15)")] string pTO_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTO_ID, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSumHourOfPTO", IsComposable=true)]
		public System.Nullable<double> GetSumHourOfPTO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PTO_ID", DbType="VarChar(15)")] string pTO_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTO_ID, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTrainingResultOfCourse", IsComposable=true)]
		public string GetTrainingResultOfCourse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> courseId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, courseId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUnpaidLeaveHours", IsComposable=true)]
		public System.Nullable<int> GetUnpaidLeaveHours([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUsedDay", IsComposable=true)]
		public System.Nullable<double> GetUsedDay([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateOffFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateOffTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateOffFrom, dateOffTo, fromDate, toDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVacationSeniority", IsComposable=true)]
		public System.Nullable<int> GetVacationSeniority([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="NVarChar(10)")] string empID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateToGet", DbType="DateTime")] System.Nullable<System.DateTime> dateToGet)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID, dateToGet).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVerbalSkillLevel", IsComposable=true)]
		public System.Nullable<double> GetVerbalSkillLevel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> score)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), score).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isSeatCodeAvailable", IsComposable=true)]
		public System.Nullable<bool> isSeatCodeAvailable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> seatCodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string seatCodePrefix)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), seatCodeID, seatCodePrefix).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ResetPTO", IsComposable=true)]
		public System.Nullable<int> ResetPTO([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResetMonth", DbType="Int")] System.Nullable<int> resetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxHours", DbType="Int")] System.Nullable<int> maxHours, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Balance", DbType="Int")] System.Nullable<int> balance, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateToGet", DbType="DateTime")] System.Nullable<System.DateTime> dateToGet)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resetMonth, maxHours, balance, dateToGet).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RoundMonth", IsComposable=true)]
		public System.Nullable<System.DateTime> RoundMonth([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InDate", DbType="DateTime")] System.Nullable<System.DateTime> inDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> separate)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inDate, separate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Split", IsComposable=true)]
		public IQueryable<SplitResult> Split([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowData", DbType="NVarChar(2000)")] string rowData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SplitOn", DbType="NVarChar(5)")] string splitOn)
		{
			return this.CreateMethodCallQuery<SplitResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rowData, splitOn);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StringOnly", IsComposable=true)]
		public string StringOnly([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string text)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetJobTitleIdBySubId", IsComposable=true)]
		public System.Nullable<int> GetJobTitleIdBySubId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubId", DbType="Int")] System.Nullable<int> subId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEmployee")]
		public ISingleResult<sp_GetEmployeeResult> sp_GetEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Department", DbType="Int")] System.Nullable<int> department, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubDepartment", DbType="Int")] System.Nullable<int> subDepartment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="Int")] System.Nullable<int> title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string locationCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, department, subDepartment, title, isActive, status, locationCode);
			return ((ISingleResult<sp_GetEmployeeResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnualHoliday")]
	public partial class AnnualHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HolidayName;
		
		private System.DateTime _HolidayDate;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHolidayNameChanging(string value);
    partial void OnHolidayNameChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public AnnualHoliday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HolidayName
		{
			get
			{
				return this._HolidayName;
			}
			set
			{
				if ((this._HolidayName != value))
				{
					this.OnHolidayNameChanging(value);
					this.SendPropertyChanging();
					this._HolidayName = value;
					this.SendPropertyChanged("HolidayName");
					this.OnHolidayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkFlow")]
	public partial class WorkFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private EntitySet<WFResolution> _WFResolutions;
		
		private EntitySet<WFRole> _WFRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public WorkFlow()
		{
			this._WFResolutions = new EntitySet<WFResolution>(new Action<WFResolution>(this.attach_WFResolutions), new Action<WFResolution>(this.detach_WFResolutions));
			this._WFRoles = new EntitySet<WFRole>(new Action<WFRole>(this.attach_WFRoles), new Action<WFRole>(this.detach_WFRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlow_WFResolution", Storage="_WFResolutions", ThisKey="ID", OtherKey="WFID")]
		public EntitySet<WFResolution> WFResolutions
		{
			get
			{
				return this._WFResolutions;
			}
			set
			{
				this._WFResolutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlow_WFRole", Storage="_WFRoles", ThisKey="ID", OtherKey="WFID")]
		public EntitySet<WFRole> WFRoles
		{
			get
			{
				return this._WFRoles;
			}
			set
			{
				this._WFRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WFResolutions(WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlow = this;
		}
		
		private void detach_WFResolutions(WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlow = null;
		}
		
		private void attach_WFRoles(WFRole entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlow = this;
		}
		
		private void detach_WFRoles(WFRole entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetCategory")]
	public partial class AssetCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<AssetMaster> _AssetMasters;
		
		private EntitySet<AssetProperty> _AssetProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public AssetCategory()
		{
			this._AssetMasters = new EntitySet<AssetMaster>(new Action<AssetMaster>(this.attach_AssetMasters), new Action<AssetMaster>(this.detach_AssetMasters));
			this._AssetProperties = new EntitySet<AssetProperty>(new Action<AssetProperty>(this.attach_AssetProperties), new Action<AssetProperty>(this.detach_AssetProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCategory_AssetMaster", Storage="_AssetMasters", ThisKey="ID", OtherKey="CategoryId")]
		public EntitySet<AssetMaster> AssetMasters
		{
			get
			{
				return this._AssetMasters;
			}
			set
			{
				this._AssetMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCategory_AssetProperty", Storage="_AssetProperties", ThisKey="ID", OtherKey="AssetCategoryId")]
		public EntitySet<AssetProperty> AssetProperties
		{
			get
			{
				return this._AssetProperties;
			}
			set
			{
				this._AssetProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.AssetCategory = this;
		}
		
		private void detach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.AssetCategory = null;
		}
		
		private void attach_AssetProperties(AssetProperty entity)
		{
			this.SendPropertyChanging();
			entity.AssetCategory = this;
		}
		
		private void detach_AssetProperties(AssetProperty entity)
		{
			this.SendPropertyChanging();
			entity.AssetCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetMaster")]
	public partial class AssetMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AssetID;
		
		private int _CategoryId;
		
		private int _StatusId;
		
		private string _EmployeeId;
		
		private string _Remark;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<AssetPropertyDetail> _AssetPropertyDetails;
		
		private EntityRef<AssetCategory> _AssetCategory;
		
		private EntityRef<AssetStatus> _AssetStatus;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public AssetMaster()
		{
			this._AssetPropertyDetails = new EntitySet<AssetPropertyDetail>(new Action<AssetPropertyDetail>(this.attach_AssetPropertyDetails), new Action<AssetPropertyDetail>(this.detach_AssetPropertyDetails));
			this._AssetCategory = default(EntityRef<AssetCategory>);
			this._AssetStatus = default(EntityRef<AssetStatus>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._AssetCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._AssetStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10)")]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetMaster_AssetPropertyDetail", Storage="_AssetPropertyDetails", ThisKey="ID", OtherKey="AssetId")]
		public EntitySet<AssetPropertyDetail> AssetPropertyDetails
		{
			get
			{
				return this._AssetPropertyDetails;
			}
			set
			{
				this._AssetPropertyDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCategory_AssetMaster", Storage="_AssetCategory", ThisKey="CategoryId", OtherKey="ID", IsForeignKey=true)]
		public AssetCategory AssetCategory
		{
			get
			{
				return this._AssetCategory.Entity;
			}
			set
			{
				AssetCategory previousValue = this._AssetCategory.Entity;
				if (((previousValue != value) 
							|| (this._AssetCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetCategory.Entity = null;
						previousValue.AssetMasters.Remove(this);
					}
					this._AssetCategory.Entity = value;
					if ((value != null))
					{
						value.AssetMasters.Add(this);
						this._CategoryId = value.ID;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("AssetCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetStatus_AssetMaster", Storage="_AssetStatus", ThisKey="StatusId", OtherKey="ID", IsForeignKey=true)]
		public AssetStatus AssetStatus
		{
			get
			{
				return this._AssetStatus.Entity;
			}
			set
			{
				AssetStatus previousValue = this._AssetStatus.Entity;
				if (((previousValue != value) 
							|| (this._AssetStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetStatus.Entity = null;
						previousValue.AssetMasters.Remove(this);
					}
					this._AssetStatus.Entity = value;
					if ((value != null))
					{
						value.AssetMasters.Add(this);
						this._StatusId = value.ID;
					}
					else
					{
						this._StatusId = default(int);
					}
					this.SendPropertyChanged("AssetStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AssetMaster", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AssetMasters.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AssetMasters.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetPropertyDetails(AssetPropertyDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetMaster = this;
		}
		
		private void detach_AssetPropertyDetails(AssetPropertyDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetProperty")]
	public partial class AssetProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _AssetCategoryId;
		
		private string _Name;
		
		private int _DisplayOrder;
		
		private string _MasterData;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<AssetPropertyDetail> _AssetPropertyDetails;
		
		private EntityRef<AssetCategory> _AssetCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAssetCategoryIdChanging(int value);
    partial void OnAssetCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnMasterDataChanging(string value);
    partial void OnMasterDataChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public AssetProperty()
		{
			this._AssetPropertyDetails = new EntitySet<AssetPropertyDetail>(new Action<AssetPropertyDetail>(this.attach_AssetPropertyDetails), new Action<AssetPropertyDetail>(this.detach_AssetPropertyDetails));
			this._AssetCategory = default(EntityRef<AssetCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryId", DbType="Int NOT NULL")]
		public int AssetCategoryId
		{
			get
			{
				return this._AssetCategoryId;
			}
			set
			{
				if ((this._AssetCategoryId != value))
				{
					if (this._AssetCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AssetCategoryId = value;
					this.SendPropertyChanged("AssetCategoryId");
					this.OnAssetCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterData", DbType="NVarChar(4000)")]
		public string MasterData
		{
			get
			{
				return this._MasterData;
			}
			set
			{
				if ((this._MasterData != value))
				{
					this.OnMasterDataChanging(value);
					this.SendPropertyChanging();
					this._MasterData = value;
					this.SendPropertyChanged("MasterData");
					this.OnMasterDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetProperty_AssetPropertyDetail", Storage="_AssetPropertyDetails", ThisKey="ID", OtherKey="PropertyId")]
		public EntitySet<AssetPropertyDetail> AssetPropertyDetails
		{
			get
			{
				return this._AssetPropertyDetails;
			}
			set
			{
				this._AssetPropertyDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetCategory_AssetProperty", Storage="_AssetCategory", ThisKey="AssetCategoryId", OtherKey="ID", IsForeignKey=true)]
		public AssetCategory AssetCategory
		{
			get
			{
				return this._AssetCategory.Entity;
			}
			set
			{
				AssetCategory previousValue = this._AssetCategory.Entity;
				if (((previousValue != value) 
							|| (this._AssetCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetCategory.Entity = null;
						previousValue.AssetProperties.Remove(this);
					}
					this._AssetCategory.Entity = value;
					if ((value != null))
					{
						value.AssetProperties.Add(this);
						this._AssetCategoryId = value.ID;
					}
					else
					{
						this._AssetCategoryId = default(int);
					}
					this.SendPropertyChanged("AssetCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetPropertyDetails(AssetPropertyDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetProperty = this;
		}
		
		private void detach_AssetPropertyDetails(AssetPropertyDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetPropertyDetail")]
	public partial class AssetPropertyDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _AssetId;
		
		private long _PropertyId;
		
		private string _Value;
		
		private EntityRef<AssetMaster> _AssetMaster;
		
		private EntityRef<AssetProperty> _AssetProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAssetIdChanging(long value);
    partial void OnAssetIdChanged();
    partial void OnPropertyIdChanging(long value);
    partial void OnPropertyIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AssetPropertyDetail()
		{
			this._AssetMaster = default(EntityRef<AssetMaster>);
			this._AssetProperty = default(EntityRef<AssetProperty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetId", DbType="BigInt NOT NULL")]
		public long AssetId
		{
			get
			{
				return this._AssetId;
			}
			set
			{
				if ((this._AssetId != value))
				{
					if (this._AssetMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetIdChanging(value);
					this.SendPropertyChanging();
					this._AssetId = value;
					this.SendPropertyChanged("AssetId");
					this.OnAssetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyId", DbType="BigInt NOT NULL")]
		public long PropertyId
		{
			get
			{
				return this._PropertyId;
			}
			set
			{
				if ((this._PropertyId != value))
				{
					if (this._AssetProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyIdChanging(value);
					this.SendPropertyChanging();
					this._PropertyId = value;
					this.SendPropertyChanged("PropertyId");
					this.OnPropertyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetMaster_AssetPropertyDetail", Storage="_AssetMaster", ThisKey="AssetId", OtherKey="ID", IsForeignKey=true)]
		public AssetMaster AssetMaster
		{
			get
			{
				return this._AssetMaster.Entity;
			}
			set
			{
				AssetMaster previousValue = this._AssetMaster.Entity;
				if (((previousValue != value) 
							|| (this._AssetMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetMaster.Entity = null;
						previousValue.AssetPropertyDetails.Remove(this);
					}
					this._AssetMaster.Entity = value;
					if ((value != null))
					{
						value.AssetPropertyDetails.Add(this);
						this._AssetId = value.ID;
					}
					else
					{
						this._AssetId = default(long);
					}
					this.SendPropertyChanged("AssetMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetProperty_AssetPropertyDetail", Storage="_AssetProperty", ThisKey="PropertyId", OtherKey="ID", IsForeignKey=true)]
		public AssetProperty AssetProperty
		{
			get
			{
				return this._AssetProperty.Entity;
			}
			set
			{
				AssetProperty previousValue = this._AssetProperty.Entity;
				if (((previousValue != value) 
							|| (this._AssetProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetProperty.Entity = null;
						previousValue.AssetPropertyDetails.Remove(this);
					}
					this._AssetProperty.Entity = value;
					if ((value != null))
					{
						value.AssetPropertyDetails.Add(this);
						this._PropertyId = value.ID;
					}
					else
					{
						this._PropertyId = default(long);
					}
					this.SendPropertyChanged("AssetProperty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetStatus")]
	public partial class AssetStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
		private string _Description;
		
		private EntitySet<AssetMaster> _AssetMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AssetStatus()
		{
			this._AssetMasters = new EntitySet<AssetMaster>(new Action<AssetMaster>(this.attach_AssetMasters), new Action<AssetMaster>(this.detach_AssetMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetStatus_AssetMaster", Storage="_AssetMasters", ThisKey="ID", OtherKey="StatusId")]
		public EntitySet<AssetMaster> AssetMasters
		{
			get
			{
				return this._AssetMasters;
			}
			set
			{
				this._AssetMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.AssetStatus = this;
		}
		
		private void detach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.AssetStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aTest")]
	public partial class aTest
	{
		
		private System.Nullable<System.DateTime> _date1;
		
		private System.Nullable<System.DateTime> _date2;
		
		public aTest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date1", DbType="DateTime")]
		public System.Nullable<System.DateTime> date1
		{
			get
			{
				return this._date1;
			}
			set
			{
				if ((this._date1 != value))
				{
					this._date1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date2", DbType="DateTime")]
		public System.Nullable<System.DateTime> date2
		{
			get
			{
				return this._date2;
			}
			set
			{
				if ((this._date2 != value))
				{
					this._date2 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Office> _Offices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Branch()
		{
			this._Offices = new EntitySet<Office>(new Action<Office>(this.attach_Offices), new Action<Office>(this.detach_Offices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Office", Storage="_Offices", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<Office> Offices
		{
			get
			{
				return this._Offices;
			}
			set
			{
				this._Offices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidates")]
	public partial class Candidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LastName;
		
		private string _VnLastName;
		
		private string _MiddleName;
		
		private string _VnMiddleName;
		
		private string _FirstName;
		
		private string _VnFirstName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CellPhone;
		
		private string _Email;
		
		private System.DateTime _SearchDate;
		
		private int _SourceId;
		
		private int _TitleId;
		
		private string _Address;
		
		private string _Note;
		
		private string _Photograph;
		
		private string _CVFile;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<int> _JRId;
		
		private System.Nullable<bool> _SaveHistory;
		
		private int _Status;
		
		private bool _Gender;
		
		private System.Nullable<int> _UniversityId;
		
		private System.Nullable<int> _OfficeID;
		
		private EntitySet<Interview> _Interviews;
		
		private EntitySet<LOT_Candidate_Exam> _LOT_Candidate_Exams;
		
		private EntityRef<CandidateSource> _CandidateSource;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<University> _University;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnVnLastNameChanging(string value);
    partial void OnVnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnVnMiddleNameChanging(string value);
    partial void OnVnMiddleNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnVnFirstNameChanging(string value);
    partial void OnVnFirstNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSearchDateChanging(System.DateTime value);
    partial void OnSearchDateChanged();
    partial void OnSourceIdChanging(int value);
    partial void OnSourceIdChanged();
    partial void OnTitleIdChanging(int value);
    partial void OnTitleIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnPhotographChanging(string value);
    partial void OnPhotographChanged();
    partial void OnCVFileChanging(string value);
    partial void OnCVFileChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnJRIdChanging(System.Nullable<int> value);
    partial void OnJRIdChanged();
    partial void OnSaveHistoryChanging(System.Nullable<bool> value);
    partial void OnSaveHistoryChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnUniversityIdChanging(System.Nullable<int> value);
    partial void OnUniversityIdChanged();
    partial void OnOfficeIDChanging(System.Nullable<int> value);
    partial void OnOfficeIDChanged();
    #endregion
		
		public Candidate()
		{
			this._Interviews = new EntitySet<Interview>(new Action<Interview>(this.attach_Interviews), new Action<Interview>(this.detach_Interviews));
			this._LOT_Candidate_Exams = new EntitySet<LOT_Candidate_Exam>(new Action<LOT_Candidate_Exam>(this.attach_LOT_Candidate_Exams), new Action<LOT_Candidate_Exam>(this.detach_LOT_Candidate_Exams));
			this._CandidateSource = default(EntityRef<CandidateSource>);
			this._JobTitleLevel = default(EntityRef<JobTitleLevel>);
			this._Office = default(EntityRef<Office>);
			this._University = default(EntityRef<University>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnLastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnLastName
		{
			get
			{
				return this._VnLastName;
			}
			set
			{
				if ((this._VnLastName != value))
				{
					this.OnVnLastNameChanging(value);
					this.SendPropertyChanging();
					this._VnLastName = value;
					this.SendPropertyChanged("VnLastName");
					this.OnVnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(20)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnMiddleName", DbType="NVarChar(20)")]
		public string VnMiddleName
		{
			get
			{
				return this._VnMiddleName;
			}
			set
			{
				if ((this._VnMiddleName != value))
				{
					this.OnVnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._VnMiddleName = value;
					this.SendPropertyChanged("VnMiddleName");
					this.OnVnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnFirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnFirstName
		{
			get
			{
				return this._VnFirstName;
			}
			set
			{
				if ((this._VnFirstName != value))
				{
					this.OnVnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._VnFirstName = value;
					this.SendPropertyChanged("VnFirstName");
					this.OnVnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchDate", DbType="DateTime NOT NULL")]
		public System.DateTime SearchDate
		{
			get
			{
				return this._SearchDate;
			}
			set
			{
				if ((this._SearchDate != value))
				{
					this.OnSearchDateChanging(value);
					this.SendPropertyChanging();
					this._SearchDate = value;
					this.SendPropertyChanged("SearchDate");
					this.OnSearchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int NOT NULL")]
		public int SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					if (this._CandidateSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int NOT NULL")]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					if (this._JobTitleLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this.OnPhotographChanging(value);
					this.SendPropertyChanging();
					this._Photograph = value;
					this.SendPropertyChanged("Photograph");
					this.OnPhotographChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this.OnCVFileChanging(value);
					this.SendPropertyChanging();
					this._CVFile = value;
					this.SendPropertyChanged("CVFile");
					this.OnCVFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRId", DbType="Int")]
		public System.Nullable<int> JRId
		{
			get
			{
				return this._JRId;
			}
			set
			{
				if ((this._JRId != value))
				{
					this.OnJRIdChanging(value);
					this.SendPropertyChanging();
					this._JRId = value;
					this.SendPropertyChanged("JRId");
					this.OnJRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveHistory", DbType="Bit")]
		public System.Nullable<bool> SaveHistory
		{
			get
			{
				return this._SaveHistory;
			}
			set
			{
				if ((this._SaveHistory != value))
				{
					this.OnSaveHistoryChanging(value);
					this.SendPropertyChanging();
					this._SaveHistory = value;
					this.SendPropertyChanged("SaveHistory");
					this.OnSaveHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityId", DbType="Int")]
		public System.Nullable<int> UniversityId
		{
			get
			{
				return this._UniversityId;
			}
			set
			{
				if ((this._UniversityId != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversityIdChanging(value);
					this.SendPropertyChanging();
					this._UniversityId = value;
					this.SendPropertyChanged("UniversityId");
					this.OnUniversityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int")]
		public System.Nullable<int> OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Interview", Storage="_Interviews", ThisKey="ID", OtherKey="CandidateId")]
		public EntitySet<Interview> Interviews
		{
			get
			{
				return this._Interviews;
			}
			set
			{
				this._Interviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_LOT_Candidate_Exam", Storage="_LOT_Candidate_Exams", ThisKey="ID", OtherKey="CandidateID")]
		public EntitySet<LOT_Candidate_Exam> LOT_Candidate_Exams
		{
			get
			{
				return this._LOT_Candidate_Exams;
			}
			set
			{
				this._LOT_Candidate_Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateSource_Candidate", Storage="_CandidateSource", ThisKey="SourceId", OtherKey="SourceId", IsForeignKey=true)]
		public CandidateSource CandidateSource
		{
			get
			{
				return this._CandidateSource.Entity;
			}
			set
			{
				CandidateSource previousValue = this._CandidateSource.Entity;
				if (((previousValue != value) 
							|| (this._CandidateSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateSource.Entity = null;
						previousValue.Candidates.Remove(this);
					}
					this._CandidateSource.Entity = value;
					if ((value != null))
					{
						value.Candidates.Add(this);
						this._SourceId = value.SourceId;
					}
					else
					{
						this._SourceId = default(int);
					}
					this.SendPropertyChanged("CandidateSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Candidate", Storage="_JobTitleLevel", ThisKey="TitleId", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel
		{
			get
			{
				return this._JobTitleLevel.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel.Entity = null;
						previousValue.Candidates.Remove(this);
					}
					this._JobTitleLevel.Entity = value;
					if ((value != null))
					{
						value.Candidates.Add(this);
						this._TitleId = value.ID;
					}
					else
					{
						this._TitleId = default(int);
					}
					this.SendPropertyChanged("JobTitleLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Candidate", Storage="_Office", ThisKey="OfficeID", OtherKey="ID", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.Candidates.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.Candidates.Add(this);
						this._OfficeID = value.ID;
					}
					else
					{
						this._OfficeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Candidate", Storage="_University", ThisKey="UniversityId", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Candidates.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Candidates.Add(this);
						this._UniversityId = value.ID;
					}
					else
					{
						this._UniversityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
		
		private void attach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateSource")]
	public partial class CandidateSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SourceId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Candidate> _Candidates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSourceIdChanging(int value);
    partial void OnSourceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CandidateSource()
		{
			this._Candidates = new EntitySet<Candidate>(new Action<Candidate>(this.attach_Candidates), new Action<Candidate>(this.detach_Candidates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateSource_Candidate", Storage="_Candidates", ThisKey="SourceId", OtherKey="SourceId")]
		public EntitySet<Candidate> Candidates
		{
			get
			{
				return this._Candidates;
			}
			set
			{
				this._Candidates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.CandidateSource = this;
		}
		
		private void detach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.CandidateSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CIM")]
	public partial class CIM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProcessorId;
		
		private string _ComputerName;
		
		private string _OperatingSystem;
		
		private string _SystemManufacturer;
		
		private string _SystemModel;
		
		private string _BIOS;
		
		private string _ProcessorInfo;
		
		private string _Memory;
		
		private string _PageFile;
		
		private string _DisplayName;
		
		private string _SoundName;
		
		private string _MonitorName;
		
		private string _HardDrive;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<CIM_Log> _CIM_Logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProcessorIdChanging(string value);
    partial void OnProcessorIdChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnOperatingSystemChanging(string value);
    partial void OnOperatingSystemChanged();
    partial void OnSystemManufacturerChanging(string value);
    partial void OnSystemManufacturerChanged();
    partial void OnSystemModelChanging(string value);
    partial void OnSystemModelChanged();
    partial void OnBIOSChanging(string value);
    partial void OnBIOSChanged();
    partial void OnProcessorInfoChanging(string value);
    partial void OnProcessorInfoChanged();
    partial void OnMemoryChanging(string value);
    partial void OnMemoryChanged();
    partial void OnPageFileChanging(string value);
    partial void OnPageFileChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSoundNameChanging(string value);
    partial void OnSoundNameChanged();
    partial void OnMonitorNameChanging(string value);
    partial void OnMonitorNameChanged();
    partial void OnHardDriveChanging(string value);
    partial void OnHardDriveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public CIM()
		{
			this._CIM_Logs = new EntitySet<CIM_Log>(new Action<CIM_Log>(this.attach_CIM_Logs), new Action<CIM_Log>(this.detach_CIM_Logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorId", DbType="NVarChar(100)")]
		public string ProcessorId
		{
			get
			{
				return this._ProcessorId;
			}
			set
			{
				if ((this._ProcessorId != value))
				{
					this.OnProcessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessorId = value;
					this.SendPropertyChanged("ProcessorId");
					this.OnProcessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(100)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingSystem", DbType="NVarChar(200)")]
		public string OperatingSystem
		{
			get
			{
				return this._OperatingSystem;
			}
			set
			{
				if ((this._OperatingSystem != value))
				{
					this.OnOperatingSystemChanging(value);
					this.SendPropertyChanging();
					this._OperatingSystem = value;
					this.SendPropertyChanged("OperatingSystem");
					this.OnOperatingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemManufacturer", DbType="NVarChar(200)")]
		public string SystemManufacturer
		{
			get
			{
				return this._SystemManufacturer;
			}
			set
			{
				if ((this._SystemManufacturer != value))
				{
					this.OnSystemManufacturerChanging(value);
					this.SendPropertyChanging();
					this._SystemManufacturer = value;
					this.SendPropertyChanged("SystemManufacturer");
					this.OnSystemManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemModel", DbType="NVarChar(200)")]
		public string SystemModel
		{
			get
			{
				return this._SystemModel;
			}
			set
			{
				if ((this._SystemModel != value))
				{
					this.OnSystemModelChanging(value);
					this.SendPropertyChanging();
					this._SystemModel = value;
					this.SendPropertyChanged("SystemModel");
					this.OnSystemModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIOS", DbType="NVarChar(200)")]
		public string BIOS
		{
			get
			{
				return this._BIOS;
			}
			set
			{
				if ((this._BIOS != value))
				{
					this.OnBIOSChanging(value);
					this.SendPropertyChanging();
					this._BIOS = value;
					this.SendPropertyChanged("BIOS");
					this.OnBIOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorInfo", DbType="NVarChar(200)")]
		public string ProcessorInfo
		{
			get
			{
				return this._ProcessorInfo;
			}
			set
			{
				if ((this._ProcessorInfo != value))
				{
					this.OnProcessorInfoChanging(value);
					this.SendPropertyChanging();
					this._ProcessorInfo = value;
					this.SendPropertyChanged("ProcessorInfo");
					this.OnProcessorInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory", DbType="NVarChar(200)")]
		public string Memory
		{
			get
			{
				return this._Memory;
			}
			set
			{
				if ((this._Memory != value))
				{
					this.OnMemoryChanging(value);
					this.SendPropertyChanging();
					this._Memory = value;
					this.SendPropertyChanged("Memory");
					this.OnMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFile", DbType="NVarChar(200)")]
		public string PageFile
		{
			get
			{
				return this._PageFile;
			}
			set
			{
				if ((this._PageFile != value))
				{
					this.OnPageFileChanging(value);
					this.SendPropertyChanging();
					this._PageFile = value;
					this.SendPropertyChanged("PageFile");
					this.OnPageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundName", DbType="NVarChar(200)")]
		public string SoundName
		{
			get
			{
				return this._SoundName;
			}
			set
			{
				if ((this._SoundName != value))
				{
					this.OnSoundNameChanging(value);
					this.SendPropertyChanging();
					this._SoundName = value;
					this.SendPropertyChanged("SoundName");
					this.OnSoundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorName", DbType="NVarChar(200)")]
		public string MonitorName
		{
			get
			{
				return this._MonitorName;
			}
			set
			{
				if ((this._MonitorName != value))
				{
					this.OnMonitorNameChanging(value);
					this.SendPropertyChanging();
					this._MonitorName = value;
					this.SendPropertyChanged("MonitorName");
					this.OnMonitorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardDrive", DbType="NVarChar(200)")]
		public string HardDrive
		{
			get
			{
				return this._HardDrive;
			}
			set
			{
				if ((this._HardDrive != value))
				{
					this.OnHardDriveChanging(value);
					this.SendPropertyChanging();
					this._HardDrive = value;
					this.SendPropertyChanged("HardDrive");
					this.OnHardDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CIM_CIM_Log", Storage="_CIM_Logs", ThisKey="ID", OtherKey="CIM_ID")]
		public EntitySet<CIM_Log> CIM_Logs
		{
			get
			{
				return this._CIM_Logs;
			}
			set
			{
				this._CIM_Logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CIM_Logs(CIM_Log entity)
		{
			this.SendPropertyChanging();
			entity.CIM = this;
		}
		
		private void detach_CIM_Logs(CIM_Log entity)
		{
			this.SendPropertyChanging();
			entity.CIM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CIM_History")]
	public partial class CIM_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ComputerName;
		
		private string _OperatingSystem;
		
		private string _SystemManufacturer;
		
		private string _SystemModel;
		
		private string _BIOS;
		
		private string _ProcessorInfo;
		
		private string _Memory;
		
		private string _PageFile;
		
		private string _DisplayName;
		
		private string _SoundName;
		
		private string _MonitorName;
		
		private string _HardDrive;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnOperatingSystemChanging(string value);
    partial void OnOperatingSystemChanged();
    partial void OnSystemManufacturerChanging(string value);
    partial void OnSystemManufacturerChanged();
    partial void OnSystemModelChanging(string value);
    partial void OnSystemModelChanged();
    partial void OnBIOSChanging(string value);
    partial void OnBIOSChanged();
    partial void OnProcessorInfoChanging(string value);
    partial void OnProcessorInfoChanged();
    partial void OnMemoryChanging(string value);
    partial void OnMemoryChanged();
    partial void OnPageFileChanging(string value);
    partial void OnPageFileChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSoundNameChanging(string value);
    partial void OnSoundNameChanged();
    partial void OnMonitorNameChanging(string value);
    partial void OnMonitorNameChanged();
    partial void OnHardDriveChanging(string value);
    partial void OnHardDriveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public CIM_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(100)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingSystem", DbType="NVarChar(200)")]
		public string OperatingSystem
		{
			get
			{
				return this._OperatingSystem;
			}
			set
			{
				if ((this._OperatingSystem != value))
				{
					this.OnOperatingSystemChanging(value);
					this.SendPropertyChanging();
					this._OperatingSystem = value;
					this.SendPropertyChanged("OperatingSystem");
					this.OnOperatingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemManufacturer", DbType="NVarChar(200)")]
		public string SystemManufacturer
		{
			get
			{
				return this._SystemManufacturer;
			}
			set
			{
				if ((this._SystemManufacturer != value))
				{
					this.OnSystemManufacturerChanging(value);
					this.SendPropertyChanging();
					this._SystemManufacturer = value;
					this.SendPropertyChanged("SystemManufacturer");
					this.OnSystemManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemModel", DbType="NVarChar(200)")]
		public string SystemModel
		{
			get
			{
				return this._SystemModel;
			}
			set
			{
				if ((this._SystemModel != value))
				{
					this.OnSystemModelChanging(value);
					this.SendPropertyChanging();
					this._SystemModel = value;
					this.SendPropertyChanged("SystemModel");
					this.OnSystemModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIOS", DbType="NVarChar(200)")]
		public string BIOS
		{
			get
			{
				return this._BIOS;
			}
			set
			{
				if ((this._BIOS != value))
				{
					this.OnBIOSChanging(value);
					this.SendPropertyChanging();
					this._BIOS = value;
					this.SendPropertyChanged("BIOS");
					this.OnBIOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorInfo", DbType="NVarChar(200)")]
		public string ProcessorInfo
		{
			get
			{
				return this._ProcessorInfo;
			}
			set
			{
				if ((this._ProcessorInfo != value))
				{
					this.OnProcessorInfoChanging(value);
					this.SendPropertyChanging();
					this._ProcessorInfo = value;
					this.SendPropertyChanged("ProcessorInfo");
					this.OnProcessorInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory", DbType="NVarChar(200)")]
		public string Memory
		{
			get
			{
				return this._Memory;
			}
			set
			{
				if ((this._Memory != value))
				{
					this.OnMemoryChanging(value);
					this.SendPropertyChanging();
					this._Memory = value;
					this.SendPropertyChanged("Memory");
					this.OnMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFile", DbType="NVarChar(200)")]
		public string PageFile
		{
			get
			{
				return this._PageFile;
			}
			set
			{
				if ((this._PageFile != value))
				{
					this.OnPageFileChanging(value);
					this.SendPropertyChanging();
					this._PageFile = value;
					this.SendPropertyChanged("PageFile");
					this.OnPageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundName", DbType="NVarChar(200)")]
		public string SoundName
		{
			get
			{
				return this._SoundName;
			}
			set
			{
				if ((this._SoundName != value))
				{
					this.OnSoundNameChanging(value);
					this.SendPropertyChanging();
					this._SoundName = value;
					this.SendPropertyChanged("SoundName");
					this.OnSoundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorName", DbType="NVarChar(200)")]
		public string MonitorName
		{
			get
			{
				return this._MonitorName;
			}
			set
			{
				if ((this._MonitorName != value))
				{
					this.OnMonitorNameChanging(value);
					this.SendPropertyChanging();
					this._MonitorName = value;
					this.SendPropertyChanged("MonitorName");
					this.OnMonitorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardDrive", DbType="NVarChar(200)")]
		public string HardDrive
		{
			get
			{
				return this._HardDrive;
			}
			set
			{
				if ((this._HardDrive != value))
				{
					this.OnHardDriveChanging(value);
					this.SendPropertyChanging();
					this._HardDrive = value;
					this.SendPropertyChanged("HardDrive");
					this.OnHardDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CIM_Logs")]
	public partial class CIM_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CIM_ID;
		
		private string _ColumnName;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private System.DateTime _CreateDate;
		
		private EntityRef<CIM> _CIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCIM_IDChanging(int value);
    partial void OnCIM_IDChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public CIM_Log()
		{
			this._CIM = default(EntityRef<CIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIM_ID", DbType="Int NOT NULL")]
		public int CIM_ID
		{
			get
			{
				return this._CIM_ID;
			}
			set
			{
				if ((this._CIM_ID != value))
				{
					if (this._CIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIM_IDChanging(value);
					this.SendPropertyChanging();
					this._CIM_ID = value;
					this.SendPropertyChanged("CIM_ID");
					this.OnCIM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CIM_CIM_Log", Storage="_CIM", ThisKey="CIM_ID", OtherKey="ID", IsForeignKey=true)]
		public CIM CIM
		{
			get
			{
				return this._CIM.Entity;
			}
			set
			{
				CIM previousValue = this._CIM.Entity;
				if (((previousValue != value) 
							|| (this._CIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CIM.Entity = null;
						previousValue.CIM_Logs.Remove(this);
					}
					this._CIM.Entity = value;
					if ((value != null))
					{
						value.CIM_Logs.Add(this);
						this._CIM_ID = value.ID;
					}
					else
					{
						this._CIM_ID = default(int);
					}
					this.SendPropertyChanged("CIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractId;
		
		private string _ContractNumber;
		
		private string _EmployeeId;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _ContractType;
		
		private string _ContractFile;
		
		private string _Comment;
		
		private System.Nullable<bool> _NotificationClosed;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private string _UpdatedBy;
		
		private EntityRef<ContractType> _ContractType1;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIdChanging(int value);
    partial void OnContractIdChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnContractTypeChanging(int value);
    partial void OnContractTypeChanged();
    partial void OnContractFileChanging(string value);
    partial void OnContractFileChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNotificationClosedChanging(System.Nullable<bool> value);
    partial void OnNotificationClosedChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Contract()
		{
			this._ContractType1 = default(EntityRef<ContractType>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(30)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractType", DbType="Int NOT NULL")]
		public int ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					if (this._ContractType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractTypeChanging(value);
					this.SendPropertyChanging();
					this._ContractType = value;
					this.SendPropertyChanged("ContractType");
					this.OnContractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractFile", DbType="NVarChar(MAX)")]
		public string ContractFile
		{
			get
			{
				return this._ContractFile;
			}
			set
			{
				if ((this._ContractFile != value))
				{
					this.OnContractFileChanging(value);
					this.SendPropertyChanging();
					this._ContractFile = value;
					this.SendPropertyChanged("ContractFile");
					this.OnContractFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationClosed", DbType="Bit")]
		public System.Nullable<bool> NotificationClosed
		{
			get
			{
				return this._NotificationClosed;
			}
			set
			{
				if ((this._NotificationClosed != value))
				{
					this.OnNotificationClosedChanging(value);
					this.SendPropertyChanging();
					this._NotificationClosed = value;
					this.SendPropertyChanged("NotificationClosed");
					this.OnNotificationClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractType_Contract", Storage="_ContractType1", ThisKey="ContractType", OtherKey="ContractTypeId", IsForeignKey=true)]
		public ContractType ContractType1
		{
			get
			{
				return this._ContractType1.Entity;
			}
			set
			{
				ContractType previousValue = this._ContractType1.Entity;
				if (((previousValue != value) 
							|| (this._ContractType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractType1.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._ContractType1.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._ContractType = value.ContractTypeId;
					}
					else
					{
						this._ContractType = default(int);
					}
					this.SendPropertyChanged("ContractType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Contract", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractType")]
	public partial class ContractType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractTypeId;
		
		private string _ContractTypeName;
		
		private System.Nullable<int> _Duration;
		
		private string _Description;
		
		private EntitySet<Contract> _Contracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractTypeIdChanging(int value);
    partial void OnContractTypeIdChanged();
    partial void OnContractTypeNameChanging(string value);
    partial void OnContractTypeNameChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ContractType()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractTypeId
		{
			get
			{
				return this._ContractTypeId;
			}
			set
			{
				if ((this._ContractTypeId != value))
				{
					this.OnContractTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ContractTypeId = value;
					this.SendPropertyChanged("ContractTypeId");
					this.OnContractTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContractTypeName
		{
			get
			{
				return this._ContractTypeName;
			}
			set
			{
				if ((this._ContractTypeName != value))
				{
					this.OnContractTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ContractTypeName = value;
					this.SendPropertyChanged("ContractTypeName");
					this.OnContractTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractType_Contract", Storage="_Contracts", ThisKey="ContractTypeId", OtherKey="ContractType")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.ContractType1 = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.ContractType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentId;
		
		private string _DepartmentName;
		
		private System.Nullable<int> _ParentId;
		
		private string _Description;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<JobTitle> _JobTitles;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
		private EntitySet<STT> _STTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._JobTitles = new EntitySet<JobTitle>(new Action<JobTitle>(this.attach_JobTitles), new Action<JobTitle>(this.detach_JobTitles));
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			this._STTs = new EntitySet<STT>(new Action<STT>(this.attach_STTs), new Action<STT>(this.detach_STTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_JobRequest", Storage="_JobRequests", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_JobTitle", Storage="_JobTitles", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<JobTitle> JobTitles
		{
			get
			{
				return this._JobTitles;
			}
			set
			{
				this._JobTitles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="DepartmentId", OtherKey="SubDepartment")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_STT", Storage="_STTs", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<STT> STTs
		{
			get
			{
				return this._STTs;
			}
			set
			{
				this._STTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_JobTitles(JobTitle entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_JobTitles(JobTitle entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EForm")]
	public partial class EForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MasterID;
		
		private string _PersonID;
		
		private int _PersonType;
		
		private int _FormIndex;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private EntitySet<EForm_Detail> _EForm_Details;
		
		private EntitySet<PerformanceReview> _PerformanceReviews;
		
		private EntityRef<EFormMaster> _EFormMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMasterIDChanging(string value);
    partial void OnMasterIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnPersonTypeChanging(int value);
    partial void OnPersonTypeChanged();
    partial void OnFormIndexChanging(int value);
    partial void OnFormIndexChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public EForm()
		{
			this._EForm_Details = new EntitySet<EForm_Detail>(new Action<EForm_Detail>(this.attach_EForm_Details), new Action<EForm_Detail>(this.detach_EForm_Details));
			this._PerformanceReviews = new EntitySet<PerformanceReview>(new Action<PerformanceReview>(this.attach_PerformanceReviews), new Action<PerformanceReview>(this.detach_PerformanceReviews));
			this._EFormMaster = default(EntityRef<EFormMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterID", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._EFormMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="Int NOT NULL")]
		public int PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this.OnPersonTypeChanging(value);
					this.SendPropertyChanging();
					this._PersonType = value;
					this.SendPropertyChanged("PersonType");
					this.OnPersonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormIndex", DbType="Int NOT NULL")]
		public int FormIndex
		{
			get
			{
				return this._FormIndex;
			}
			set
			{
				if ((this._FormIndex != value))
				{
					this.OnFormIndexChanging(value);
					this.SendPropertyChanging();
					this._FormIndex = value;
					this.SendPropertyChanged("FormIndex");
					this.OnFormIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EForm_EForm_Detail", Storage="_EForm_Details", ThisKey="ID", OtherKey="EFormID")]
		public EntitySet<EForm_Detail> EForm_Details
		{
			get
			{
				return this._EForm_Details;
			}
			set
			{
				this._EForm_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EForm_PerformanceReview", Storage="_PerformanceReviews", ThisKey="ID", OtherKey="EFormID")]
		public EntitySet<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this._PerformanceReviews;
			}
			set
			{
				this._PerformanceReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EFormMaster_EForm", Storage="_EFormMaster", ThisKey="MasterID", OtherKey="Code", IsForeignKey=true)]
		public EFormMaster EFormMaster
		{
			get
			{
				return this._EFormMaster.Entity;
			}
			set
			{
				EFormMaster previousValue = this._EFormMaster.Entity;
				if (((previousValue != value) 
							|| (this._EFormMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EFormMaster.Entity = null;
						previousValue.EForms.Remove(this);
					}
					this._EFormMaster.Entity = value;
					if ((value != null))
					{
						value.EForms.Add(this);
						this._MasterID = value.Code;
					}
					else
					{
						this._MasterID = default(string);
					}
					this.SendPropertyChanged("EFormMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EForm_Details(EForm_Detail entity)
		{
			this.SendPropertyChanging();
			entity.EForm = this;
		}
		
		private void detach_EForm_Details(EForm_Detail entity)
		{
			this.SendPropertyChanging();
			entity.EForm = null;
		}
		
		private void attach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.EForm = this;
		}
		
		private void detach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.EForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EForm_Detail")]
	public partial class EForm_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlID;
		
		private string _Value;
		
		private int _EFormID;
		
		private EntityRef<EForm> _EForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlIDChanging(string value);
    partial void OnControlIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnEFormIDChanging(int value);
    partial void OnEFormIDChanged();
    #endregion
		
		public EForm_Detail()
		{
			this._EForm = default(EntityRef<EForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFormID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EFormID
		{
			get
			{
				return this._EFormID;
			}
			set
			{
				if ((this._EFormID != value))
				{
					if (this._EForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEFormIDChanging(value);
					this.SendPropertyChanging();
					this._EFormID = value;
					this.SendPropertyChanged("EFormID");
					this.OnEFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EForm_EForm_Detail", Storage="_EForm", ThisKey="EFormID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EForm EForm
		{
			get
			{
				return this._EForm.Entity;
			}
			set
			{
				EForm previousValue = this._EForm.Entity;
				if (((previousValue != value) 
							|| (this._EForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EForm.Entity = null;
						previousValue.EForm_Details.Remove(this);
					}
					this._EForm.Entity = value;
					if ((value != null))
					{
						value.EForm_Details.Add(this);
						this._EFormID = value.ID;
					}
					else
					{
						this._EFormID = default(int);
					}
					this.SendPropertyChanged("EForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EFormMaster")]
	public partial class EFormMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<EForm> _EForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public EFormMaster()
		{
			this._EForms = new EntitySet<EForm>(new Action<EForm>(this.attach_EForms), new Action<EForm>(this.detach_EForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EFormMaster_EForm", Storage="_EForms", ThisKey="Code", OtherKey="MasterID")]
		public EntitySet<EForm> EForms
		{
			get
			{
				return this._EForms;
			}
			set
			{
				this._EForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EForms(EForm entity)
		{
			this.SendPropertyChanging();
			entity.EFormMaster = this;
		}
		
		private void detach_EForms(EForm entity)
		{
			this.SendPropertyChanging();
			entity.EFormMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OldEmployeeId;
		
		private string _LastName;
		
		private string _VnLastName;
		
		private string _MiddleName;
		
		private string _VnMiddleName;
		
		private string _FirstName;
		
		private string _VnFirstName;
		
		private System.Nullable<bool> _Gender;
		
		private string _IDNumber;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ContractedDate;
		
		private string _Major;
		
		private string _Photograph;
		
		private string _JR;
		
		private string _JRApproval;
		
		private string _TempAddress;
		
		private string _VnTempAddress;
		
		private string _TempArea;
		
		private string _VnTempArea;
		
		private string _TempDistrict;
		
		private string _VnTempDistrict;
		
		private string _TempCityProvince;
		
		private string _VnTempCityProvince;
		
		private string _TempCountry;
		
		private string _VnTempCountry;
		
		private string _PermanentAddress;
		
		private string _VnPermanentAddress;
		
		private string _PermanentArea;
		
		private string _VnPermanentArea;
		
		private string _PermanentDistrict;
		
		private string _VnPermanentDistrict;
		
		private string _PermanentCityProvince;
		
		private string _VnPermanentCityProvince;
		
		private string _PermanentCountry;
		
		private string _VnPermanentCountry;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _PersonalEmail;
		
		private string _OfficeEmail;
		
		private string _ExtensionNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _POB;
		
		private string _VnPOB;
		
		private string _Nationality;
		
		private string _PlaceOfOrigin;
		
		private string _VnPlaceOfOrigin;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<double> _ResignedAllowance;
		
		private System.Nullable<bool> _LaborUnion;
		
		private System.Nullable<System.DateTime> _LaborUnionDate;
		
		private string _Remarks;
		
		private System.Nullable<bool> _MarriedStatus;
		
		private string _Floor;
		
		private string _Religion;
		
		private string _VnReligion;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private System.Nullable<int> _CandidateId;
		
		private string _EmergencyContactRelationship;
		
		private int _TitleId;
		
		private int _DepartmentId;
		
		private string _SkypeId;
		
		private string _YahooId;
		
		private string _SeatCode;
		
		private string _CVFile;
		
		private System.Nullable<int> _EmpStatusId;
		
		private string _Degree;
		
		private string _OtherDegree;
		
		private string _IDIssueLocation;
		
		private string _VnIDIssueLocation;
		
		private string _Race;
		
		private string _TaxID;
		
		private System.Nullable<System.DateTime> _TaxIssueDate;
		
		private string _SocialInsuranceNo;
		
		private string _InsuranceHospitalID;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _Project;
		
		private string _Manager;
		
		private string _ManagerId;
		
		private string _LocationCode;
		
		private EntitySet<AssetMaster> _AssetMasters;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Employee_Certification> _Employee_Certifications;
		
		private EntitySet<EmployeeDepartmentJobTitleTracking> _EmployeeDepartmentJobTitleTrackings;
		
		private EntitySet<LOT_Candidate_Exam> _LOT_Candidate_Exams;
		
		private EntitySet<PerformanceReview> _PerformanceReviews;
		
		private EntitySet<PTO> _PTOs;
		
		private EntitySet<PTO> _PTOs1;
		
		private EntitySet<PTO_Report> _PTO_Reports;
		
		private EntitySet<STT> _STTs;
		
		private EntitySet<Training_EmpEnglishInfo> _Training_EmpEnglishInfos;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<EmployeeStatus> _EmployeeStatus;
		
		private EntityRef<InsuranceHospital> _InsuranceHospital;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOldEmployeeIdChanging(string value);
    partial void OnOldEmployeeIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnVnLastNameChanging(string value);
    partial void OnVnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnVnMiddleNameChanging(string value);
    partial void OnVnMiddleNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnVnFirstNameChanging(string value);
    partial void OnVnFirstNameChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnContractedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractedDateChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnPhotographChanging(string value);
    partial void OnPhotographChanged();
    partial void OnJRChanging(string value);
    partial void OnJRChanged();
    partial void OnJRApprovalChanging(string value);
    partial void OnJRApprovalChanged();
    partial void OnTempAddressChanging(string value);
    partial void OnTempAddressChanged();
    partial void OnVnTempAddressChanging(string value);
    partial void OnVnTempAddressChanged();
    partial void OnTempAreaChanging(string value);
    partial void OnTempAreaChanged();
    partial void OnVnTempAreaChanging(string value);
    partial void OnVnTempAreaChanged();
    partial void OnTempDistrictChanging(string value);
    partial void OnTempDistrictChanged();
    partial void OnVnTempDistrictChanging(string value);
    partial void OnVnTempDistrictChanged();
    partial void OnTempCityProvinceChanging(string value);
    partial void OnTempCityProvinceChanged();
    partial void OnVnTempCityProvinceChanging(string value);
    partial void OnVnTempCityProvinceChanged();
    partial void OnTempCountryChanging(string value);
    partial void OnTempCountryChanged();
    partial void OnVnTempCountryChanging(string value);
    partial void OnVnTempCountryChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnVnPermanentAddressChanging(string value);
    partial void OnVnPermanentAddressChanged();
    partial void OnPermanentAreaChanging(string value);
    partial void OnPermanentAreaChanged();
    partial void OnVnPermanentAreaChanging(string value);
    partial void OnVnPermanentAreaChanged();
    partial void OnPermanentDistrictChanging(string value);
    partial void OnPermanentDistrictChanged();
    partial void OnVnPermanentDistrictChanging(string value);
    partial void OnVnPermanentDistrictChanged();
    partial void OnPermanentCityProvinceChanging(string value);
    partial void OnPermanentCityProvinceChanged();
    partial void OnVnPermanentCityProvinceChanging(string value);
    partial void OnVnPermanentCityProvinceChanged();
    partial void OnPermanentCountryChanging(string value);
    partial void OnPermanentCountryChanged();
    partial void OnVnPermanentCountryChanging(string value);
    partial void OnVnPermanentCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnPersonalEmailChanging(string value);
    partial void OnPersonalEmailChanged();
    partial void OnOfficeEmailChanging(string value);
    partial void OnOfficeEmailChanged();
    partial void OnExtensionNumberChanging(string value);
    partial void OnExtensionNumberChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnPOBChanging(string value);
    partial void OnPOBChanged();
    partial void OnVnPOBChanging(string value);
    partial void OnVnPOBChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPlaceOfOriginChanging(string value);
    partial void OnPlaceOfOriginChanged();
    partial void OnVnPlaceOfOriginChanging(string value);
    partial void OnVnPlaceOfOriginChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnResignedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResignedDateChanged();
    partial void OnResignedReasonChanging(string value);
    partial void OnResignedReasonChanged();
    partial void OnResignedAllowanceChanging(System.Nullable<double> value);
    partial void OnResignedAllowanceChanged();
    partial void OnLaborUnionChanging(System.Nullable<bool> value);
    partial void OnLaborUnionChanged();
    partial void OnLaborUnionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLaborUnionDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnMarriedStatusChanging(System.Nullable<bool> value);
    partial void OnMarriedStatusChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnVnReligionChanging(string value);
    partial void OnVnReligionChanged();
    partial void OnEmergencyContactNameChanging(string value);
    partial void OnEmergencyContactNameChanged();
    partial void OnEmergencyContactPhoneChanging(string value);
    partial void OnEmergencyContactPhoneChanged();
    partial void OnCandidateIdChanging(System.Nullable<int> value);
    partial void OnCandidateIdChanged();
    partial void OnEmergencyContactRelationshipChanging(string value);
    partial void OnEmergencyContactRelationshipChanged();
    partial void OnTitleIdChanging(int value);
    partial void OnTitleIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnSkypeIdChanging(string value);
    partial void OnSkypeIdChanged();
    partial void OnYahooIdChanging(string value);
    partial void OnYahooIdChanged();
    partial void OnSeatCodeChanging(string value);
    partial void OnSeatCodeChanged();
    partial void OnCVFileChanging(string value);
    partial void OnCVFileChanged();
    partial void OnEmpStatusIdChanging(System.Nullable<int> value);
    partial void OnEmpStatusIdChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnOtherDegreeChanging(string value);
    partial void OnOtherDegreeChanged();
    partial void OnIDIssueLocationChanging(string value);
    partial void OnIDIssueLocationChanged();
    partial void OnVnIDIssueLocationChanging(string value);
    partial void OnVnIDIssueLocationChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnTaxIDChanging(string value);
    partial void OnTaxIDChanged();
    partial void OnTaxIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaxIssueDateChanged();
    partial void OnSocialInsuranceNoChanging(string value);
    partial void OnSocialInsuranceNoChanged();
    partial void OnInsuranceHospitalIDChanging(string value);
    partial void OnInsuranceHospitalIDChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnManagerIdChanging(string value);
    partial void OnManagerIdChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    #endregion
		
		public Employee()
		{
			this._AssetMasters = new EntitySet<AssetMaster>(new Action<AssetMaster>(this.attach_AssetMasters), new Action<AssetMaster>(this.detach_AssetMasters));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Employee_Certifications = new EntitySet<Employee_Certification>(new Action<Employee_Certification>(this.attach_Employee_Certifications), new Action<Employee_Certification>(this.detach_Employee_Certifications));
			this._EmployeeDepartmentJobTitleTrackings = new EntitySet<EmployeeDepartmentJobTitleTracking>(new Action<EmployeeDepartmentJobTitleTracking>(this.attach_EmployeeDepartmentJobTitleTrackings), new Action<EmployeeDepartmentJobTitleTracking>(this.detach_EmployeeDepartmentJobTitleTrackings));
			this._LOT_Candidate_Exams = new EntitySet<LOT_Candidate_Exam>(new Action<LOT_Candidate_Exam>(this.attach_LOT_Candidate_Exams), new Action<LOT_Candidate_Exam>(this.detach_LOT_Candidate_Exams));
			this._PerformanceReviews = new EntitySet<PerformanceReview>(new Action<PerformanceReview>(this.attach_PerformanceReviews), new Action<PerformanceReview>(this.detach_PerformanceReviews));
			this._PTOs = new EntitySet<PTO>(new Action<PTO>(this.attach_PTOs), new Action<PTO>(this.detach_PTOs));
			this._PTOs1 = new EntitySet<PTO>(new Action<PTO>(this.attach_PTOs1), new Action<PTO>(this.detach_PTOs1));
			this._PTO_Reports = new EntitySet<PTO_Report>(new Action<PTO_Report>(this.attach_PTO_Reports), new Action<PTO_Report>(this.detach_PTO_Reports));
			this._STTs = new EntitySet<STT>(new Action<STT>(this.attach_STTs), new Action<STT>(this.detach_STTs));
			this._Training_EmpEnglishInfos = new EntitySet<Training_EmpEnglishInfo>(new Action<Training_EmpEnglishInfo>(this.attach_Training_EmpEnglishInfos), new Action<Training_EmpEnglishInfo>(this.detach_Training_EmpEnglishInfos));
			this._Department = default(EntityRef<Department>);
			this._Employee1 = default(EntityRef<Employee>);
			this._EmployeeStatus = default(EntityRef<EmployeeStatus>);
			this._InsuranceHospital = default(EntityRef<InsuranceHospital>);
			this._JobTitleLevel = default(EntityRef<JobTitleLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldEmployeeId", DbType="NVarChar(100)")]
		public string OldEmployeeId
		{
			get
			{
				return this._OldEmployeeId;
			}
			set
			{
				if ((this._OldEmployeeId != value))
				{
					this.OnOldEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._OldEmployeeId = value;
					this.SendPropertyChanged("OldEmployeeId");
					this.OnOldEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnLastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnLastName
		{
			get
			{
				return this._VnLastName;
			}
			set
			{
				if ((this._VnLastName != value))
				{
					this.OnVnLastNameChanging(value);
					this.SendPropertyChanging();
					this._VnLastName = value;
					this.SendPropertyChanged("VnLastName");
					this.OnVnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(20)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnMiddleName", DbType="NVarChar(20)")]
		public string VnMiddleName
		{
			get
			{
				return this._VnMiddleName;
			}
			set
			{
				if ((this._VnMiddleName != value))
				{
					this.OnVnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._VnMiddleName = value;
					this.SendPropertyChanged("VnMiddleName");
					this.OnVnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnFirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnFirstName
		{
			get
			{
				return this._VnFirstName;
			}
			set
			{
				if ((this._VnFirstName != value))
				{
					this.OnVnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._VnFirstName = value;
					this.SendPropertyChanged("VnFirstName");
					this.OnVnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(20)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractedDate
		{
			get
			{
				return this._ContractedDate;
			}
			set
			{
				if ((this._ContractedDate != value))
				{
					this.OnContractedDateChanging(value);
					this.SendPropertyChanging();
					this._ContractedDate = value;
					this.SendPropertyChanged("ContractedDate");
					this.OnContractedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(255)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this.OnPhotographChanging(value);
					this.SendPropertyChanging();
					this._Photograph = value;
					this.SendPropertyChanged("Photograph");
					this.OnPhotographChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this.OnJRChanging(value);
					this.SendPropertyChanging();
					this._JR = value;
					this.SendPropertyChanged("JR");
					this.OnJRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRApproval", DbType="NVarChar(10)")]
		public string JRApproval
		{
			get
			{
				return this._JRApproval;
			}
			set
			{
				if ((this._JRApproval != value))
				{
					this.OnJRApprovalChanging(value);
					this.SendPropertyChanging();
					this._JRApproval = value;
					this.SendPropertyChanged("JRApproval");
					this.OnJRApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress", DbType="NVarChar(255)")]
		public string TempAddress
		{
			get
			{
				return this._TempAddress;
			}
			set
			{
				if ((this._TempAddress != value))
				{
					this.OnTempAddressChanging(value);
					this.SendPropertyChanging();
					this._TempAddress = value;
					this.SendPropertyChanged("TempAddress");
					this.OnTempAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempAddress", DbType="NVarChar(255)")]
		public string VnTempAddress
		{
			get
			{
				return this._VnTempAddress;
			}
			set
			{
				if ((this._VnTempAddress != value))
				{
					this.OnVnTempAddressChanging(value);
					this.SendPropertyChanging();
					this._VnTempAddress = value;
					this.SendPropertyChanged("VnTempAddress");
					this.OnVnTempAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempArea", DbType="NVarChar(255)")]
		public string TempArea
		{
			get
			{
				return this._TempArea;
			}
			set
			{
				if ((this._TempArea != value))
				{
					this.OnTempAreaChanging(value);
					this.SendPropertyChanging();
					this._TempArea = value;
					this.SendPropertyChanged("TempArea");
					this.OnTempAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempArea", DbType="NVarChar(255)")]
		public string VnTempArea
		{
			get
			{
				return this._VnTempArea;
			}
			set
			{
				if ((this._VnTempArea != value))
				{
					this.OnVnTempAreaChanging(value);
					this.SendPropertyChanging();
					this._VnTempArea = value;
					this.SendPropertyChanged("VnTempArea");
					this.OnVnTempAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempDistrict", DbType="NVarChar(255)")]
		public string TempDistrict
		{
			get
			{
				return this._TempDistrict;
			}
			set
			{
				if ((this._TempDistrict != value))
				{
					this.OnTempDistrictChanging(value);
					this.SendPropertyChanging();
					this._TempDistrict = value;
					this.SendPropertyChanged("TempDistrict");
					this.OnTempDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempDistrict", DbType="NVarChar(255)")]
		public string VnTempDistrict
		{
			get
			{
				return this._VnTempDistrict;
			}
			set
			{
				if ((this._VnTempDistrict != value))
				{
					this.OnVnTempDistrictChanging(value);
					this.SendPropertyChanging();
					this._VnTempDistrict = value;
					this.SendPropertyChanged("VnTempDistrict");
					this.OnVnTempDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCityProvince", DbType="NVarChar(255)")]
		public string TempCityProvince
		{
			get
			{
				return this._TempCityProvince;
			}
			set
			{
				if ((this._TempCityProvince != value))
				{
					this.OnTempCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._TempCityProvince = value;
					this.SendPropertyChanged("TempCityProvince");
					this.OnTempCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCityProvince", DbType="NVarChar(255)")]
		public string VnTempCityProvince
		{
			get
			{
				return this._VnTempCityProvince;
			}
			set
			{
				if ((this._VnTempCityProvince != value))
				{
					this.OnVnTempCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._VnTempCityProvince = value;
					this.SendPropertyChanged("VnTempCityProvince");
					this.OnVnTempCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCountry", DbType="NVarChar(255)")]
		public string TempCountry
		{
			get
			{
				return this._TempCountry;
			}
			set
			{
				if ((this._TempCountry != value))
				{
					this.OnTempCountryChanging(value);
					this.SendPropertyChanging();
					this._TempCountry = value;
					this.SendPropertyChanged("TempCountry");
					this.OnTempCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCountry", DbType="NVarChar(255)")]
		public string VnTempCountry
		{
			get
			{
				return this._VnTempCountry;
			}
			set
			{
				if ((this._VnTempCountry != value))
				{
					this.OnVnTempCountryChanging(value);
					this.SendPropertyChanging();
					this._VnTempCountry = value;
					this.SendPropertyChanged("VnTempCountry");
					this.OnVnTempCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(255)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentAddress", DbType="NVarChar(255)")]
		public string VnPermanentAddress
		{
			get
			{
				return this._VnPermanentAddress;
			}
			set
			{
				if ((this._VnPermanentAddress != value))
				{
					this.OnVnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentAddress = value;
					this.SendPropertyChanged("VnPermanentAddress");
					this.OnVnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentArea", DbType="NVarChar(255)")]
		public string PermanentArea
		{
			get
			{
				return this._PermanentArea;
			}
			set
			{
				if ((this._PermanentArea != value))
				{
					this.OnPermanentAreaChanging(value);
					this.SendPropertyChanging();
					this._PermanentArea = value;
					this.SendPropertyChanged("PermanentArea");
					this.OnPermanentAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentArea", DbType="NVarChar(255)")]
		public string VnPermanentArea
		{
			get
			{
				return this._VnPermanentArea;
			}
			set
			{
				if ((this._VnPermanentArea != value))
				{
					this.OnVnPermanentAreaChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentArea = value;
					this.SendPropertyChanged("VnPermanentArea");
					this.OnVnPermanentAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentDistrict", DbType="NVarChar(255)")]
		public string PermanentDistrict
		{
			get
			{
				return this._PermanentDistrict;
			}
			set
			{
				if ((this._PermanentDistrict != value))
				{
					this.OnPermanentDistrictChanging(value);
					this.SendPropertyChanging();
					this._PermanentDistrict = value;
					this.SendPropertyChanged("PermanentDistrict");
					this.OnPermanentDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentDistrict", DbType="NVarChar(255)")]
		public string VnPermanentDistrict
		{
			get
			{
				return this._VnPermanentDistrict;
			}
			set
			{
				if ((this._VnPermanentDistrict != value))
				{
					this.OnVnPermanentDistrictChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentDistrict = value;
					this.SendPropertyChanged("VnPermanentDistrict");
					this.OnVnPermanentDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityProvince", DbType="NVarChar(255)")]
		public string PermanentCityProvince
		{
			get
			{
				return this._PermanentCityProvince;
			}
			set
			{
				if ((this._PermanentCityProvince != value))
				{
					this.OnPermanentCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._PermanentCityProvince = value;
					this.SendPropertyChanged("PermanentCityProvince");
					this.OnPermanentCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCityProvince", DbType="NVarChar(255)")]
		public string VnPermanentCityProvince
		{
			get
			{
				return this._VnPermanentCityProvince;
			}
			set
			{
				if ((this._VnPermanentCityProvince != value))
				{
					this.OnVnPermanentCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentCityProvince = value;
					this.SendPropertyChanged("VnPermanentCityProvince");
					this.OnVnPermanentCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCountry", DbType="NVarChar(255)")]
		public string PermanentCountry
		{
			get
			{
				return this._PermanentCountry;
			}
			set
			{
				if ((this._PermanentCountry != value))
				{
					this.OnPermanentCountryChanging(value);
					this.SendPropertyChanging();
					this._PermanentCountry = value;
					this.SendPropertyChanged("PermanentCountry");
					this.OnPermanentCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCountry", DbType="NVarChar(255)")]
		public string VnPermanentCountry
		{
			get
			{
				return this._VnPermanentCountry;
			}
			set
			{
				if ((this._VnPermanentCountry != value))
				{
					this.OnVnPermanentCountryChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentCountry = value;
					this.SendPropertyChanged("VnPermanentCountry");
					this.OnVnPermanentCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(100)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(100)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalEmail", DbType="NVarChar(100)")]
		public string PersonalEmail
		{
			get
			{
				return this._PersonalEmail;
			}
			set
			{
				if ((this._PersonalEmail != value))
				{
					this.OnPersonalEmailChanging(value);
					this.SendPropertyChanging();
					this._PersonalEmail = value;
					this.SendPropertyChanged("PersonalEmail");
					this.OnPersonalEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this.OnOfficeEmailChanging(value);
					this.SendPropertyChanging();
					this._OfficeEmail = value;
					this.SendPropertyChanged("OfficeEmail");
					this.OnOfficeEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(10)")]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this.OnExtensionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExtensionNumber = value;
					this.SendPropertyChanged("ExtensionNumber");
					this.OnExtensionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="NVarChar(100)")]
		public string POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this.OnPOBChanging(value);
					this.SendPropertyChanging();
					this._POB = value;
					this.SendPropertyChanged("POB");
					this.OnPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPOB", DbType="NVarChar(100)")]
		public string VnPOB
		{
			get
			{
				return this._VnPOB;
			}
			set
			{
				if ((this._VnPOB != value))
				{
					this.OnVnPOBChanging(value);
					this.SendPropertyChanging();
					this._VnPOB = value;
					this.SendPropertyChanged("VnPOB");
					this.OnVnPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(30)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this.OnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfOrigin = value;
					this.SendPropertyChanged("PlaceOfOrigin");
					this.OnPlaceOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPlaceOfOrigin", DbType="NVarChar(100)")]
		public string VnPlaceOfOrigin
		{
			get
			{
				return this._VnPlaceOfOrigin;
			}
			set
			{
				if ((this._VnPlaceOfOrigin != value))
				{
					this.OnVnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._VnPlaceOfOrigin = value;
					this.SendPropertyChanged("VnPlaceOfOrigin");
					this.OnVnPlaceOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(100)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this.OnResignedDateChanging(value);
					this.SendPropertyChanging();
					this._ResignedDate = value;
					this.SendPropertyChanged("ResignedDate");
					this.OnResignedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this.OnResignedReasonChanging(value);
					this.SendPropertyChanging();
					this._ResignedReason = value;
					this.SendPropertyChanged("ResignedReason");
					this.OnResignedReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedAllowance", DbType="Float")]
		public System.Nullable<double> ResignedAllowance
		{
			get
			{
				return this._ResignedAllowance;
			}
			set
			{
				if ((this._ResignedAllowance != value))
				{
					this.OnResignedAllowanceChanging(value);
					this.SendPropertyChanging();
					this._ResignedAllowance = value;
					this.SendPropertyChanged("ResignedAllowance");
					this.OnResignedAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnion", DbType="Bit")]
		public System.Nullable<bool> LaborUnion
		{
			get
			{
				return this._LaborUnion;
			}
			set
			{
				if ((this._LaborUnion != value))
				{
					this.OnLaborUnionChanging(value);
					this.SendPropertyChanging();
					this._LaborUnion = value;
					this.SendPropertyChanged("LaborUnion");
					this.OnLaborUnionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaborUnionDate
		{
			get
			{
				return this._LaborUnionDate;
			}
			set
			{
				if ((this._LaborUnionDate != value))
				{
					this.OnLaborUnionDateChanging(value);
					this.SendPropertyChanging();
					this._LaborUnionDate = value;
					this.SendPropertyChanged("LaborUnionDate");
					this.OnLaborUnionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedStatus", DbType="Bit")]
		public System.Nullable<bool> MarriedStatus
		{
			get
			{
				return this._MarriedStatus;
			}
			set
			{
				if ((this._MarriedStatus != value))
				{
					this.OnMarriedStatusChanging(value);
					this.SendPropertyChanging();
					this._MarriedStatus = value;
					this.SendPropertyChanged("MarriedStatus");
					this.OnMarriedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(20)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnReligion", DbType="NVarChar(50)")]
		public string VnReligion
		{
			get
			{
				return this._VnReligion;
			}
			set
			{
				if ((this._VnReligion != value))
				{
					this.OnVnReligionChanging(value);
					this.SendPropertyChanging();
					this._VnReligion = value;
					this.SendPropertyChanged("VnReligion");
					this.OnVnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(100)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this.OnEmergencyContactNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactName = value;
					this.SendPropertyChanged("EmergencyContactName");
					this.OnEmergencyContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(100)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this.OnEmergencyContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactPhone = value;
					this.SendPropertyChanged("EmergencyContactPhone");
					this.OnEmergencyContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int")]
		public System.Nullable<int> CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactRelationship", DbType="NVarChar(100)")]
		public string EmergencyContactRelationship
		{
			get
			{
				return this._EmergencyContactRelationship;
			}
			set
			{
				if ((this._EmergencyContactRelationship != value))
				{
					this.OnEmergencyContactRelationshipChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactRelationship = value;
					this.SendPropertyChanged("EmergencyContactRelationship");
					this.OnEmergencyContactRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int NOT NULL")]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					if (this._JobTitleLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeId", DbType="NVarChar(50)")]
		public string SkypeId
		{
			get
			{
				return this._SkypeId;
			}
			set
			{
				if ((this._SkypeId != value))
				{
					this.OnSkypeIdChanging(value);
					this.SendPropertyChanging();
					this._SkypeId = value;
					this.SendPropertyChanged("SkypeId");
					this.OnSkypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YahooId", DbType="NVarChar(50)")]
		public string YahooId
		{
			get
			{
				return this._YahooId;
			}
			set
			{
				if ((this._YahooId != value))
				{
					this.OnYahooIdChanging(value);
					this.SendPropertyChanging();
					this._YahooId = value;
					this.SendPropertyChanged("YahooId");
					this.OnYahooIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCode", DbType="NVarChar(20)")]
		public string SeatCode
		{
			get
			{
				return this._SeatCode;
			}
			set
			{
				if ((this._SeatCode != value))
				{
					this.OnSeatCodeChanging(value);
					this.SendPropertyChanging();
					this._SeatCode = value;
					this.SendPropertyChanged("SeatCode");
					this.OnSeatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this.OnCVFileChanging(value);
					this.SendPropertyChanging();
					this._CVFile = value;
					this.SendPropertyChanged("CVFile");
					this.OnCVFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatusId", DbType="Int")]
		public System.Nullable<int> EmpStatusId
		{
			get
			{
				return this._EmpStatusId;
			}
			set
			{
				if ((this._EmpStatusId != value))
				{
					if (this._EmployeeStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._EmpStatusId = value;
					this.SendPropertyChanged("EmpStatusId");
					this.OnEmpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(200)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDegree", DbType="NVarChar(200)")]
		public string OtherDegree
		{
			get
			{
				return this._OtherDegree;
			}
			set
			{
				if ((this._OtherDegree != value))
				{
					this.OnOtherDegreeChanging(value);
					this.SendPropertyChanging();
					this._OtherDegree = value;
					this.SendPropertyChanged("OtherDegree");
					this.OnOtherDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIssueLocation", DbType="NVarChar(200)")]
		public string IDIssueLocation
		{
			get
			{
				return this._IDIssueLocation;
			}
			set
			{
				if ((this._IDIssueLocation != value))
				{
					this.OnIDIssueLocationChanging(value);
					this.SendPropertyChanging();
					this._IDIssueLocation = value;
					this.SendPropertyChanged("IDIssueLocation");
					this.OnIDIssueLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnIDIssueLocation", DbType="NVarChar(200)")]
		public string VnIDIssueLocation
		{
			get
			{
				return this._VnIDIssueLocation;
			}
			set
			{
				if ((this._VnIDIssueLocation != value))
				{
					this.OnVnIDIssueLocationChanging(value);
					this.SendPropertyChanging();
					this._VnIDIssueLocation = value;
					this.SendPropertyChanged("VnIDIssueLocation");
					this.OnVnIDIssueLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="NVarChar(20)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this.OnTaxIDChanging(value);
					this.SendPropertyChanging();
					this._TaxID = value;
					this.SendPropertyChanged("TaxID");
					this.OnTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxIssueDate
		{
			get
			{
				return this._TaxIssueDate;
			}
			set
			{
				if ((this._TaxIssueDate != value))
				{
					this.OnTaxIssueDateChanging(value);
					this.SendPropertyChanging();
					this._TaxIssueDate = value;
					this.SendPropertyChanged("TaxIssueDate");
					this.OnTaxIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialInsuranceNo", DbType="NVarChar(20)")]
		public string SocialInsuranceNo
		{
			get
			{
				return this._SocialInsuranceNo;
			}
			set
			{
				if ((this._SocialInsuranceNo != value))
				{
					this.OnSocialInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceNo = value;
					this.SendPropertyChanged("SocialInsuranceNo");
					this.OnSocialInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceHospitalID", DbType="VarChar(6)")]
		public string InsuranceHospitalID
		{
			get
			{
				return this._InsuranceHospitalID;
			}
			set
			{
				if ((this._InsuranceHospitalID != value))
				{
					if (this._InsuranceHospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceHospitalID = value;
					this.SendPropertyChanged("InsuranceHospitalID");
					this.OnInsuranceHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AssetMaster", Storage="_AssetMasters", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<AssetMaster> AssetMasters
		{
			get
			{
				return this._AssetMasters;
			}
			set
			{
				this._AssetMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employees", ThisKey="ID", OtherKey="ManagerId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_Certification", Storage="_Employee_Certifications", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<Employee_Certification> Employee_Certifications
		{
			get
			{
				return this._Employee_Certifications;
			}
			set
			{
				this._Employee_Certifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDepartmentJobTitleTracking", Storage="_EmployeeDepartmentJobTitleTrackings", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<EmployeeDepartmentJobTitleTracking> EmployeeDepartmentJobTitleTrackings
		{
			get
			{
				return this._EmployeeDepartmentJobTitleTrackings;
			}
			set
			{
				this._EmployeeDepartmentJobTitleTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LOT_Candidate_Exam", Storage="_LOT_Candidate_Exams", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<LOT_Candidate_Exam> LOT_Candidate_Exams
		{
			get
			{
				return this._LOT_Candidate_Exams;
			}
			set
			{
				this._LOT_Candidate_Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PerformanceReview", Storage="_PerformanceReviews", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this._PerformanceReviews;
			}
			set
			{
				this._PerformanceReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO", Storage="_PTOs", ThisKey="ID", OtherKey="Submitter")]
		public EntitySet<PTO> PTOs
		{
			get
			{
				return this._PTOs;
			}
			set
			{
				this._PTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO1", Storage="_PTOs1", ThisKey="ID", OtherKey="SubmitTo")]
		public EntitySet<PTO> PTOs1
		{
			get
			{
				return this._PTOs1;
			}
			set
			{
				this._PTOs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO_Report", Storage="_PTO_Reports", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<PTO_Report> PTO_Reports
		{
			get
			{
				return this._PTO_Reports;
			}
			set
			{
				this._PTO_Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_STT", Storage="_STTs", ThisKey="ID", OtherKey="ManagerId")]
		public EntitySet<STT> STTs
		{
			get
			{
				return this._STTs;
			}
			set
			{
				this._STTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Training_EmpEnglishInfo", Storage="_Training_EmpEnglishInfos", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<Training_EmpEnglishInfo> Training_EmpEnglishInfos
		{
			get
			{
				return this._Training_EmpEnglishInfos;
			}
			set
			{
				this._Training_EmpEnglishInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="ManagerId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._ManagerId = value.ID;
					}
					else
					{
						this._ManagerId = default(string);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeStatus_Employee", Storage="_EmployeeStatus", ThisKey="EmpStatusId", OtherKey="StatusId", IsForeignKey=true)]
		public EmployeeStatus EmployeeStatus
		{
			get
			{
				return this._EmployeeStatus.Entity;
			}
			set
			{
				EmployeeStatus previousValue = this._EmployeeStatus.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeStatus.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmployeeStatus.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EmpStatusId = value.StatusId;
					}
					else
					{
						this._EmpStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmployeeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsuranceHospital_Employee", Storage="_InsuranceHospital", ThisKey="InsuranceHospitalID", OtherKey="ID", IsForeignKey=true)]
		public InsuranceHospital InsuranceHospital
		{
			get
			{
				return this._InsuranceHospital.Entity;
			}
			set
			{
				InsuranceHospital previousValue = this._InsuranceHospital.Entity;
				if (((previousValue != value) 
							|| (this._InsuranceHospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InsuranceHospital.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._InsuranceHospital.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._InsuranceHospitalID = value.ID;
					}
					else
					{
						this._InsuranceHospitalID = default(string);
					}
					this.SendPropertyChanged("InsuranceHospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Employee", Storage="_JobTitleLevel", ThisKey="TitleId", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel
		{
			get
			{
				return this._JobTitleLevel.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._JobTitleLevel.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._TitleId = value.ID;
					}
					else
					{
						this._TitleId = default(int);
					}
					this.SendPropertyChanged("JobTitleLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AssetMasters(AssetMaster entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Employee_Certifications(Employee_Certification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Employee_Certifications(Employee_Certification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeDepartmentJobTitleTrackings(EmployeeDepartmentJobTitleTracking entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeDepartmentJobTitleTrackings(EmployeeDepartmentJobTitleTracking entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PTOs1(PTO entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_PTOs1(PTO entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_PTO_Reports(PTO_Report entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PTO_Reports(PTO_Report entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Training_EmpEnglishInfos(Training_EmpEnglishInfo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Training_EmpEnglishInfos(Training_EmpEnglishInfo entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_Certification")]
	public partial class Employee_Certification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EmployeeId;
		
		private int _CertificationId;
		
		private string _Remark;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Training_CertificationMaster> _Training_CertificationMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnCertificationIdChanging(int value);
    partial void OnCertificationIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Employee_Certification()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Training_CertificationMaster = default(EntityRef<Training_CertificationMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationId", DbType="Int NOT NULL")]
		public int CertificationId
		{
			get
			{
				return this._CertificationId;
			}
			set
			{
				if ((this._CertificationId != value))
				{
					if (this._Training_CertificationMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificationIdChanging(value);
					this.SendPropertyChanging();
					this._CertificationId = value;
					this.SendPropertyChanged("CertificationId");
					this.OnCertificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee_Certification", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Employee_Certifications.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Employee_Certifications.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_CertificationMaster_Employee_Certification", Storage="_Training_CertificationMaster", ThisKey="CertificationId", OtherKey="ID", IsForeignKey=true)]
		public Training_CertificationMaster Training_CertificationMaster
		{
			get
			{
				return this._Training_CertificationMaster.Entity;
			}
			set
			{
				Training_CertificationMaster previousValue = this._Training_CertificationMaster.Entity;
				if (((previousValue != value) 
							|| (this._Training_CertificationMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_CertificationMaster.Entity = null;
						previousValue.Employee_Certifications.Remove(this);
					}
					this._Training_CertificationMaster.Entity = value;
					if ((value != null))
					{
						value.Employee_Certifications.Add(this);
						this._CertificationId = value.ID;
					}
					else
					{
						this._CertificationId = default(int);
					}
					this.SendPropertyChanged("Training_CertificationMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDepartmentJobTitleTracking")]
	public partial class EmployeeDepartmentJobTitleTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeId;
		
		private string _DepartmentName;
		
		private string _JobTitleName;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnJobTitleNameChanging(string value);
    partial void OnJobTitleNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public EmployeeDepartmentJobTitleTracking()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleName", DbType="NVarChar(100)")]
		public string JobTitleName
		{
			get
			{
				return this._JobTitleName;
			}
			set
			{
				if ((this._JobTitleName != value))
				{
					this.OnJobTitleNameChanging(value);
					this.SendPropertyChanging();
					this._JobTitleName = value;
					this.SendPropertyChanged("JobTitleName");
					this.OnJobTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDepartmentJobTitleTracking", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeDepartmentJobTitleTrackings.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeDepartmentJobTitleTrackings.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeInsuranceHospitalTracking")]
	public partial class EmployeeInsuranceHospitalTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeId;
		
		private string _InsuranceHospitalID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private string _UpdatedBy;
		
		private EntityRef<InsuranceHospital> _InsuranceHospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnInsuranceHospitalIDChanging(string value);
    partial void OnInsuranceHospitalIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public EmployeeInsuranceHospitalTracking()
		{
			this._InsuranceHospital = default(EntityRef<InsuranceHospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceHospitalID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InsuranceHospitalID
		{
			get
			{
				return this._InsuranceHospitalID;
			}
			set
			{
				if ((this._InsuranceHospitalID != value))
				{
					if (this._InsuranceHospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceHospitalID = value;
					this.SendPropertyChanged("InsuranceHospitalID");
					this.OnInsuranceHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsuranceHospital_EmployeeInsuranceHospitalTracking", Storage="_InsuranceHospital", ThisKey="InsuranceHospitalID", OtherKey="ID", IsForeignKey=true)]
		public InsuranceHospital InsuranceHospital
		{
			get
			{
				return this._InsuranceHospital.Entity;
			}
			set
			{
				InsuranceHospital previousValue = this._InsuranceHospital.Entity;
				if (((previousValue != value) 
							|| (this._InsuranceHospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InsuranceHospital.Entity = null;
						previousValue.EmployeeInsuranceHospitalTrackings.Remove(this);
					}
					this._InsuranceHospital.Entity = value;
					if ((value != null))
					{
						value.EmployeeInsuranceHospitalTrackings.Add(this);
						this._InsuranceHospitalID = value.ID;
					}
					else
					{
						this._InsuranceHospitalID = default(string);
					}
					this.SendPropertyChanged("InsuranceHospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeStatus")]
	public partial class EmployeeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusId;
		
		private string _StatusName;
		
		private string _Description;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public EmployeeStatus()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeStatus_Employee", Storage="_Employees", ThisKey="StatusId", OtherKey="EmpStatusId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeStatus = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Floor")]
	public partial class Floor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _OfficeID;
		
		private System.Nullable<int> _DisplayOrder;
		
		private System.Nullable<int> _MaxSeat;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<SeatCode> _SeatCodes;
		
		private EntityRef<Office> _Office;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOfficeIDChanging(int value);
    partial void OnOfficeIDChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnMaxSeatChanging(System.Nullable<int> value);
    partial void OnMaxSeatChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Floor()
		{
			this._SeatCodes = new EntitySet<SeatCode>(new Action<SeatCode>(this.attach_SeatCodes), new Action<SeatCode>(this.detach_SeatCodes));
			this._Office = default(EntityRef<Office>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSeat", DbType="Int")]
		public System.Nullable<int> MaxSeat
		{
			get
			{
				return this._MaxSeat;
			}
			set
			{
				if ((this._MaxSeat != value))
				{
					this.OnMaxSeatChanging(value);
					this.SendPropertyChanging();
					this._MaxSeat = value;
					this.SendPropertyChanged("MaxSeat");
					this.OnMaxSeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_SeatCode", Storage="_SeatCodes", ThisKey="ID", OtherKey="FloorID")]
		public EntitySet<SeatCode> SeatCodes
		{
			get
			{
				return this._SeatCodes;
			}
			set
			{
				this._SeatCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Floor", Storage="_Office", ThisKey="OfficeID", OtherKey="ID", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.Floors.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.Floors.Add(this);
						this._OfficeID = value.ID;
					}
					else
					{
						this._OfficeID = default(int);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SeatCodes(SeatCode entity)
		{
			this.SendPropertyChanging();
			entity.Floor = this;
		}
		
		private void detach_SeatCodes(SeatCode entity)
		{
			this.SendPropertyChanging();
			entity.Floor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private string _GroupName;
		
		private string _Description;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<GroupPermission> _GroupPermissions;
		
		private EntitySet<User_Group> _User_Groups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Group()
		{
			this._GroupPermissions = new EntitySet<GroupPermission>(new Action<GroupPermission>(this.attach_GroupPermissions), new Action<GroupPermission>(this.detach_GroupPermissions));
			this._User_Groups = new EntitySet<User_Group>(new Action<User_Group>(this.attach_User_Groups), new Action<User_Group>(this.detach_User_Groups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPermission", Storage="_GroupPermissions", ThisKey="GroupId", OtherKey="GroupId")]
		public EntitySet<GroupPermission> GroupPermissions
		{
			get
			{
				return this._GroupPermissions;
			}
			set
			{
				this._GroupPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User_Group", Storage="_User_Groups", ThisKey="GroupId", OtherKey="GroupId")]
		public EntitySet<User_Group> User_Groups
		{
			get
			{
				return this._User_Groups;
			}
			set
			{
				this._User_Groups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupPermissions(GroupPermission entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupPermissions(GroupPermission entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupPermission")]
	public partial class GroupPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleId;
		
		private int _GroupId;
		
		private int _PermissionId;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public GroupPermission()
		{
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPermission", Storage="_Group", ThisKey="GroupId", OtherKey="GroupId", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupPermissions.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupPermissions.Add(this);
						this._GroupId = value.GroupId;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsuranceHospital")]
	public partial class InsuranceHospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Address;
		
		private bool _IsPublic;
		
		private string _Description;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<EmployeeInsuranceHospitalTracking> _EmployeeInsuranceHospitalTrackings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InsuranceHospital()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._EmployeeInsuranceHospitalTrackings = new EntitySet<EmployeeInsuranceHospitalTracking>(new Action<EmployeeInsuranceHospitalTracking>(this.attach_EmployeeInsuranceHospitalTrackings), new Action<EmployeeInsuranceHospitalTracking>(this.detach_EmployeeInsuranceHospitalTrackings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsuranceHospital_Employee", Storage="_Employees", ThisKey="ID", OtherKey="InsuranceHospitalID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsuranceHospital_EmployeeInsuranceHospitalTracking", Storage="_EmployeeInsuranceHospitalTrackings", ThisKey="ID", OtherKey="InsuranceHospitalID")]
		public EntitySet<EmployeeInsuranceHospitalTracking> EmployeeInsuranceHospitalTrackings
		{
			get
			{
				return this._EmployeeInsuranceHospitalTrackings;
			}
			set
			{
				this._EmployeeInsuranceHospitalTrackings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.InsuranceHospital = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.InsuranceHospital = null;
		}
		
		private void attach_EmployeeInsuranceHospitalTrackings(EmployeeInsuranceHospitalTracking entity)
		{
			this.SendPropertyChanging();
			entity.InsuranceHospital = this;
		}
		
		private void detach_EmployeeInsuranceHospitalTrackings(EmployeeInsuranceHospitalTracking entity)
		{
			this.SendPropertyChanging();
			entity.InsuranceHospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interview")]
	public partial class Interview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _InterviewDate;
		
		private string _Venue;
		
		private string _Pic;
		
		private string _InterviewFormId;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.Nullable<int> _CandidateId;
		
		private System.Nullable<int> _InterviewStatusId;
		
		private System.Nullable<int> _Round;
		
		private System.Nullable<int> _InterviewResultId;
		
		private string _Note;
		
		private System.Nullable<bool> _OldInterView;
		
		private System.Nullable<bool> _IsSentMailCandidate;
		
		private System.Nullable<bool> _IsSendMailInterviewer;
		
		private string _CClist;
		
		private EntityRef<Candidate> _Candidate;
		
		private EntityRef<InterviewResult> _InterviewResult;
		
		private EntityRef<InterviewStatus> _InterviewStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInterviewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInterviewDateChanged();
    partial void OnVenueChanging(string value);
    partial void OnVenueChanged();
    partial void OnPicChanging(string value);
    partial void OnPicChanged();
    partial void OnInterviewFormIdChanging(string value);
    partial void OnInterviewFormIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    partial void OnCandidateIdChanging(System.Nullable<int> value);
    partial void OnCandidateIdChanged();
    partial void OnInterviewStatusIdChanging(System.Nullable<int> value);
    partial void OnInterviewStatusIdChanged();
    partial void OnRoundChanging(System.Nullable<int> value);
    partial void OnRoundChanged();
    partial void OnInterviewResultIdChanging(System.Nullable<int> value);
    partial void OnInterviewResultIdChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnOldInterViewChanging(System.Nullable<bool> value);
    partial void OnOldInterViewChanged();
    partial void OnIsSentMailCandidateChanging(System.Nullable<bool> value);
    partial void OnIsSentMailCandidateChanged();
    partial void OnIsSendMailInterviewerChanging(System.Nullable<bool> value);
    partial void OnIsSendMailInterviewerChanged();
    partial void OnCClistChanging(string value);
    partial void OnCClistChanged();
    #endregion
		
		public Interview()
		{
			this._Candidate = default(EntityRef<Candidate>);
			this._InterviewResult = default(EntityRef<InterviewResult>);
			this._InterviewStatus = default(EntityRef<InterviewStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InterviewDate
		{
			get
			{
				return this._InterviewDate;
			}
			set
			{
				if ((this._InterviewDate != value))
				{
					this.OnInterviewDateChanging(value);
					this.SendPropertyChanging();
					this._InterviewDate = value;
					this.SendPropertyChanged("InterviewDate");
					this.OnInterviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(1000)")]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this.OnVenueChanging(value);
					this.SendPropertyChanging();
					this._Venue = value;
					this.SendPropertyChanged("Venue");
					this.OnVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="NVarChar(500)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this.OnPicChanging(value);
					this.SendPropertyChanging();
					this._Pic = value;
					this.SendPropertyChanged("Pic");
					this.OnPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewFormId", DbType="VarChar(5)")]
		public string InterviewFormId
		{
			get
			{
				return this._InterviewFormId;
			}
			set
			{
				if ((this._InterviewFormId != value))
				{
					this.OnInterviewFormIdChanging(value);
					this.SendPropertyChanging();
					this._InterviewFormId = value;
					this.SendPropertyChanged("InterviewFormId");
					this.OnInterviewFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int")]
		public System.Nullable<int> CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewStatusId", DbType="Int")]
		public System.Nullable<int> InterviewStatusId
		{
			get
			{
				return this._InterviewStatusId;
			}
			set
			{
				if ((this._InterviewStatusId != value))
				{
					if ((this._InterviewResult.HasLoadedOrAssignedValue || this._InterviewStatus.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterviewStatusIdChanging(value);
					this.SendPropertyChanging();
					this._InterviewStatusId = value;
					this.SendPropertyChanged("InterviewStatusId");
					this.OnInterviewStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="Int")]
		public System.Nullable<int> Round
		{
			get
			{
				return this._Round;
			}
			set
			{
				if ((this._Round != value))
				{
					this.OnRoundChanging(value);
					this.SendPropertyChanging();
					this._Round = value;
					this.SendPropertyChanged("Round");
					this.OnRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewResultId", DbType="Int")]
		public System.Nullable<int> InterviewResultId
		{
			get
			{
				return this._InterviewResultId;
			}
			set
			{
				if ((this._InterviewResultId != value))
				{
					this.OnInterviewResultIdChanging(value);
					this.SendPropertyChanging();
					this._InterviewResultId = value;
					this.SendPropertyChanged("InterviewResultId");
					this.OnInterviewResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInterView", DbType="Bit")]
		public System.Nullable<bool> OldInterView
		{
			get
			{
				return this._OldInterView;
			}
			set
			{
				if ((this._OldInterView != value))
				{
					this.OnOldInterViewChanging(value);
					this.SendPropertyChanging();
					this._OldInterView = value;
					this.SendPropertyChanged("OldInterView");
					this.OnOldInterViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSentMailCandidate", DbType="Bit")]
		public System.Nullable<bool> IsSentMailCandidate
		{
			get
			{
				return this._IsSentMailCandidate;
			}
			set
			{
				if ((this._IsSentMailCandidate != value))
				{
					this.OnIsSentMailCandidateChanging(value);
					this.SendPropertyChanging();
					this._IsSentMailCandidate = value;
					this.SendPropertyChanged("IsSentMailCandidate");
					this.OnIsSentMailCandidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSendMailInterviewer", DbType="Bit")]
		public System.Nullable<bool> IsSendMailInterviewer
		{
			get
			{
				return this._IsSendMailInterviewer;
			}
			set
			{
				if ((this._IsSendMailInterviewer != value))
				{
					this.OnIsSendMailInterviewerChanging(value);
					this.SendPropertyChanging();
					this._IsSendMailInterviewer = value;
					this.SendPropertyChanged("IsSendMailInterviewer");
					this.OnIsSendMailInterviewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CClist", DbType="NVarChar(500)")]
		public string CClist
		{
			get
			{
				return this._CClist;
			}
			set
			{
				if ((this._CClist != value))
				{
					this.OnCClistChanging(value);
					this.SendPropertyChanging();
					this._CClist = value;
					this.SendPropertyChanged("CClist");
					this.OnCClistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Interview", Storage="_Candidate", ThisKey="CandidateId", OtherKey="ID", IsForeignKey=true)]
		public Candidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				Candidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.Interviews.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.Interviews.Add(this);
						this._CandidateId = value.ID;
					}
					else
					{
						this._CandidateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterviewResult_Interview", Storage="_InterviewResult", ThisKey="InterviewStatusId", OtherKey="Id", IsForeignKey=true)]
		public InterviewResult InterviewResult
		{
			get
			{
				return this._InterviewResult.Entity;
			}
			set
			{
				InterviewResult previousValue = this._InterviewResult.Entity;
				if (((previousValue != value) 
							|| (this._InterviewResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterviewResult.Entity = null;
						previousValue.Interviews.Remove(this);
					}
					this._InterviewResult.Entity = value;
					if ((value != null))
					{
						value.Interviews.Add(this);
						this._InterviewStatusId = value.Id;
					}
					else
					{
						this._InterviewStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InterviewResult");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterviewStatus_Interview", Storage="_InterviewStatus", ThisKey="InterviewStatusId", OtherKey="Id", IsForeignKey=true)]
		public InterviewStatus InterviewStatus
		{
			get
			{
				return this._InterviewStatus.Entity;
			}
			set
			{
				InterviewStatus previousValue = this._InterviewStatus.Entity;
				if (((previousValue != value) 
							|| (this._InterviewStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterviewStatus.Entity = null;
						previousValue.Interviews.Remove(this);
					}
					this._InterviewStatus.Entity = value;
					if ((value != null))
					{
						value.Interviews.Add(this);
						this._InterviewStatusId = value.Id;
					}
					else
					{
						this._InterviewStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InterviewStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterviewResult")]
	public partial class InterviewResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Interview> _Interviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InterviewResult()
		{
			this._Interviews = new EntitySet<Interview>(new Action<Interview>(this.attach_Interviews), new Action<Interview>(this.detach_Interviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterviewResult_Interview", Storage="_Interviews", ThisKey="Id", OtherKey="InterviewStatusId")]
		public EntitySet<Interview> Interviews
		{
			get
			{
				return this._Interviews;
			}
			set
			{
				this._Interviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.InterviewResult = this;
		}
		
		private void detach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.InterviewResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterviewStatus")]
	public partial class InterviewStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Interview> _Interviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InterviewStatus()
		{
			this._Interviews = new EntitySet<Interview>(new Action<Interview>(this.attach_Interviews), new Action<Interview>(this.detach_Interviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterviewStatus_Interview", Storage="_Interviews", ThisKey="Id", OtherKey="InterviewStatusId")]
		public EntitySet<Interview> Interviews
		{
			get
			{
				return this._Interviews;
			}
			set
			{
				this._Interviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.InterviewStatus = this;
		}
		
		private void detach_Interviews(Interview entity)
		{
			this.SendPropertyChanging();
			entity.InterviewStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRequest")]
	public partial class JobRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private int _RequestorId;
		
		private System.DateTime _RequestDate;
		
		private int _DepartmentId;
		
		private int _PositionFrom;
		
		private System.Nullable<int> _PositionTo;
		
		private System.Nullable<System.DateTime> _ExpectedStartDate;
		
		private string _SalarySuggestion;
		
		private string _Justification;
		
		private string _CCList;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _RequestTypeId;
		
		private int _Quantity;
		
		private EntitySet<JobRequestComment> _JobRequestComments;
		
		private EntitySet<JobRequestItem> _JobRequestItems;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel1;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
		private EntityRef<UserAdmin> _UserAdmin1;
		
		private EntityRef<WFResolution> _WFResolution;
		
		private EntityRef<WFRole> _WFRole;
		
		private EntityRef<WFStatus> _WFStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWFStatusIDChanging(int value);
    partial void OnWFStatusIDChanged();
    partial void OnWFResolutionIDChanging(int value);
    partial void OnWFResolutionIDChanged();
    partial void OnRequestorIdChanging(int value);
    partial void OnRequestorIdChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnPositionFromChanging(int value);
    partial void OnPositionFromChanged();
    partial void OnPositionToChanging(System.Nullable<int> value);
    partial void OnPositionToChanged();
    partial void OnExpectedStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedStartDateChanged();
    partial void OnSalarySuggestionChanging(string value);
    partial void OnSalarySuggestionChanged();
    partial void OnJustificationChanging(string value);
    partial void OnJustificationChanged();
    partial void OnCCListChanging(string value);
    partial void OnCCListChanged();
    partial void OnAssignIDChanging(System.Nullable<int> value);
    partial void OnAssignIDChanged();
    partial void OnAssignRoleChanging(System.Nullable<int> value);
    partial void OnAssignRoleChanged();
    partial void OnInvolveIDChanging(string value);
    partial void OnInvolveIDChanged();
    partial void OnInvolveResolutionChanging(string value);
    partial void OnInvolveResolutionChanged();
    partial void OnInvolveDateChanging(string value);
    partial void OnInvolveDateChanged();
    partial void OnInvolveRoleChanging(string value);
    partial void OnInvolveRoleChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnRequestTypeIdChanging(int value);
    partial void OnRequestTypeIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public JobRequest()
		{
			this._JobRequestComments = new EntitySet<JobRequestComment>(new Action<JobRequestComment>(this.attach_JobRequestComments), new Action<JobRequestComment>(this.detach_JobRequestComments));
			this._JobRequestItems = new EntitySet<JobRequestItem>(new Action<JobRequestItem>(this.attach_JobRequestItems), new Action<JobRequestItem>(this.detach_JobRequestItems));
			this._Department = default(EntityRef<Department>);
			this._JobTitleLevel = default(EntityRef<JobTitleLevel>);
			this._JobTitleLevel1 = default(EntityRef<JobTitleLevel>);
			this._UserAdmin = default(EntityRef<UserAdmin>);
			this._UserAdmin1 = default(EntityRef<UserAdmin>);
			this._WFResolution = default(EntityRef<WFResolution>);
			this._WFRole = default(EntityRef<WFRole>);
			this._WFStatus = default(EntityRef<WFStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					if (this._WFStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WFStatusID = value;
					this.SendPropertyChanged("WFStatusID");
					this.OnWFStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					if (this._WFResolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._WFResolutionID = value;
					this.SendPropertyChanged("WFResolutionID");
					this.OnWFResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorId", DbType="Int NOT NULL")]
		public int RequestorId
		{
			get
			{
				return this._RequestorId;
			}
			set
			{
				if ((this._RequestorId != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestorIdChanging(value);
					this.SendPropertyChanging();
					this._RequestorId = value;
					this.SendPropertyChanged("RequestorId");
					this.OnRequestorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionFrom", DbType="Int NOT NULL")]
		public int PositionFrom
		{
			get
			{
				return this._PositionFrom;
			}
			set
			{
				if ((this._PositionFrom != value))
				{
					if (this._JobTitleLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionFromChanging(value);
					this.SendPropertyChanging();
					this._PositionFrom = value;
					this.SendPropertyChanged("PositionFrom");
					this.OnPositionFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionTo", DbType="Int")]
		public System.Nullable<int> PositionTo
		{
			get
			{
				return this._PositionTo;
			}
			set
			{
				if ((this._PositionTo != value))
				{
					if (this._JobTitleLevel1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionToChanging(value);
					this.SendPropertyChanging();
					this._PositionTo = value;
					this.SendPropertyChanged("PositionTo");
					this.OnPositionToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedStartDate
		{
			get
			{
				return this._ExpectedStartDate;
			}
			set
			{
				if ((this._ExpectedStartDate != value))
				{
					this.OnExpectedStartDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedStartDate = value;
					this.SendPropertyChanged("ExpectedStartDate");
					this.OnExpectedStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalarySuggestion", DbType="NVarChar(100)")]
		public string SalarySuggestion
		{
			get
			{
				return this._SalarySuggestion;
			}
			set
			{
				if ((this._SalarySuggestion != value))
				{
					this.OnSalarySuggestionChanging(value);
					this.SendPropertyChanging();
					this._SalarySuggestion = value;
					this.SendPropertyChanged("SalarySuggestion");
					this.OnSalarySuggestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500)")]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this.OnJustificationChanging(value);
					this.SendPropertyChanging();
					this._Justification = value;
					this.SendPropertyChanged("Justification");
					this.OnJustificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this.OnCCListChanging(value);
					this.SendPropertyChanging();
					this._CCList = value;
					this.SendPropertyChanged("CCList");
					this.OnCCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					if (this._UserAdmin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignIDChanging(value);
					this.SendPropertyChanging();
					this._AssignID = value;
					this.SendPropertyChanged("AssignID");
					this.OnAssignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					if (this._WFRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignRoleChanging(value);
					this.SendPropertyChanging();
					this._AssignRole = value;
					this.SendPropertyChanged("AssignRole");
					this.OnAssignRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(100)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this.OnInvolveIDChanging(value);
					this.SendPropertyChanging();
					this._InvolveID = value;
					this.SendPropertyChanged("InvolveID");
					this.OnInvolveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this.OnInvolveResolutionChanging(value);
					this.SendPropertyChanging();
					this._InvolveResolution = value;
					this.SendPropertyChanged("InvolveResolution");
					this.OnInvolveResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this.OnInvolveDateChanging(value);
					this.SendPropertyChanging();
					this._InvolveDate = value;
					this.SendPropertyChanged("InvolveDate");
					this.OnInvolveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="VarChar(100)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this.OnInvolveRoleChanging(value);
					this.SendPropertyChanging();
					this._InvolveRole = value;
					this.SendPropertyChanged("InvolveRole");
					this.OnInvolveRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeId", DbType="Int NOT NULL")]
		public int RequestTypeId
		{
			get
			{
				return this._RequestTypeId;
			}
			set
			{
				if ((this._RequestTypeId != value))
				{
					this.OnRequestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeId = value;
					this.SendPropertyChanged("RequestTypeId");
					this.OnRequestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequest_JobRequestComment", Storage="_JobRequestComments", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<JobRequestComment> JobRequestComments
		{
			get
			{
				return this._JobRequestComments;
			}
			set
			{
				this._JobRequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequest_JobRequestItem", Storage="_JobRequestItems", ThisKey="ID", OtherKey="JRID")]
		public EntitySet<JobRequestItem> JobRequestItems
		{
			get
			{
				return this._JobRequestItems;
			}
			set
			{
				this._JobRequestItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_JobRequest", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequest", Storage="_JobTitleLevel", ThisKey="PositionFrom", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel
		{
			get
			{
				return this._JobTitleLevel.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._JobTitleLevel.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._PositionFrom = value.ID;
					}
					else
					{
						this._PositionFrom = default(int);
					}
					this.SendPropertyChanged("JobTitleLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequest1", Storage="_JobTitleLevel1", ThisKey="PositionTo", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel1
		{
			get
			{
				return this._JobTitleLevel1.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel1.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel1.Entity = null;
						previousValue.JobRequests1.Remove(this);
					}
					this._JobTitleLevel1.Entity = value;
					if ((value != null))
					{
						value.JobRequests1.Add(this);
						this._PositionTo = value.ID;
					}
					else
					{
						this._PositionTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobTitleLevel1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_JobRequest", Storage="_UserAdmin", ThisKey="RequestorId", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._RequestorId = value.UserAdminId;
					}
					else
					{
						this._RequestorId = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_JobRequest1", Storage="_UserAdmin1", ThisKey="AssignID", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin1
		{
			get
			{
				return this._UserAdmin1.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin1.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin1.Entity = null;
						previousValue.JobRequests1.Remove(this);
					}
					this._UserAdmin1.Entity = value;
					if ((value != null))
					{
						value.JobRequests1.Add(this);
						this._AssignID = value.UserAdminId;
					}
					else
					{
						this._AssignID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAdmin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_JobRequest", Storage="_WFResolution", ThisKey="WFResolutionID", OtherKey="ID", IsForeignKey=true)]
		public WFResolution WFResolution
		{
			get
			{
				return this._WFResolution.Entity;
			}
			set
			{
				WFResolution previousValue = this._WFResolution.Entity;
				if (((previousValue != value) 
							|| (this._WFResolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFResolution.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._WFResolution.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._WFResolutionID = value.ID;
					}
					else
					{
						this._WFResolutionID = default(int);
					}
					this.SendPropertyChanged("WFResolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_JobRequest", Storage="_WFRole", ThisKey="AssignRole", OtherKey="ID", IsForeignKey=true)]
		public WFRole WFRole
		{
			get
			{
				return this._WFRole.Entity;
			}
			set
			{
				WFRole previousValue = this._WFRole.Entity;
				if (((previousValue != value) 
							|| (this._WFRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFRole.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._WFRole.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._AssignRole = value.ID;
					}
					else
					{
						this._AssignRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("WFRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_JobRequest", Storage="_WFStatus", ThisKey="WFStatusID", OtherKey="ID", IsForeignKey=true)]
		public WFStatus WFStatus
		{
			get
			{
				return this._WFStatus.Entity;
			}
			set
			{
				WFStatus previousValue = this._WFStatus.Entity;
				if (((previousValue != value) 
							|| (this._WFStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFStatus.Entity = null;
						previousValue.JobRequests.Remove(this);
					}
					this._WFStatus.Entity = value;
					if ((value != null))
					{
						value.JobRequests.Add(this);
						this._WFStatusID = value.ID;
					}
					else
					{
						this._WFStatusID = default(int);
					}
					this.SendPropertyChanged("WFStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequestComments(JobRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.JobRequest = this;
		}
		
		private void detach_JobRequestComments(JobRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.JobRequest = null;
		}
		
		private void attach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobRequest = this;
		}
		
		private void detach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRequestComment")]
	public partial class JobRequestComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _RequestID;
		
		private string _Poster;
		
		private System.DateTime _PostTime;
		
		private string _Contents;
		
		private EntityRef<JobRequest> _JobRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    #endregion
		
		public JobRequestComment()
		{
			this._JobRequest = default(EntityRef<JobRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._JobRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="DateTime NOT NULL")]
		public System.DateTime PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequest_JobRequestComment", Storage="_JobRequest", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public JobRequest JobRequest
		{
			get
			{
				return this._JobRequest.Entity;
			}
			set
			{
				JobRequest previousValue = this._JobRequest.Entity;
				if (((previousValue != value) 
							|| (this._JobRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobRequest.Entity = null;
						previousValue.JobRequestComments.Remove(this);
					}
					this._JobRequest.Entity = value;
					if ((value != null))
					{
						value.JobRequestComments.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("JobRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRequestItem")]
	public partial class JobRequestItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JRID;
		
		private string _Candidate;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<int> _FinalTitleId;
		
		private string _EmpID;
		
		private System.Nullable<bool> _Gender;
		
		private System.Nullable<System.DateTime> _ActualStartDate;
		
		private string _ProbationSalary;
		
		private string _ContractedSalary;
		
		private string _ProbationSalaryNote;
		
		private string _ContractedSalaryNote;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _StatusID;
		
		private string _Approval;
		
		private System.Nullable<int> _ProbationMonths;
		
		private string _Title;
		
		private EntityRef<JobRequest> _JobRequest;
		
		private EntityRef<JobRequestItemStatus> _JobRequestItemStatus;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJRIDChanging(int value);
    partial void OnJRIDChanged();
    partial void OnCandidateChanging(string value);
    partial void OnCandidateChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnFinalTitleIdChanging(System.Nullable<int> value);
    partial void OnFinalTitleIdChanged();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnActualStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartDateChanged();
    partial void OnProbationSalaryChanging(string value);
    partial void OnProbationSalaryChanged();
    partial void OnContractedSalaryChanging(string value);
    partial void OnContractedSalaryChanged();
    partial void OnProbationSalaryNoteChanging(string value);
    partial void OnProbationSalaryNoteChanged();
    partial void OnContractedSalaryNoteChanging(string value);
    partial void OnContractedSalaryNoteChanged();
    partial void OnAssignIDChanging(System.Nullable<int> value);
    partial void OnAssignIDChanged();
    partial void OnAssignRoleChanging(System.Nullable<int> value);
    partial void OnAssignRoleChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnApprovalChanging(string value);
    partial void OnApprovalChanged();
    partial void OnProbationMonthsChanging(System.Nullable<int> value);
    partial void OnProbationMonthsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public JobRequestItem()
		{
			this._JobRequest = default(EntityRef<JobRequest>);
			this._JobRequestItemStatus = default(EntityRef<JobRequestItemStatus>);
			this._JobTitleLevel = default(EntityRef<JobTitleLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRID", DbType="Int NOT NULL")]
		public int JRID
		{
			get
			{
				return this._JRID;
			}
			set
			{
				if ((this._JRID != value))
				{
					if (this._JobRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJRIDChanging(value);
					this.SendPropertyChanging();
					this._JRID = value;
					this.SendPropertyChanged("JRID");
					this.OnJRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidate", DbType="NVarChar(100)")]
		public string Candidate
		{
			get
			{
				return this._Candidate;
			}
			set
			{
				if ((this._Candidate != value))
				{
					this.OnCandidateChanging(value);
					this.SendPropertyChanging();
					this._Candidate = value;
					this.SendPropertyChanged("Candidate");
					this.OnCandidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTitleId", DbType="Int")]
		public System.Nullable<int> FinalTitleId
		{
			get
			{
				return this._FinalTitleId;
			}
			set
			{
				if ((this._FinalTitleId != value))
				{
					if (this._JobTitleLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinalTitleIdChanging(value);
					this.SendPropertyChanging();
					this._FinalTitleId = value;
					this.SendPropertyChanged("FinalTitleId");
					this.OnFinalTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartDate
		{
			get
			{
				return this._ActualStartDate;
			}
			set
			{
				if ((this._ActualStartDate != value))
				{
					this.OnActualStartDateChanging(value);
					this.SendPropertyChanging();
					this._ActualStartDate = value;
					this.SendPropertyChanged("ActualStartDate");
					this.OnActualStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationSalary", DbType="NVarChar(256)")]
		public string ProbationSalary
		{
			get
			{
				return this._ProbationSalary;
			}
			set
			{
				if ((this._ProbationSalary != value))
				{
					this.OnProbationSalaryChanging(value);
					this.SendPropertyChanging();
					this._ProbationSalary = value;
					this.SendPropertyChanged("ProbationSalary");
					this.OnProbationSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedSalary", DbType="NVarChar(256)")]
		public string ContractedSalary
		{
			get
			{
				return this._ContractedSalary;
			}
			set
			{
				if ((this._ContractedSalary != value))
				{
					this.OnContractedSalaryChanging(value);
					this.SendPropertyChanging();
					this._ContractedSalary = value;
					this.SendPropertyChanged("ContractedSalary");
					this.OnContractedSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationSalaryNote", DbType="NVarChar(200)")]
		public string ProbationSalaryNote
		{
			get
			{
				return this._ProbationSalaryNote;
			}
			set
			{
				if ((this._ProbationSalaryNote != value))
				{
					this.OnProbationSalaryNoteChanging(value);
					this.SendPropertyChanging();
					this._ProbationSalaryNote = value;
					this.SendPropertyChanged("ProbationSalaryNote");
					this.OnProbationSalaryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedSalaryNote", DbType="NVarChar(200)")]
		public string ContractedSalaryNote
		{
			get
			{
				return this._ContractedSalaryNote;
			}
			set
			{
				if ((this._ContractedSalaryNote != value))
				{
					this.OnContractedSalaryNoteChanging(value);
					this.SendPropertyChanging();
					this._ContractedSalaryNote = value;
					this.SendPropertyChanged("ContractedSalaryNote");
					this.OnContractedSalaryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this.OnAssignIDChanging(value);
					this.SendPropertyChanging();
					this._AssignID = value;
					this.SendPropertyChanged("AssignID");
					this.OnAssignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this.OnAssignRoleChanging(value);
					this.SendPropertyChanging();
					this._AssignRole = value;
					this.SendPropertyChanged("AssignRole");
					this.OnAssignRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._JobRequestItemStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approval", DbType="NChar(10)")]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this.OnApprovalChanging(value);
					this.SendPropertyChanging();
					this._Approval = value;
					this.SendPropertyChanged("Approval");
					this.OnApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationMonths", DbType="Int")]
		public System.Nullable<int> ProbationMonths
		{
			get
			{
				return this._ProbationMonths;
			}
			set
			{
				if ((this._ProbationMonths != value))
				{
					this.OnProbationMonthsChanging(value);
					this.SendPropertyChanging();
					this._ProbationMonths = value;
					this.SendPropertyChanged("ProbationMonths");
					this.OnProbationMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequest_JobRequestItem", Storage="_JobRequest", ThisKey="JRID", OtherKey="ID", IsForeignKey=true)]
		public JobRequest JobRequest
		{
			get
			{
				return this._JobRequest.Entity;
			}
			set
			{
				JobRequest previousValue = this._JobRequest.Entity;
				if (((previousValue != value) 
							|| (this._JobRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobRequest.Entity = null;
						previousValue.JobRequestItems.Remove(this);
					}
					this._JobRequest.Entity = value;
					if ((value != null))
					{
						value.JobRequestItems.Add(this);
						this._JRID = value.ID;
					}
					else
					{
						this._JRID = default(int);
					}
					this.SendPropertyChanged("JobRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequestItemStatus_JobRequestItem", Storage="_JobRequestItemStatus", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public JobRequestItemStatus JobRequestItemStatus
		{
			get
			{
				return this._JobRequestItemStatus.Entity;
			}
			set
			{
				JobRequestItemStatus previousValue = this._JobRequestItemStatus.Entity;
				if (((previousValue != value) 
							|| (this._JobRequestItemStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobRequestItemStatus.Entity = null;
						previousValue.JobRequestItems.Remove(this);
					}
					this._JobRequestItemStatus.Entity = value;
					if ((value != null))
					{
						value.JobRequestItems.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("JobRequestItemStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequestItem", Storage="_JobTitleLevel", ThisKey="FinalTitleId", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel
		{
			get
			{
				return this._JobTitleLevel.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel.Entity = null;
						previousValue.JobRequestItems.Remove(this);
					}
					this._JobTitleLevel.Entity = value;
					if ((value != null))
					{
						value.JobRequestItems.Add(this);
						this._FinalTitleId = value.ID;
					}
					else
					{
						this._FinalTitleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobTitleLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRequestItemStatus")]
	public partial class JobRequestItemStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Description;
		
		private EntitySet<JobRequestItem> _JobRequestItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public JobRequestItemStatus()
		{
			this._JobRequestItems = new EntitySet<JobRequestItem>(new Action<JobRequestItem>(this.attach_JobRequestItems), new Action<JobRequestItem>(this.detach_JobRequestItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRequestItemStatus_JobRequestItem", Storage="_JobRequestItems", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<JobRequestItem> JobRequestItems
		{
			get
			{
				return this._JobRequestItems;
			}
			set
			{
				this._JobRequestItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobRequestItemStatus = this;
		}
		
		private void detach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobRequestItemStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobTitle")]
	public partial class JobTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobTitleId;
		
		private string _JobTitleName;
		
		private int _DepartmentId;
		
		private string _Description;
		
		private bool _IsManager;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<JobTitleLevel> _JobTitleLevels;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobTitleIdChanging(int value);
    partial void OnJobTitleIdChanged();
    partial void OnJobTitleNameChanging(string value);
    partial void OnJobTitleNameChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsManagerChanging(bool value);
    partial void OnIsManagerChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public JobTitle()
		{
			this._JobTitleLevels = new EntitySet<JobTitleLevel>(new Action<JobTitleLevel>(this.attach_JobTitleLevels), new Action<JobTitleLevel>(this.detach_JobTitleLevels));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					this.OnJobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleId = value;
					this.SendPropertyChanged("JobTitleId");
					this.OnJobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobTitleName
		{
			get
			{
				return this._JobTitleName;
			}
			set
			{
				if ((this._JobTitleName != value))
				{
					this.OnJobTitleNameChanging(value);
					this.SendPropertyChanging();
					this._JobTitleName = value;
					this.SendPropertyChanged("JobTitleName");
					this.OnJobTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManager", DbType="Bit NOT NULL")]
		public bool IsManager
		{
			get
			{
				return this._IsManager;
			}
			set
			{
				if ((this._IsManager != value))
				{
					this.OnIsManagerChanging(value);
					this.SendPropertyChanging();
					this._IsManager = value;
					this.SendPropertyChanged("IsManager");
					this.OnIsManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_JobTitleLevel", Storage="_JobTitleLevels", ThisKey="JobTitleId", OtherKey="JobTitleId")]
		public EntitySet<JobTitleLevel> JobTitleLevels
		{
			get
			{
				return this._JobTitleLevels;
			}
			set
			{
				this._JobTitleLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_JobTitle", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.JobTitles.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.JobTitles.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobTitleLevels(JobTitleLevel entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = this;
		}
		
		private void detach_JobTitleLevels(JobTitleLevel entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobTitleLevel")]
	public partial class JobTitleLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobTitleId;
		
		private int _JobLevel;
		
		private string _DisplayName;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Candidate> _Candidates;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<JobRequest> _JobRequests1;
		
		private EntitySet<JobRequestItem> _JobRequestItems;
		
		private EntitySet<Training_EnglishTitleMapping> _Training_EnglishTitleMappings;
		
		private EntityRef<JobTitle> _JobTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobTitleIdChanging(int value);
    partial void OnJobTitleIdChanged();
    partial void OnJobLevelChanging(int value);
    partial void OnJobLevelChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public JobTitleLevel()
		{
			this._Candidates = new EntitySet<Candidate>(new Action<Candidate>(this.attach_Candidates), new Action<Candidate>(this.detach_Candidates));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._JobRequests1 = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests1), new Action<JobRequest>(this.detach_JobRequests1));
			this._JobRequestItems = new EntitySet<JobRequestItem>(new Action<JobRequestItem>(this.attach_JobRequestItems), new Action<JobRequestItem>(this.detach_JobRequestItems));
			this._Training_EnglishTitleMappings = new EntitySet<Training_EnglishTitleMapping>(new Action<Training_EnglishTitleMapping>(this.attach_Training_EnglishTitleMappings), new Action<Training_EnglishTitleMapping>(this.detach_Training_EnglishTitleMappings));
			this._JobTitle = default(EntityRef<JobTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", DbType="Int NOT NULL")]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					if (this._JobTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleId = value;
					this.SendPropertyChanged("JobTitleId");
					this.OnJobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobLevel", DbType="Int NOT NULL")]
		public int JobLevel
		{
			get
			{
				return this._JobLevel;
			}
			set
			{
				if ((this._JobLevel != value))
				{
					this.OnJobLevelChanging(value);
					this.SendPropertyChanging();
					this._JobLevel = value;
					this.SendPropertyChanged("JobLevel");
					this.OnJobLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Candidate", Storage="_Candidates", ThisKey="ID", OtherKey="TitleId")]
		public EntitySet<Candidate> Candidates
		{
			get
			{
				return this._Candidates;
			}
			set
			{
				this._Candidates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Employee", Storage="_Employees", ThisKey="ID", OtherKey="TitleId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequest", Storage="_JobRequests", ThisKey="ID", OtherKey="PositionFrom")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequest1", Storage="_JobRequests1", ThisKey="ID", OtherKey="PositionTo")]
		public EntitySet<JobRequest> JobRequests1
		{
			get
			{
				return this._JobRequests1;
			}
			set
			{
				this._JobRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_JobRequestItem", Storage="_JobRequestItems", ThisKey="ID", OtherKey="FinalTitleId")]
		public EntitySet<JobRequestItem> JobRequestItems
		{
			get
			{
				return this._JobRequestItems;
			}
			set
			{
				this._JobRequestItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Training_EnglishTitleMapping", Storage="_Training_EnglishTitleMappings", ThisKey="ID", OtherKey="TitleId")]
		public EntitySet<Training_EnglishTitleMapping> Training_EnglishTitleMappings
		{
			get
			{
				return this._Training_EnglishTitleMappings;
			}
			set
			{
				this._Training_EnglishTitleMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_JobTitleLevel", Storage="_JobTitle", ThisKey="JobTitleId", OtherKey="JobTitleId", IsForeignKey=true)]
		public JobTitle JobTitle
		{
			get
			{
				return this._JobTitle.Entity;
			}
			set
			{
				JobTitle previousValue = this._JobTitle.Entity;
				if (((previousValue != value) 
							|| (this._JobTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitle.Entity = null;
						previousValue.JobTitleLevels.Remove(this);
					}
					this._JobTitle.Entity = value;
					if ((value != null))
					{
						value.JobTitleLevels.Add(this);
						this._JobTitleId = value.JobTitleId;
					}
					else
					{
						this._JobTitleId = default(int);
					}
					this.SendPropertyChanged("JobTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = this;
		}
		
		private void detach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = null;
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = null;
		}
		
		private void attach_JobRequests1(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel1 = this;
		}
		
		private void detach_JobRequests1(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel1 = null;
		}
		
		private void attach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = this;
		}
		
		private void detach_JobRequestItems(JobRequestItem entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = null;
		}
		
		private void attach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = this;
		}
		
		private void detach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.JobTitleLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogAccess")]
	public partial class LogAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _SessionId;
		
		private string _UserAdmin;
		
		private string _UserIp;
		
		private System.DateTime _DatetimeAccess;
		
		private System.Nullable<System.DateTime> _DatetimeOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnUserIpChanging(string value);
    partial void OnUserIpChanged();
    partial void OnDatetimeAccessChanging(System.DateTime value);
    partial void OnDatetimeAccessChanged();
    partial void OnDatetimeOutChanging(System.Nullable<System.DateTime> value);
    partial void OnDatetimeOutChanged();
    #endregion
		
		public LogAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserIp
		{
			get
			{
				return this._UserIp;
			}
			set
			{
				if ((this._UserIp != value))
				{
					this.OnUserIpChanging(value);
					this.SendPropertyChanging();
					this._UserIp = value;
					this.SendPropertyChanged("UserIp");
					this.OnUserIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatetimeAccess", DbType="DateTime NOT NULL")]
		public System.DateTime DatetimeAccess
		{
			get
			{
				return this._DatetimeAccess;
			}
			set
			{
				if ((this._DatetimeAccess != value))
				{
					this.OnDatetimeAccessChanging(value);
					this.SendPropertyChanging();
					this._DatetimeAccess = value;
					this.SendPropertyChanged("DatetimeAccess");
					this.OnDatetimeAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatetimeOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatetimeOut
		{
			get
			{
				return this._DatetimeOut;
			}
			set
			{
				if ((this._DatetimeOut != value))
				{
					this.OnDatetimeOutChanging(value);
					this.SendPropertyChanging();
					this._DatetimeOut = value;
					this.SendPropertyChanged("DatetimeOut");
					this.OnDatetimeOutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogDetail")]
	public partial class LogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetailId;
		
		private string _LogId;
		
		private string _ColumnName;
		
		private string _DisplayColumnName;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private EntityRef<MasterLog> _MasterLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIdChanging(string value);
    partial void OnDetailIdChanged();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnDisplayColumnNameChanging(string value);
    partial void OnDisplayColumnNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    #endregion
		
		public LogDetail()
		{
			this._MasterLog = default(EntityRef<MasterLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this.OnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DetailId = value;
					this.SendPropertyChanged("DetailId");
					this.OnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					if (this._MasterLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(30)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayColumnName", DbType="NVarChar(50)")]
		public string DisplayColumnName
		{
			get
			{
				return this._DisplayColumnName;
			}
			set
			{
				if ((this._DisplayColumnName != value))
				{
					this.OnDisplayColumnNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayColumnName = value;
					this.SendPropertyChanged("DisplayColumnName");
					this.OnDisplayColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(1000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(1000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterLog_LogDetail", Storage="_MasterLog", ThisKey="LogId", OtherKey="LogId", IsForeignKey=true)]
		public MasterLog MasterLog
		{
			get
			{
				return this._MasterLog.Entity;
			}
			set
			{
				MasterLog previousValue = this._MasterLog.Entity;
				if (((previousValue != value) 
							|| (this._MasterLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterLog.Entity = null;
						previousValue.LogDetails.Remove(this);
					}
					this._MasterLog.Entity = value;
					if ((value != null))
					{
						value.LogDetails.Add(this);
						this._LogId = value.LogId;
					}
					else
					{
						this._LogId = default(string);
					}
					this.SendPropertyChanged("MasterLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Answer")]
	public partial class LOT_Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QuestionID;
		
		private string _AnswerContent;
		
		private bool _DeleteFlag;
		
		private int _AnswerOrder;
		
		private bool _IsCorrect;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnAnswerContentChanging(string value);
    partial void OnAnswerContentChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnAnswerOrderChanging(int value);
    partial void OnAnswerOrderChanged();
    partial void OnIsCorrectChanging(bool value);
    partial void OnIsCorrectChanged();
    #endregion
		
		public LOT_Answer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerContent", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AnswerContent
		{
			get
			{
				return this._AnswerContent;
			}
			set
			{
				if ((this._AnswerContent != value))
				{
					this.OnAnswerContentChanging(value);
					this.SendPropertyChanging();
					this._AnswerContent = value;
					this.SendPropertyChanged("AnswerContent");
					this.OnAnswerContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOrder", DbType="Int NOT NULL")]
		public int AnswerOrder
		{
			get
			{
				return this._AnswerOrder;
			}
			set
			{
				if ((this._AnswerOrder != value))
				{
					this.OnAnswerOrderChanging(value);
					this.SendPropertyChanging();
					this._AnswerOrder = value;
					this.SendPropertyChanged("AnswerOrder");
					this.OnAnswerOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit NOT NULL")]
		public bool IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Candidate_Exam")]
	public partial class LOT_Candidate_Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EmployeeID;
		
		private System.Nullable<int> _CandidateID;
		
		private int _ExamID;
		
		private string _CandidatePin;
		
		private System.Nullable<double> _WritingMark;
		
		private string _WritingComment;
		
		private System.Nullable<double> _ProgramingMark;
		
		private string _ProgramingComment;
		
		private System.Nullable<double> _VerbalMark;
		
		private System.Nullable<int> _VerbalMarkType;
		
		private string _VerbalTestedBy;
		
		private string _VerbalComment;
		
		private bool _IsFinish;
		
		private string _IP;
		
		private System.Nullable<int> _HitListening;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private bool _SendMail;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<LOT_Candidate_Topic> _LOT_Candidate_Topics;
		
		private EntitySet<LOT_CandidateAnswer> _LOT_CandidateAnswers;
		
		private EntityRef<Candidate> _Candidate;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<LOT_Exam> _LOT_Exam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnCandidateIDChanging(System.Nullable<int> value);
    partial void OnCandidateIDChanged();
    partial void OnExamIDChanging(int value);
    partial void OnExamIDChanged();
    partial void OnCandidatePinChanging(string value);
    partial void OnCandidatePinChanged();
    partial void OnWritingMarkChanging(System.Nullable<double> value);
    partial void OnWritingMarkChanged();
    partial void OnWritingCommentChanging(string value);
    partial void OnWritingCommentChanged();
    partial void OnProgramingMarkChanging(System.Nullable<double> value);
    partial void OnProgramingMarkChanged();
    partial void OnProgramingCommentChanging(string value);
    partial void OnProgramingCommentChanged();
    partial void OnVerbalMarkChanging(System.Nullable<double> value);
    partial void OnVerbalMarkChanged();
    partial void OnVerbalMarkTypeChanging(System.Nullable<int> value);
    partial void OnVerbalMarkTypeChanged();
    partial void OnVerbalTestedByChanging(string value);
    partial void OnVerbalTestedByChanged();
    partial void OnVerbalCommentChanging(string value);
    partial void OnVerbalCommentChanged();
    partial void OnIsFinishChanging(bool value);
    partial void OnIsFinishChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnHitListeningChanging(System.Nullable<int> value);
    partial void OnHitListeningChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnSendMailChanging(bool value);
    partial void OnSendMailChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public LOT_Candidate_Exam()
		{
			this._LOT_Candidate_Topics = new EntitySet<LOT_Candidate_Topic>(new Action<LOT_Candidate_Topic>(this.attach_LOT_Candidate_Topics), new Action<LOT_Candidate_Topic>(this.detach_LOT_Candidate_Topics));
			this._LOT_CandidateAnswers = new EntitySet<LOT_CandidateAnswer>(new Action<LOT_CandidateAnswer>(this.attach_LOT_CandidateAnswers), new Action<LOT_CandidateAnswer>(this.detach_LOT_CandidateAnswers));
			this._Candidate = default(EntityRef<Candidate>);
			this._Employee = default(EntityRef<Employee>);
			this._LOT_Exam = default(EntityRef<LOT_Exam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateID", DbType="Int")]
		public System.Nullable<int> CandidateID
		{
			get
			{
				return this._CandidateID;
			}
			set
			{
				if ((this._CandidateID != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIDChanging(value);
					this.SendPropertyChanging();
					this._CandidateID = value;
					this.SendPropertyChanged("CandidateID");
					this.OnCandidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int NOT NULL")]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					if (this._LOT_Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamIDChanging(value);
					this.SendPropertyChanging();
					this._ExamID = value;
					this.SendPropertyChanged("ExamID");
					this.OnExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatePin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CandidatePin
		{
			get
			{
				return this._CandidatePin;
			}
			set
			{
				if ((this._CandidatePin != value))
				{
					this.OnCandidatePinChanging(value);
					this.SendPropertyChanging();
					this._CandidatePin = value;
					this.SendPropertyChanged("CandidatePin");
					this.OnCandidatePinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WritingMark", DbType="Float")]
		public System.Nullable<double> WritingMark
		{
			get
			{
				return this._WritingMark;
			}
			set
			{
				if ((this._WritingMark != value))
				{
					this.OnWritingMarkChanging(value);
					this.SendPropertyChanging();
					this._WritingMark = value;
					this.SendPropertyChanged("WritingMark");
					this.OnWritingMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WritingComment", DbType="NVarChar(255)")]
		public string WritingComment
		{
			get
			{
				return this._WritingComment;
			}
			set
			{
				if ((this._WritingComment != value))
				{
					this.OnWritingCommentChanging(value);
					this.SendPropertyChanging();
					this._WritingComment = value;
					this.SendPropertyChanged("WritingComment");
					this.OnWritingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramingMark", DbType="Float")]
		public System.Nullable<double> ProgramingMark
		{
			get
			{
				return this._ProgramingMark;
			}
			set
			{
				if ((this._ProgramingMark != value))
				{
					this.OnProgramingMarkChanging(value);
					this.SendPropertyChanging();
					this._ProgramingMark = value;
					this.SendPropertyChanged("ProgramingMark");
					this.OnProgramingMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramingComment", DbType="NVarChar(255)")]
		public string ProgramingComment
		{
			get
			{
				return this._ProgramingComment;
			}
			set
			{
				if ((this._ProgramingComment != value))
				{
					this.OnProgramingCommentChanging(value);
					this.SendPropertyChanging();
					this._ProgramingComment = value;
					this.SendPropertyChanged("ProgramingComment");
					this.OnProgramingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalMark", DbType="Float")]
		public System.Nullable<double> VerbalMark
		{
			get
			{
				return this._VerbalMark;
			}
			set
			{
				if ((this._VerbalMark != value))
				{
					this.OnVerbalMarkChanging(value);
					this.SendPropertyChanging();
					this._VerbalMark = value;
					this.SendPropertyChanged("VerbalMark");
					this.OnVerbalMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalMarkType", DbType="Int")]
		public System.Nullable<int> VerbalMarkType
		{
			get
			{
				return this._VerbalMarkType;
			}
			set
			{
				if ((this._VerbalMarkType != value))
				{
					this.OnVerbalMarkTypeChanging(value);
					this.SendPropertyChanging();
					this._VerbalMarkType = value;
					this.SendPropertyChanged("VerbalMarkType");
					this.OnVerbalMarkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalTestedBy", DbType="NVarChar(100)")]
		public string VerbalTestedBy
		{
			get
			{
				return this._VerbalTestedBy;
			}
			set
			{
				if ((this._VerbalTestedBy != value))
				{
					this.OnVerbalTestedByChanging(value);
					this.SendPropertyChanging();
					this._VerbalTestedBy = value;
					this.SendPropertyChanged("VerbalTestedBy");
					this.OnVerbalTestedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalComment", DbType="NVarChar(255)")]
		public string VerbalComment
		{
			get
			{
				return this._VerbalComment;
			}
			set
			{
				if ((this._VerbalComment != value))
				{
					this.OnVerbalCommentChanging(value);
					this.SendPropertyChanging();
					this._VerbalComment = value;
					this.SendPropertyChanged("VerbalComment");
					this.OnVerbalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinish", DbType="Bit NOT NULL")]
		public bool IsFinish
		{
			get
			{
				return this._IsFinish;
			}
			set
			{
				if ((this._IsFinish != value))
				{
					this.OnIsFinishChanging(value);
					this.SendPropertyChanging();
					this._IsFinish = value;
					this.SendPropertyChanged("IsFinish");
					this.OnIsFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitListening", DbType="Int")]
		public System.Nullable<int> HitListening
		{
			get
			{
				return this._HitListening;
			}
			set
			{
				if ((this._HitListening != value))
				{
					this.OnHitListeningChanging(value);
					this.SendPropertyChanging();
					this._HitListening = value;
					this.SendPropertyChanged("HitListening");
					this.OnHitListeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMail", DbType="Bit NOT NULL")]
		public bool SendMail
		{
			get
			{
				return this._SendMail;
			}
			set
			{
				if ((this._SendMail != value))
				{
					this.OnSendMailChanging(value);
					this.SendPropertyChanging();
					this._SendMail = value;
					this.SendPropertyChanged("SendMail");
					this.OnSendMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Candidate_Exam_LOT_Candidate_Topic", Storage="_LOT_Candidate_Topics", ThisKey="ID", OtherKey="CandidateExamID")]
		public EntitySet<LOT_Candidate_Topic> LOT_Candidate_Topics
		{
			get
			{
				return this._LOT_Candidate_Topics;
			}
			set
			{
				this._LOT_Candidate_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Candidate_Exam_LOT_CandidateAnswer", Storage="_LOT_CandidateAnswers", ThisKey="ID", OtherKey="CandidateExamID")]
		public EntitySet<LOT_CandidateAnswer> LOT_CandidateAnswers
		{
			get
			{
				return this._LOT_CandidateAnswers;
			}
			set
			{
				this._LOT_CandidateAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_LOT_Candidate_Exam", Storage="_Candidate", ThisKey="CandidateID", OtherKey="ID", IsForeignKey=true)]
		public Candidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				Candidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.LOT_Candidate_Exams.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.LOT_Candidate_Exams.Add(this);
						this._CandidateID = value.ID;
					}
					else
					{
						this._CandidateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LOT_Candidate_Exam", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.LOT_Candidate_Exams.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.LOT_Candidate_Exams.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Exam_LOT_Candidate_Exam", Storage="_LOT_Exam", ThisKey="ExamID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Exam LOT_Exam
		{
			get
			{
				return this._LOT_Exam.Entity;
			}
			set
			{
				LOT_Exam previousValue = this._LOT_Exam.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Exam.Entity = null;
						previousValue.LOT_Candidate_Exams.Remove(this);
					}
					this._LOT_Exam.Entity = value;
					if ((value != null))
					{
						value.LOT_Candidate_Exams.Add(this);
						this._ExamID = value.ID;
					}
					else
					{
						this._ExamID = default(int);
					}
					this.SendPropertyChanged("LOT_Exam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_Candidate_Topics(LOT_Candidate_Topic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Candidate_Exam = this;
		}
		
		private void detach_LOT_Candidate_Topics(LOT_Candidate_Topic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Candidate_Exam = null;
		}
		
		private void attach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Candidate_Exam = this;
		}
		
		private void detach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Candidate_Exam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Candidate_Topic")]
	public partial class LOT_Candidate_Topic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CandidateExamID;
		
		private int _TopicID;
		
		private int _Hit;
		
		private EntityRef<LOT_Candidate_Exam> _LOT_Candidate_Exam;
		
		private EntityRef<LOT_ListeningTopic> _LOT_ListeningTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCandidateExamIDChanging(int value);
    partial void OnCandidateExamIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnHitChanging(int value);
    partial void OnHitChanged();
    #endregion
		
		public LOT_Candidate_Topic()
		{
			this._LOT_Candidate_Exam = default(EntityRef<LOT_Candidate_Exam>);
			this._LOT_ListeningTopic = default(EntityRef<LOT_ListeningTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateExamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CandidateExamID
		{
			get
			{
				return this._CandidateExamID;
			}
			set
			{
				if ((this._CandidateExamID != value))
				{
					if (this._LOT_Candidate_Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateExamIDChanging(value);
					this.SendPropertyChanging();
					this._CandidateExamID = value;
					this.SendPropertyChanged("CandidateExamID");
					this.OnCandidateExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					if (this._LOT_ListeningTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hit", DbType="Int NOT NULL")]
		public int Hit
		{
			get
			{
				return this._Hit;
			}
			set
			{
				if ((this._Hit != value))
				{
					this.OnHitChanging(value);
					this.SendPropertyChanging();
					this._Hit = value;
					this.SendPropertyChanged("Hit");
					this.OnHitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Candidate_Exam_LOT_Candidate_Topic", Storage="_LOT_Candidate_Exam", ThisKey="CandidateExamID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Candidate_Exam LOT_Candidate_Exam
		{
			get
			{
				return this._LOT_Candidate_Exam.Entity;
			}
			set
			{
				LOT_Candidate_Exam previousValue = this._LOT_Candidate_Exam.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Candidate_Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Candidate_Exam.Entity = null;
						previousValue.LOT_Candidate_Topics.Remove(this);
					}
					this._LOT_Candidate_Exam.Entity = value;
					if ((value != null))
					{
						value.LOT_Candidate_Topics.Add(this);
						this._CandidateExamID = value.ID;
					}
					else
					{
						this._CandidateExamID = default(int);
					}
					this.SendPropertyChanged("LOT_Candidate_Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_Candidate_Topic", Storage="_LOT_ListeningTopic", ThisKey="TopicID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ListeningTopic LOT_ListeningTopic
		{
			get
			{
				return this._LOT_ListeningTopic.Entity;
			}
			set
			{
				LOT_ListeningTopic previousValue = this._LOT_ListeningTopic.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ListeningTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ListeningTopic.Entity = null;
						previousValue.LOT_Candidate_Topics.Remove(this);
					}
					this._LOT_ListeningTopic.Entity = value;
					if ((value != null))
					{
						value.LOT_Candidate_Topics.Add(this);
						this._TopicID = value.ID;
					}
					else
					{
						this._TopicID = default(int);
					}
					this.SendPropertyChanged("LOT_ListeningTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_CandidateAnswer")]
	public partial class LOT_CandidateAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CandidateExamID;
		
		private int _ExamQuestionSectionID;
		
		private int _QuestionID;
		
		private System.Nullable<int> _AnswerID;
		
		private string _Essay;
		
		private EntityRef<LOT_Candidate_Exam> _LOT_Candidate_Exam;
		
		private EntityRef<LOT_ExamQuestion_Section> _LOT_ExamQuestion_Section;
		
		private EntityRef<LOT_Question> _LOT_Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCandidateExamIDChanging(int value);
    partial void OnCandidateExamIDChanged();
    partial void OnExamQuestionSectionIDChanging(int value);
    partial void OnExamQuestionSectionIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnAnswerIDChanging(System.Nullable<int> value);
    partial void OnAnswerIDChanged();
    partial void OnEssayChanging(string value);
    partial void OnEssayChanged();
    #endregion
		
		public LOT_CandidateAnswer()
		{
			this._LOT_Candidate_Exam = default(EntityRef<LOT_Candidate_Exam>);
			this._LOT_ExamQuestion_Section = default(EntityRef<LOT_ExamQuestion_Section>);
			this._LOT_Question = default(EntityRef<LOT_Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateExamID", DbType="Int NOT NULL")]
		public int CandidateExamID
		{
			get
			{
				return this._CandidateExamID;
			}
			set
			{
				if ((this._CandidateExamID != value))
				{
					if (this._LOT_Candidate_Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateExamIDChanging(value);
					this.SendPropertyChanging();
					this._CandidateExamID = value;
					this.SendPropertyChanged("CandidateExamID");
					this.OnCandidateExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					if (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamQuestionSectionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionSectionID = value;
					this.SendPropertyChanged("ExamQuestionSectionID");
					this.OnExamQuestionSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._LOT_Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int")]
		public System.Nullable<int> AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Essay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Essay
		{
			get
			{
				return this._Essay;
			}
			set
			{
				if ((this._Essay != value))
				{
					this.OnEssayChanging(value);
					this.SendPropertyChanging();
					this._Essay = value;
					this.SendPropertyChanged("Essay");
					this.OnEssayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Candidate_Exam_LOT_CandidateAnswer", Storage="_LOT_Candidate_Exam", ThisKey="CandidateExamID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Candidate_Exam LOT_Candidate_Exam
		{
			get
			{
				return this._LOT_Candidate_Exam.Entity;
			}
			set
			{
				LOT_Candidate_Exam previousValue = this._LOT_Candidate_Exam.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Candidate_Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Candidate_Exam.Entity = null;
						previousValue.LOT_CandidateAnswers.Remove(this);
					}
					this._LOT_Candidate_Exam.Entity = value;
					if ((value != null))
					{
						value.LOT_CandidateAnswers.Add(this);
						this._CandidateExamID = value.ID;
					}
					else
					{
						this._CandidateExamID = default(int);
					}
					this.SendPropertyChanged("LOT_Candidate_Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_CandidateAnswer", Storage="_LOT_ExamQuestion_Section", ThisKey="ExamQuestionSectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ExamQuestion_Section LOT_ExamQuestion_Section
		{
			get
			{
				return this._LOT_ExamQuestion_Section.Entity;
			}
			set
			{
				LOT_ExamQuestion_Section previousValue = this._LOT_ExamQuestion_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ExamQuestion_Section.Entity = null;
						previousValue.LOT_CandidateAnswers.Remove(this);
					}
					this._LOT_ExamQuestion_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_CandidateAnswers.Add(this);
						this._ExamQuestionSectionID = value.ID;
					}
					else
					{
						this._ExamQuestionSectionID = default(int);
					}
					this.SendPropertyChanged("LOT_ExamQuestion_Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Question_LOT_CandidateAnswer", Storage="_LOT_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Question LOT_Question
		{
			get
			{
				return this._LOT_Question.Entity;
			}
			set
			{
				LOT_Question previousValue = this._LOT_Question.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Question.Entity = null;
						previousValue.LOT_CandidateAnswers.Remove(this);
					}
					this._LOT_Question.Entity = value;
					if ((value != null))
					{
						value.LOT_CandidateAnswers.Add(this);
						this._QuestionID = value.ID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("LOT_Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ComprehensionParagraph")]
	public partial class LOT_ComprehensionParagraph : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ParagraphContent;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LOT_ExamQuestion_Section_Comprehension> _LOT_ExamQuestion_Section_Comprehensions;
		
		private EntitySet<LOT_Question> _LOT_Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParagraphContentChanging(string value);
    partial void OnParagraphContentChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_ComprehensionParagraph()
		{
			this._LOT_ExamQuestion_Section_Comprehensions = new EntitySet<LOT_ExamQuestion_Section_Comprehension>(new Action<LOT_ExamQuestion_Section_Comprehension>(this.attach_LOT_ExamQuestion_Section_Comprehensions), new Action<LOT_ExamQuestion_Section_Comprehension>(this.detach_LOT_ExamQuestion_Section_Comprehensions));
			this._LOT_Questions = new EntitySet<LOT_Question>(new Action<LOT_Question>(this.attach_LOT_Questions), new Action<LOT_Question>(this.detach_LOT_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ParagraphContent
		{
			get
			{
				return this._ParagraphContent;
			}
			set
			{
				if ((this._ParagraphContent != value))
				{
					this.OnParagraphContentChanging(value);
					this.SendPropertyChanging();
					this._ParagraphContent = value;
					this.SendPropertyChanged("ParagraphContent");
					this.OnParagraphContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ComprehensionParagraph_LOT_ExamQuestion_Section_Comprehension", Storage="_LOT_ExamQuestion_Section_Comprehensions", ThisKey="ID", OtherKey="ParagraphID")]
		public EntitySet<LOT_ExamQuestion_Section_Comprehension> LOT_ExamQuestion_Section_Comprehensions
		{
			get
			{
				return this._LOT_ExamQuestion_Section_Comprehensions;
			}
			set
			{
				this._LOT_ExamQuestion_Section_Comprehensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ComprehensionParagraph_LOT_Question", Storage="_LOT_Questions", ThisKey="ID", OtherKey="ParagraphID")]
		public EntitySet<LOT_Question> LOT_Questions
		{
			get
			{
				return this._LOT_Questions;
			}
			set
			{
				this._LOT_Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_ExamQuestion_Section_Comprehensions(LOT_ExamQuestion_Section_Comprehension entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ComprehensionParagraph = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_Comprehensions(LOT_ExamQuestion_Section_Comprehension entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ComprehensionParagraph = null;
		}
		
		private void attach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ComprehensionParagraph = this;
		}
		
		private void detach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ComprehensionParagraph = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Exam")]
	public partial class LOT_Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _ExamQuestionID;
		
		private System.DateTime _ExamDate;
		
		private byte _ExamType;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<LOT_Candidate_Exam> _LOT_Candidate_Exams;
		
		private EntityRef<LOT_ExamQuestion> _LOT_ExamQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnExamQuestionIDChanging(int value);
    partial void OnExamQuestionIDChanged();
    partial void OnExamDateChanging(System.DateTime value);
    partial void OnExamDateChanged();
    partial void OnExamTypeChanging(byte value);
    partial void OnExamTypeChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_Exam()
		{
			this._LOT_Candidate_Exams = new EntitySet<LOT_Candidate_Exam>(new Action<LOT_Candidate_Exam>(this.attach_LOT_Candidate_Exams), new Action<LOT_Candidate_Exam>(this.detach_LOT_Candidate_Exams));
			this._LOT_ExamQuestion = default(EntityRef<LOT_ExamQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionID", DbType="Int NOT NULL")]
		public int ExamQuestionID
		{
			get
			{
				return this._ExamQuestionID;
			}
			set
			{
				if ((this._ExamQuestionID != value))
				{
					if (this._LOT_ExamQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionID = value;
					this.SendPropertyChanged("ExamQuestionID");
					this.OnExamQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this.OnExamDateChanging(value);
					this.SendPropertyChanging();
					this._ExamDate = value;
					this.SendPropertyChanged("ExamDate");
					this.OnExamDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamType", DbType="TinyInt NOT NULL")]
		public byte ExamType
		{
			get
			{
				return this._ExamType;
			}
			set
			{
				if ((this._ExamType != value))
				{
					this.OnExamTypeChanging(value);
					this.SendPropertyChanging();
					this._ExamType = value;
					this.SendPropertyChanged("ExamType");
					this.OnExamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Exam_LOT_Candidate_Exam", Storage="_LOT_Candidate_Exams", ThisKey="ID", OtherKey="ExamID")]
		public EntitySet<LOT_Candidate_Exam> LOT_Candidate_Exams
		{
			get
			{
				return this._LOT_Candidate_Exams;
			}
			set
			{
				this._LOT_Candidate_Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_LOT_Exam", Storage="_LOT_ExamQuestion", ThisKey="ExamQuestionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ExamQuestion LOT_ExamQuestion
		{
			get
			{
				return this._LOT_ExamQuestion.Entity;
			}
			set
			{
				LOT_ExamQuestion previousValue = this._LOT_ExamQuestion.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ExamQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ExamQuestion.Entity = null;
						previousValue.LOT_Exams.Remove(this);
					}
					this._LOT_ExamQuestion.Entity = value;
					if ((value != null))
					{
						value.LOT_Exams.Add(this);
						this._ExamQuestionID = value.ID;
					}
					else
					{
						this._ExamQuestionID = default(int);
					}
					this.SendPropertyChanged("LOT_ExamQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Exam = this;
		}
		
		private void detach_LOT_Candidate_Exams(LOT_Candidate_Exam entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Exam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ExamQuestion")]
	public partial class LOT_ExamQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _ExamQuestionTime;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LOT_Exam> _LOT_Exams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnExamQuestionTimeChanging(int value);
    partial void OnExamQuestionTimeChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_ExamQuestion()
		{
			this._LOT_Exams = new EntitySet<LOT_Exam>(new Action<LOT_Exam>(this.attach_LOT_Exams), new Action<LOT_Exam>(this.detach_LOT_Exams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionTime", DbType="Int NOT NULL")]
		public int ExamQuestionTime
		{
			get
			{
				return this._ExamQuestionTime;
			}
			set
			{
				if ((this._ExamQuestionTime != value))
				{
					this.OnExamQuestionTimeChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionTime = value;
					this.SendPropertyChanged("ExamQuestionTime");
					this.OnExamQuestionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_LOT_Exam", Storage="_LOT_Exams", ThisKey="ID", OtherKey="ExamQuestionID")]
		public EntitySet<LOT_Exam> LOT_Exams
		{
			get
			{
				return this._LOT_Exams;
			}
			set
			{
				this._LOT_Exams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_Exams(LOT_Exam entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion = this;
		}
		
		private void detach_LOT_Exams(LOT_Exam entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ExamQuestion_Section")]
	public partial class LOT_ExamQuestion_Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExamQuestionID;
		
		private int _SectionID;
		
		private int _MaxMark;
		
		private bool _IsRandom;
		
		private System.Nullable<int> _NumberOfQuestions;
		
		private EntitySet<LOT_CandidateAnswer> _LOT_CandidateAnswers;
		
		private EntitySet<LOT_ExamQuestion_Section_Comprehension> _LOT_ExamQuestion_Section_Comprehensions;
		
		private EntitySet<LOT_ExamQuestion_Section_ListeningTopic> _LOT_ExamQuestion_Section_ListeningTopics;
		
		private EntitySet<LOT_ExamQuestion_Section_Question> _LOT_ExamQuestion_Section_Questions;
		
		private EntityRef<LOT_Section> _LOT_Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExamQuestionIDChanging(int value);
    partial void OnExamQuestionIDChanged();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnMaxMarkChanging(int value);
    partial void OnMaxMarkChanged();
    partial void OnIsRandomChanging(bool value);
    partial void OnIsRandomChanged();
    partial void OnNumberOfQuestionsChanging(System.Nullable<int> value);
    partial void OnNumberOfQuestionsChanged();
    #endregion
		
		public LOT_ExamQuestion_Section()
		{
			this._LOT_CandidateAnswers = new EntitySet<LOT_CandidateAnswer>(new Action<LOT_CandidateAnswer>(this.attach_LOT_CandidateAnswers), new Action<LOT_CandidateAnswer>(this.detach_LOT_CandidateAnswers));
			this._LOT_ExamQuestion_Section_Comprehensions = new EntitySet<LOT_ExamQuestion_Section_Comprehension>(new Action<LOT_ExamQuestion_Section_Comprehension>(this.attach_LOT_ExamQuestion_Section_Comprehensions), new Action<LOT_ExamQuestion_Section_Comprehension>(this.detach_LOT_ExamQuestion_Section_Comprehensions));
			this._LOT_ExamQuestion_Section_ListeningTopics = new EntitySet<LOT_ExamQuestion_Section_ListeningTopic>(new Action<LOT_ExamQuestion_Section_ListeningTopic>(this.attach_LOT_ExamQuestion_Section_ListeningTopics), new Action<LOT_ExamQuestion_Section_ListeningTopic>(this.detach_LOT_ExamQuestion_Section_ListeningTopics));
			this._LOT_ExamQuestion_Section_Questions = new EntitySet<LOT_ExamQuestion_Section_Question>(new Action<LOT_ExamQuestion_Section_Question>(this.attach_LOT_ExamQuestion_Section_Questions), new Action<LOT_ExamQuestion_Section_Question>(this.detach_LOT_ExamQuestion_Section_Questions));
			this._LOT_Section = default(EntityRef<LOT_Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionID", DbType="Int NOT NULL")]
		public int ExamQuestionID
		{
			get
			{
				return this._ExamQuestionID;
			}
			set
			{
				if ((this._ExamQuestionID != value))
				{
					this.OnExamQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionID = value;
					this.SendPropertyChanged("ExamQuestionID");
					this.OnExamQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					if (this._LOT_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMark", DbType="Int NOT NULL")]
		public int MaxMark
		{
			get
			{
				return this._MaxMark;
			}
			set
			{
				if ((this._MaxMark != value))
				{
					this.OnMaxMarkChanging(value);
					this.SendPropertyChanging();
					this._MaxMark = value;
					this.SendPropertyChanged("MaxMark");
					this.OnMaxMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRandom", DbType="Bit NOT NULL")]
		public bool IsRandom
		{
			get
			{
				return this._IsRandom;
			}
			set
			{
				if ((this._IsRandom != value))
				{
					this.OnIsRandomChanging(value);
					this.SendPropertyChanging();
					this._IsRandom = value;
					this.SendPropertyChanged("IsRandom");
					this.OnIsRandomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfQuestions", DbType="Int")]
		public System.Nullable<int> NumberOfQuestions
		{
			get
			{
				return this._NumberOfQuestions;
			}
			set
			{
				if ((this._NumberOfQuestions != value))
				{
					this.OnNumberOfQuestionsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfQuestions = value;
					this.SendPropertyChanged("NumberOfQuestions");
					this.OnNumberOfQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_CandidateAnswer", Storage="_LOT_CandidateAnswers", ThisKey="ID", OtherKey="ExamQuestionSectionID")]
		public EntitySet<LOT_CandidateAnswer> LOT_CandidateAnswers
		{
			get
			{
				return this._LOT_CandidateAnswers;
			}
			set
			{
				this._LOT_CandidateAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_Comprehension", Storage="_LOT_ExamQuestion_Section_Comprehensions", ThisKey="ID", OtherKey="ExamQuestionSectionID")]
		public EntitySet<LOT_ExamQuestion_Section_Comprehension> LOT_ExamQuestion_Section_Comprehensions
		{
			get
			{
				return this._LOT_ExamQuestion_Section_Comprehensions;
			}
			set
			{
				this._LOT_ExamQuestion_Section_Comprehensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_ListeningTopic", Storage="_LOT_ExamQuestion_Section_ListeningTopics", ThisKey="ID", OtherKey="ExamQuestionSectionID")]
		public EntitySet<LOT_ExamQuestion_Section_ListeningTopic> LOT_ExamQuestion_Section_ListeningTopics
		{
			get
			{
				return this._LOT_ExamQuestion_Section_ListeningTopics;
			}
			set
			{
				this._LOT_ExamQuestion_Section_ListeningTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_Question", Storage="_LOT_ExamQuestion_Section_Questions", ThisKey="ID", OtherKey="ExamQuestionSectionID")]
		public EntitySet<LOT_ExamQuestion_Section_Question> LOT_ExamQuestion_Section_Questions
		{
			get
			{
				return this._LOT_ExamQuestion_Section_Questions;
			}
			set
			{
				this._LOT_ExamQuestion_Section_Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Section_LOT_ExamQuestion_Section", Storage="_LOT_Section", ThisKey="SectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Section LOT_Section
		{
			get
			{
				return this._LOT_Section.Entity;
			}
			set
			{
				LOT_Section previousValue = this._LOT_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Section.Entity = null;
						previousValue.LOT_ExamQuestion_Sections.Remove(this);
					}
					this._LOT_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Sections.Add(this);
						this._SectionID = value.ID;
					}
					else
					{
						this._SectionID = default(int);
					}
					this.SendPropertyChanged("LOT_Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = this;
		}
		
		private void detach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = null;
		}
		
		private void attach_LOT_ExamQuestion_Section_Comprehensions(LOT_ExamQuestion_Section_Comprehension entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_Comprehensions(LOT_ExamQuestion_Section_Comprehension entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = null;
		}
		
		private void attach_LOT_ExamQuestion_Section_ListeningTopics(LOT_ExamQuestion_Section_ListeningTopic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_ListeningTopics(LOT_ExamQuestion_Section_ListeningTopic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = null;
		}
		
		private void attach_LOT_ExamQuestion_Section_Questions(LOT_ExamQuestion_Section_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_Questions(LOT_ExamQuestion_Section_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ExamQuestion_Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ExamQuestion_Section_Comprehension")]
	public partial class LOT_ExamQuestion_Section_Comprehension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExamQuestionSectionID;
		
		private int _ParagraphID;
		
		private EntityRef<LOT_ComprehensionParagraph> _LOT_ComprehensionParagraph;
		
		private EntityRef<LOT_ExamQuestion_Section> _LOT_ExamQuestion_Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExamQuestionSectionIDChanging(int value);
    partial void OnExamQuestionSectionIDChanged();
    partial void OnParagraphIDChanging(int value);
    partial void OnParagraphIDChanged();
    #endregion
		
		public LOT_ExamQuestion_Section_Comprehension()
		{
			this._LOT_ComprehensionParagraph = default(EntityRef<LOT_ComprehensionParagraph>);
			this._LOT_ExamQuestion_Section = default(EntityRef<LOT_ExamQuestion_Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					if (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamQuestionSectionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionSectionID = value;
					this.SendPropertyChanged("ExamQuestionSectionID");
					this.OnExamQuestionSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphID", DbType="Int NOT NULL")]
		public int ParagraphID
		{
			get
			{
				return this._ParagraphID;
			}
			set
			{
				if ((this._ParagraphID != value))
				{
					if (this._LOT_ComprehensionParagraph.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParagraphIDChanging(value);
					this.SendPropertyChanging();
					this._ParagraphID = value;
					this.SendPropertyChanged("ParagraphID");
					this.OnParagraphIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ComprehensionParagraph_LOT_ExamQuestion_Section_Comprehension", Storage="_LOT_ComprehensionParagraph", ThisKey="ParagraphID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ComprehensionParagraph LOT_ComprehensionParagraph
		{
			get
			{
				return this._LOT_ComprehensionParagraph.Entity;
			}
			set
			{
				LOT_ComprehensionParagraph previousValue = this._LOT_ComprehensionParagraph.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ComprehensionParagraph.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ComprehensionParagraph.Entity = null;
						previousValue.LOT_ExamQuestion_Section_Comprehensions.Remove(this);
					}
					this._LOT_ComprehensionParagraph.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_Comprehensions.Add(this);
						this._ParagraphID = value.ID;
					}
					else
					{
						this._ParagraphID = default(int);
					}
					this.SendPropertyChanged("LOT_ComprehensionParagraph");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_Comprehension", Storage="_LOT_ExamQuestion_Section", ThisKey="ExamQuestionSectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ExamQuestion_Section LOT_ExamQuestion_Section
		{
			get
			{
				return this._LOT_ExamQuestion_Section.Entity;
			}
			set
			{
				LOT_ExamQuestion_Section previousValue = this._LOT_ExamQuestion_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ExamQuestion_Section.Entity = null;
						previousValue.LOT_ExamQuestion_Section_Comprehensions.Remove(this);
					}
					this._LOT_ExamQuestion_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_Comprehensions.Add(this);
						this._ExamQuestionSectionID = value.ID;
					}
					else
					{
						this._ExamQuestionSectionID = default(int);
					}
					this.SendPropertyChanged("LOT_ExamQuestion_Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ExamQuestion_Section_ListeningTopic")]
	public partial class LOT_ExamQuestion_Section_ListeningTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExamQuestionSectionID;
		
		private int _ListeningTopicID;
		
		private EntityRef<LOT_ExamQuestion_Section> _LOT_ExamQuestion_Section;
		
		private EntityRef<LOT_ListeningTopic> _LOT_ListeningTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExamQuestionSectionIDChanging(int value);
    partial void OnExamQuestionSectionIDChanged();
    partial void OnListeningTopicIDChanging(int value);
    partial void OnListeningTopicIDChanged();
    #endregion
		
		public LOT_ExamQuestion_Section_ListeningTopic()
		{
			this._LOT_ExamQuestion_Section = default(EntityRef<LOT_ExamQuestion_Section>);
			this._LOT_ListeningTopic = default(EntityRef<LOT_ListeningTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					if (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamQuestionSectionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionSectionID = value;
					this.SendPropertyChanged("ExamQuestionSectionID");
					this.OnExamQuestionSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListeningTopicID", DbType="Int NOT NULL")]
		public int ListeningTopicID
		{
			get
			{
				return this._ListeningTopicID;
			}
			set
			{
				if ((this._ListeningTopicID != value))
				{
					if (this._LOT_ListeningTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnListeningTopicIDChanging(value);
					this.SendPropertyChanging();
					this._ListeningTopicID = value;
					this.SendPropertyChanged("ListeningTopicID");
					this.OnListeningTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_ListeningTopic", Storage="_LOT_ExamQuestion_Section", ThisKey="ExamQuestionSectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ExamQuestion_Section LOT_ExamQuestion_Section
		{
			get
			{
				return this._LOT_ExamQuestion_Section.Entity;
			}
			set
			{
				LOT_ExamQuestion_Section previousValue = this._LOT_ExamQuestion_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ExamQuestion_Section.Entity = null;
						previousValue.LOT_ExamQuestion_Section_ListeningTopics.Remove(this);
					}
					this._LOT_ExamQuestion_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_ListeningTopics.Add(this);
						this._ExamQuestionSectionID = value.ID;
					}
					else
					{
						this._ExamQuestionSectionID = default(int);
					}
					this.SendPropertyChanged("LOT_ExamQuestion_Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_ExamQuestion_Section_ListeningTopic", Storage="_LOT_ListeningTopic", ThisKey="ListeningTopicID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ListeningTopic LOT_ListeningTopic
		{
			get
			{
				return this._LOT_ListeningTopic.Entity;
			}
			set
			{
				LOT_ListeningTopic previousValue = this._LOT_ListeningTopic.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ListeningTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ListeningTopic.Entity = null;
						previousValue.LOT_ExamQuestion_Section_ListeningTopics.Remove(this);
					}
					this._LOT_ListeningTopic.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_ListeningTopics.Add(this);
						this._ListeningTopicID = value.ID;
					}
					else
					{
						this._ListeningTopicID = default(int);
					}
					this.SendPropertyChanged("LOT_ListeningTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ExamQuestion_Section_Question")]
	public partial class LOT_ExamQuestion_Section_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExamQuestionSectionID;
		
		private int _QuestionID;
		
		private EntityRef<LOT_ExamQuestion_Section> _LOT_ExamQuestion_Section;
		
		private EntityRef<LOT_Question> _LOT_Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExamQuestionSectionIDChanging(int value);
    partial void OnExamQuestionSectionIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    #endregion
		
		public LOT_ExamQuestion_Section_Question()
		{
			this._LOT_ExamQuestion_Section = default(EntityRef<LOT_ExamQuestion_Section>);
			this._LOT_Question = default(EntityRef<LOT_Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					if (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExamQuestionSectionIDChanging(value);
					this.SendPropertyChanging();
					this._ExamQuestionSectionID = value;
					this.SendPropertyChanged("ExamQuestionSectionID");
					this.OnExamQuestionSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._LOT_Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ExamQuestion_Section_LOT_ExamQuestion_Section_Question", Storage="_LOT_ExamQuestion_Section", ThisKey="ExamQuestionSectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ExamQuestion_Section LOT_ExamQuestion_Section
		{
			get
			{
				return this._LOT_ExamQuestion_Section.Entity;
			}
			set
			{
				LOT_ExamQuestion_Section previousValue = this._LOT_ExamQuestion_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ExamQuestion_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ExamQuestion_Section.Entity = null;
						previousValue.LOT_ExamQuestion_Section_Questions.Remove(this);
					}
					this._LOT_ExamQuestion_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_Questions.Add(this);
						this._ExamQuestionSectionID = value.ID;
					}
					else
					{
						this._ExamQuestionSectionID = default(int);
					}
					this.SendPropertyChanged("LOT_ExamQuestion_Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Question_LOT_ExamQuestion_Section_Question", Storage="_LOT_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Question LOT_Question
		{
			get
			{
				return this._LOT_Question.Entity;
			}
			set
			{
				LOT_Question previousValue = this._LOT_Question.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Question.Entity = null;
						previousValue.LOT_ExamQuestion_Section_Questions.Remove(this);
					}
					this._LOT_Question.Entity = value;
					if ((value != null))
					{
						value.LOT_ExamQuestion_Section_Questions.Add(this);
						this._QuestionID = value.ID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("LOT_Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ListeningTopic")]
	public partial class LOT_ListeningTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TopicName;
		
		private string _FileName;
		
		private int _RepeatTimes;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LOT_Candidate_Topic> _LOT_Candidate_Topics;
		
		private EntitySet<LOT_ExamQuestion_Section_ListeningTopic> _LOT_ExamQuestion_Section_ListeningTopics;
		
		private EntitySet<LOT_Question> _LOT_Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTopicNameChanging(string value);
    partial void OnTopicNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnRepeatTimesChanging(int value);
    partial void OnRepeatTimesChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_ListeningTopic()
		{
			this._LOT_Candidate_Topics = new EntitySet<LOT_Candidate_Topic>(new Action<LOT_Candidate_Topic>(this.attach_LOT_Candidate_Topics), new Action<LOT_Candidate_Topic>(this.detach_LOT_Candidate_Topics));
			this._LOT_ExamQuestion_Section_ListeningTopics = new EntitySet<LOT_ExamQuestion_Section_ListeningTopic>(new Action<LOT_ExamQuestion_Section_ListeningTopic>(this.attach_LOT_ExamQuestion_Section_ListeningTopics), new Action<LOT_ExamQuestion_Section_ListeningTopic>(this.detach_LOT_ExamQuestion_Section_ListeningTopics));
			this._LOT_Questions = new EntitySet<LOT_Question>(new Action<LOT_Question>(this.attach_LOT_Questions), new Action<LOT_Question>(this.detach_LOT_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TopicName
		{
			get
			{
				return this._TopicName;
			}
			set
			{
				if ((this._TopicName != value))
				{
					this.OnTopicNameChanging(value);
					this.SendPropertyChanging();
					this._TopicName = value;
					this.SendPropertyChanged("TopicName");
					this.OnTopicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatTimes", DbType="Int NOT NULL")]
		public int RepeatTimes
		{
			get
			{
				return this._RepeatTimes;
			}
			set
			{
				if ((this._RepeatTimes != value))
				{
					this.OnRepeatTimesChanging(value);
					this.SendPropertyChanging();
					this._RepeatTimes = value;
					this.SendPropertyChanged("RepeatTimes");
					this.OnRepeatTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_Candidate_Topic", Storage="_LOT_Candidate_Topics", ThisKey="ID", OtherKey="TopicID")]
		public EntitySet<LOT_Candidate_Topic> LOT_Candidate_Topics
		{
			get
			{
				return this._LOT_Candidate_Topics;
			}
			set
			{
				this._LOT_Candidate_Topics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_ExamQuestion_Section_ListeningTopic", Storage="_LOT_ExamQuestion_Section_ListeningTopics", ThisKey="ID", OtherKey="ListeningTopicID")]
		public EntitySet<LOT_ExamQuestion_Section_ListeningTopic> LOT_ExamQuestion_Section_ListeningTopics
		{
			get
			{
				return this._LOT_ExamQuestion_Section_ListeningTopics;
			}
			set
			{
				this._LOT_ExamQuestion_Section_ListeningTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_Question", Storage="_LOT_Questions", ThisKey="ID", OtherKey="ListeningTopicID")]
		public EntitySet<LOT_Question> LOT_Questions
		{
			get
			{
				return this._LOT_Questions;
			}
			set
			{
				this._LOT_Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_Candidate_Topics(LOT_Candidate_Topic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = this;
		}
		
		private void detach_LOT_Candidate_Topics(LOT_Candidate_Topic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = null;
		}
		
		private void attach_LOT_ExamQuestion_Section_ListeningTopics(LOT_ExamQuestion_Section_ListeningTopic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_ListeningTopics(LOT_ExamQuestion_Section_ListeningTopic entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = null;
		}
		
		private void attach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = this;
		}
		
		private void detach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ListeningTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_ProgrammingSkillType")]
	public partial class LOT_ProgrammingSkillType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<LOT_Question> _LOT_Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LOT_ProgrammingSkillType()
		{
			this._LOT_Questions = new EntitySet<LOT_Question>(new Action<LOT_Question>(this.attach_LOT_Questions), new Action<LOT_Question>(this.detach_LOT_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ProgrammingSkillType_LOT_Question", Storage="_LOT_Questions", ThisKey="ID", OtherKey="ProgrammingTypeID")]
		public EntitySet<LOT_Question> LOT_Questions
		{
			get
			{
				return this._LOT_Questions;
			}
			set
			{
				this._LOT_Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ProgrammingSkillType = this;
		}
		
		private void detach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_ProgrammingSkillType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Question")]
	public partial class LOT_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SectionID;
		
		private string _QuestionContent;
		
		private bool _IsMultipleChoice;
		
		private System.Nullable<int> _ListeningTopicID;
		
		private System.Nullable<int> _ParagraphID;
		
		private System.Nullable<int> _ProgrammingTypeID;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LOT_CandidateAnswer> _LOT_CandidateAnswers;
		
		private EntitySet<LOT_ExamQuestion_Section_Question> _LOT_ExamQuestion_Section_Questions;
		
		private EntityRef<LOT_ComprehensionParagraph> _LOT_ComprehensionParagraph;
		
		private EntityRef<LOT_ListeningTopic> _LOT_ListeningTopic;
		
		private EntityRef<LOT_ProgrammingSkillType> _LOT_ProgrammingSkillType;
		
		private EntityRef<LOT_Section> _LOT_Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnQuestionContentChanging(string value);
    partial void OnQuestionContentChanged();
    partial void OnIsMultipleChoiceChanging(bool value);
    partial void OnIsMultipleChoiceChanged();
    partial void OnListeningTopicIDChanging(System.Nullable<int> value);
    partial void OnListeningTopicIDChanged();
    partial void OnParagraphIDChanging(System.Nullable<int> value);
    partial void OnParagraphIDChanged();
    partial void OnProgrammingTypeIDChanging(System.Nullable<int> value);
    partial void OnProgrammingTypeIDChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_Question()
		{
			this._LOT_CandidateAnswers = new EntitySet<LOT_CandidateAnswer>(new Action<LOT_CandidateAnswer>(this.attach_LOT_CandidateAnswers), new Action<LOT_CandidateAnswer>(this.detach_LOT_CandidateAnswers));
			this._LOT_ExamQuestion_Section_Questions = new EntitySet<LOT_ExamQuestion_Section_Question>(new Action<LOT_ExamQuestion_Section_Question>(this.attach_LOT_ExamQuestion_Section_Questions), new Action<LOT_ExamQuestion_Section_Question>(this.detach_LOT_ExamQuestion_Section_Questions));
			this._LOT_ComprehensionParagraph = default(EntityRef<LOT_ComprehensionParagraph>);
			this._LOT_ListeningTopic = default(EntityRef<LOT_ListeningTopic>);
			this._LOT_ProgrammingSkillType = default(EntityRef<LOT_ProgrammingSkillType>);
			this._LOT_Section = default(EntityRef<LOT_Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					if (this._LOT_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QuestionContent
		{
			get
			{
				return this._QuestionContent;
			}
			set
			{
				if ((this._QuestionContent != value))
				{
					this.OnQuestionContentChanging(value);
					this.SendPropertyChanging();
					this._QuestionContent = value;
					this.SendPropertyChanged("QuestionContent");
					this.OnQuestionContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultipleChoice", DbType="Bit NOT NULL")]
		public bool IsMultipleChoice
		{
			get
			{
				return this._IsMultipleChoice;
			}
			set
			{
				if ((this._IsMultipleChoice != value))
				{
					this.OnIsMultipleChoiceChanging(value);
					this.SendPropertyChanging();
					this._IsMultipleChoice = value;
					this.SendPropertyChanged("IsMultipleChoice");
					this.OnIsMultipleChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListeningTopicID", DbType="Int")]
		public System.Nullable<int> ListeningTopicID
		{
			get
			{
				return this._ListeningTopicID;
			}
			set
			{
				if ((this._ListeningTopicID != value))
				{
					if (this._LOT_ListeningTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnListeningTopicIDChanging(value);
					this.SendPropertyChanging();
					this._ListeningTopicID = value;
					this.SendPropertyChanged("ListeningTopicID");
					this.OnListeningTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphID", DbType="Int")]
		public System.Nullable<int> ParagraphID
		{
			get
			{
				return this._ParagraphID;
			}
			set
			{
				if ((this._ParagraphID != value))
				{
					if (this._LOT_ComprehensionParagraph.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParagraphIDChanging(value);
					this.SendPropertyChanging();
					this._ParagraphID = value;
					this.SendPropertyChanged("ParagraphID");
					this.OnParagraphIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammingTypeID", DbType="Int")]
		public System.Nullable<int> ProgrammingTypeID
		{
			get
			{
				return this._ProgrammingTypeID;
			}
			set
			{
				if ((this._ProgrammingTypeID != value))
				{
					if (this._LOT_ProgrammingSkillType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgrammingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProgrammingTypeID = value;
					this.SendPropertyChanged("ProgrammingTypeID");
					this.OnProgrammingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Question_LOT_CandidateAnswer", Storage="_LOT_CandidateAnswers", ThisKey="ID", OtherKey="QuestionID")]
		public EntitySet<LOT_CandidateAnswer> LOT_CandidateAnswers
		{
			get
			{
				return this._LOT_CandidateAnswers;
			}
			set
			{
				this._LOT_CandidateAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Question_LOT_ExamQuestion_Section_Question", Storage="_LOT_ExamQuestion_Section_Questions", ThisKey="ID", OtherKey="QuestionID")]
		public EntitySet<LOT_ExamQuestion_Section_Question> LOT_ExamQuestion_Section_Questions
		{
			get
			{
				return this._LOT_ExamQuestion_Section_Questions;
			}
			set
			{
				this._LOT_ExamQuestion_Section_Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ComprehensionParagraph_LOT_Question", Storage="_LOT_ComprehensionParagraph", ThisKey="ParagraphID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ComprehensionParagraph LOT_ComprehensionParagraph
		{
			get
			{
				return this._LOT_ComprehensionParagraph.Entity;
			}
			set
			{
				LOT_ComprehensionParagraph previousValue = this._LOT_ComprehensionParagraph.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ComprehensionParagraph.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ComprehensionParagraph.Entity = null;
						previousValue.LOT_Questions.Remove(this);
					}
					this._LOT_ComprehensionParagraph.Entity = value;
					if ((value != null))
					{
						value.LOT_Questions.Add(this);
						this._ParagraphID = value.ID;
					}
					else
					{
						this._ParagraphID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOT_ComprehensionParagraph");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ListeningTopic_LOT_Question", Storage="_LOT_ListeningTopic", ThisKey="ListeningTopicID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ListeningTopic LOT_ListeningTopic
		{
			get
			{
				return this._LOT_ListeningTopic.Entity;
			}
			set
			{
				LOT_ListeningTopic previousValue = this._LOT_ListeningTopic.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ListeningTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ListeningTopic.Entity = null;
						previousValue.LOT_Questions.Remove(this);
					}
					this._LOT_ListeningTopic.Entity = value;
					if ((value != null))
					{
						value.LOT_Questions.Add(this);
						this._ListeningTopicID = value.ID;
					}
					else
					{
						this._ListeningTopicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOT_ListeningTopic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_ProgrammingSkillType_LOT_Question", Storage="_LOT_ProgrammingSkillType", ThisKey="ProgrammingTypeID", OtherKey="ID", IsForeignKey=true)]
		public LOT_ProgrammingSkillType LOT_ProgrammingSkillType
		{
			get
			{
				return this._LOT_ProgrammingSkillType.Entity;
			}
			set
			{
				LOT_ProgrammingSkillType previousValue = this._LOT_ProgrammingSkillType.Entity;
				if (((previousValue != value) 
							|| (this._LOT_ProgrammingSkillType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_ProgrammingSkillType.Entity = null;
						previousValue.LOT_Questions.Remove(this);
					}
					this._LOT_ProgrammingSkillType.Entity = value;
					if ((value != null))
					{
						value.LOT_Questions.Add(this);
						this._ProgrammingTypeID = value.ID;
					}
					else
					{
						this._ProgrammingTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOT_ProgrammingSkillType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Section_LOT_Question", Storage="_LOT_Section", ThisKey="SectionID", OtherKey="ID", IsForeignKey=true)]
		public LOT_Section LOT_Section
		{
			get
			{
				return this._LOT_Section.Entity;
			}
			set
			{
				LOT_Section previousValue = this._LOT_Section.Entity;
				if (((previousValue != value) 
							|| (this._LOT_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOT_Section.Entity = null;
						previousValue.LOT_Questions.Remove(this);
					}
					this._LOT_Section.Entity = value;
					if ((value != null))
					{
						value.LOT_Questions.Add(this);
						this._SectionID = value.ID;
					}
					else
					{
						this._SectionID = default(int);
					}
					this.SendPropertyChanged("LOT_Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Question = this;
		}
		
		private void detach_LOT_CandidateAnswers(LOT_CandidateAnswer entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Question = null;
		}
		
		private void attach_LOT_ExamQuestion_Section_Questions(LOT_ExamQuestion_Section_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Question = this;
		}
		
		private void detach_LOT_ExamQuestion_Section_Questions(LOT_ExamQuestion_Section_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOT_Section")]
	public partial class LOT_Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SectionName;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LOT_ExamQuestion_Section> _LOT_ExamQuestion_Sections;
		
		private EntitySet<LOT_Question> _LOT_Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public LOT_Section()
		{
			this._LOT_ExamQuestion_Sections = new EntitySet<LOT_ExamQuestion_Section>(new Action<LOT_ExamQuestion_Section>(this.attach_LOT_ExamQuestion_Sections), new Action<LOT_ExamQuestion_Section>(this.detach_LOT_ExamQuestion_Sections));
			this._LOT_Questions = new EntitySet<LOT_Question>(new Action<LOT_Question>(this.attach_LOT_Questions), new Action<LOT_Question>(this.detach_LOT_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Section_LOT_ExamQuestion_Section", Storage="_LOT_ExamQuestion_Sections", ThisKey="ID", OtherKey="SectionID")]
		public EntitySet<LOT_ExamQuestion_Section> LOT_ExamQuestion_Sections
		{
			get
			{
				return this._LOT_ExamQuestion_Sections;
			}
			set
			{
				this._LOT_ExamQuestion_Sections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOT_Section_LOT_Question", Storage="_LOT_Questions", ThisKey="ID", OtherKey="SectionID")]
		public EntitySet<LOT_Question> LOT_Questions
		{
			get
			{
				return this._LOT_Questions;
			}
			set
			{
				this._LOT_Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOT_ExamQuestion_Sections(LOT_ExamQuestion_Section entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Section = this;
		}
		
		private void detach_LOT_ExamQuestion_Sections(LOT_ExamQuestion_Section entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Section = null;
		}
		
		private void attach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Section = this;
		}
		
		private void detach_LOT_Questions(LOT_Question entity)
		{
			this.SendPropertyChanging();
			entity.LOT_Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterLog")]
	public partial class MasterLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogId;
		
		private string _Username;
		
		private System.DateTime _LogDate;
		
		private string _TableName;
		
		private string _ActionName;
		
		private System.Nullable<int> _LogType;
		
		private EntitySet<LogDetail> _LogDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnLogTypeChanging(System.Nullable<int> value);
    partial void OnLogTypeChanged();
    #endregion
		
		public MasterLog()
		{
			this._LogDetails = new EntitySet<LogDetail>(new Action<LogDetail>(this.attach_LogDetails), new Action<LogDetail>(this.detach_LogDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int")]
		public System.Nullable<int> LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterLog_LogDetail", Storage="_LogDetails", ThisKey="LogId", OtherKey="LogId")]
		public EntitySet<LogDetail> LogDetails
		{
			get
			{
				return this._LogDetails;
			}
			set
			{
				this._LogDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LogDetails(LogDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterLog = this;
		}
		
		private void detach_LogDetails(LogDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterLog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Link;
		
		private string _ImageUrl;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<MenuPermission> _MenuPermissions;
		
		private EntityRef<Menu> _Menu1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Menu()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._MenuPermissions = new EntitySet<MenuPermission>(new Action<MenuPermission>(this.attach_MenuPermissions), new Action<MenuPermission>(this.detach_MenuPermissions));
			this._Menu1 = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(200)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(200)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Menu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="ID", OtherKey="ParentId")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuPermission", Storage="_MenuPermissions", ThisKey="ID", OtherKey="MenuId")]
		public EntitySet<MenuPermission> MenuPermissions
		{
			get
			{
				return this._MenuPermissions;
			}
			set
			{
				this._MenuPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="ParentId", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu1
		{
			get
			{
				return this._Menu1.Entity;
			}
			set
			{
				Menu previousValue = this._Menu1.Entity;
				if (((previousValue != value) 
							|| (this._Menu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu1.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Menu1.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._ParentId = value.ID;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = null;
		}
		
		private void attach_MenuPermissions(MenuPermission entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenuPermissions(MenuPermission entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuPermission")]
	public partial class MenuPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private int _ModuleId;
		
		private int _PermissionId;
		
		private EntityRef<Menu> _Menu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public MenuPermission()
		{
			this._Menu = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuPermission", Storage="_Menu", ThisKey="MenuId", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.MenuPermissions.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.MenuPermissions.Add(this);
						this._MenuId = value.ID;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModulePermission")]
	public partial class ModulePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleId;
		
		private int _PermissionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public ModulePermission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Office")]
	public partial class Office : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _BranchID;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Candidate> _Candidates;
		
		private EntitySet<Floor> _Floors;
		
		private EntitySet<SR_Setting> _SR_Settings;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Office()
		{
			this._Candidates = new EntitySet<Candidate>(new Action<Candidate>(this.attach_Candidates), new Action<Candidate>(this.detach_Candidates));
			this._Floors = new EntitySet<Floor>(new Action<Floor>(this.attach_Floors), new Action<Floor>(this.detach_Floors));
			this._SR_Settings = new EntitySet<SR_Setting>(new Action<SR_Setting>(this.attach_SR_Settings), new Action<SR_Setting>(this.detach_SR_Settings));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Candidate", Storage="_Candidates", ThisKey="ID", OtherKey="OfficeID")]
		public EntitySet<Candidate> Candidates
		{
			get
			{
				return this._Candidates;
			}
			set
			{
				this._Candidates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Floor", Storage="_Floors", ThisKey="ID", OtherKey="OfficeID")]
		public EntitySet<Floor> Floors
		{
			get
			{
				return this._Floors;
			}
			set
			{
				this._Floors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_SR_Setting", Storage="_SR_Settings", ThisKey="ID", OtherKey="OfficeID")]
		public EntitySet<SR_Setting> SR_Settings
		{
			get
			{
				return this._SR_Settings;
			}
			set
			{
				this._SR_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Office", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Offices.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Offices.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
		
		private void attach_Floors(Floor entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_Floors(Floor entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
		
		private void attach_SR_Settings(SR_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_SR_Settings(SR_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PerformanceReview")]
	public partial class PerformanceReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EmployeeID;
		
		private string _ManagerID;
		
		private string _AssignID;
		
		private int _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _CCEmail;
		
		private System.Nullable<System.DateTime> _NextReviewDate;
		
		private int _EFormID;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private bool _DeleteFlag;
		
		private System.DateTime _PRDate;
		
		private EntitySet<PRComment> _PRComments;
		
		private EntityRef<EForm> _EForm;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<WFResolution> _WFResolution;
		
		private EntityRef<WFRole> _WFRole;
		
		private EntityRef<WFStatus> _WFStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnManagerIDChanging(string value);
    partial void OnManagerIDChanged();
    partial void OnAssignIDChanging(string value);
    partial void OnAssignIDChanged();
    partial void OnAssignRoleChanging(int value);
    partial void OnAssignRoleChanged();
    partial void OnInvolveIDChanging(string value);
    partial void OnInvolveIDChanged();
    partial void OnInvolveResolutionChanging(string value);
    partial void OnInvolveResolutionChanged();
    partial void OnCCEmailChanging(string value);
    partial void OnCCEmailChanged();
    partial void OnNextReviewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextReviewDateChanged();
    partial void OnEFormIDChanging(int value);
    partial void OnEFormIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnWFStatusIDChanging(int value);
    partial void OnWFStatusIDChanged();
    partial void OnWFResolutionIDChanging(int value);
    partial void OnWFResolutionIDChanged();
    partial void OnInvolveDateChanging(string value);
    partial void OnInvolveDateChanged();
    partial void OnInvolveRoleChanging(string value);
    partial void OnInvolveRoleChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnPRDateChanging(System.DateTime value);
    partial void OnPRDateChanged();
    #endregion
		
		public PerformanceReview()
		{
			this._PRComments = new EntitySet<PRComment>(new Action<PRComment>(this.attach_PRComments), new Action<PRComment>(this.detach_PRComments));
			this._EForm = default(EntityRef<EForm>);
			this._Employee = default(EntityRef<Employee>);
			this._WFResolution = default(EntityRef<WFResolution>);
			this._WFRole = default(EntityRef<WFRole>);
			this._WFStatus = default(EntityRef<WFStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ManagerID
		{
			get
			{
				return this._ManagerID;
			}
			set
			{
				if ((this._ManagerID != value))
				{
					this.OnManagerIDChanging(value);
					this.SendPropertyChanging();
					this._ManagerID = value;
					this.SendPropertyChanged("ManagerID");
					this.OnManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this.OnAssignIDChanging(value);
					this.SendPropertyChanging();
					this._AssignID = value;
					this.SendPropertyChanged("AssignID");
					this.OnAssignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int NOT NULL")]
		public int AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					if (this._WFRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignRoleChanging(value);
					this.SendPropertyChanging();
					this._AssignRole = value;
					this.SendPropertyChanged("AssignRole");
					this.OnAssignRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(100)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this.OnInvolveIDChanging(value);
					this.SendPropertyChanging();
					this._InvolveID = value;
					this.SendPropertyChanged("InvolveID");
					this.OnInvolveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this.OnInvolveResolutionChanging(value);
					this.SendPropertyChanging();
					this._InvolveResolution = value;
					this.SendPropertyChanged("InvolveResolution");
					this.OnInvolveResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCEmail", DbType="NVarChar(500)")]
		public string CCEmail
		{
			get
			{
				return this._CCEmail;
			}
			set
			{
				if ((this._CCEmail != value))
				{
					this.OnCCEmailChanging(value);
					this.SendPropertyChanging();
					this._CCEmail = value;
					this.SendPropertyChanged("CCEmail");
					this.OnCCEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextReviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextReviewDate
		{
			get
			{
				return this._NextReviewDate;
			}
			set
			{
				if ((this._NextReviewDate != value))
				{
					this.OnNextReviewDateChanging(value);
					this.SendPropertyChanging();
					this._NextReviewDate = value;
					this.SendPropertyChanged("NextReviewDate");
					this.OnNextReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFormID", DbType="Int NOT NULL")]
		public int EFormID
		{
			get
			{
				return this._EFormID;
			}
			set
			{
				if ((this._EFormID != value))
				{
					if (this._EForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEFormIDChanging(value);
					this.SendPropertyChanging();
					this._EFormID = value;
					this.SendPropertyChanged("EFormID");
					this.OnEFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					if (this._WFStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WFStatusID = value;
					this.SendPropertyChanged("WFStatusID");
					this.OnWFStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					if (this._WFResolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._WFResolutionID = value;
					this.SendPropertyChanged("WFResolutionID");
					this.OnWFResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this.OnInvolveDateChanging(value);
					this.SendPropertyChanging();
					this._InvolveDate = value;
					this.SendPropertyChanged("InvolveDate");
					this.OnInvolveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="NVarChar(100)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this.OnInvolveRoleChanging(value);
					this.SendPropertyChanging();
					this._InvolveRole = value;
					this.SendPropertyChanged("InvolveRole");
					this.OnInvolveRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRDate", DbType="DateTime NOT NULL")]
		public System.DateTime PRDate
		{
			get
			{
				return this._PRDate;
			}
			set
			{
				if ((this._PRDate != value))
				{
					this.OnPRDateChanging(value);
					this.SendPropertyChanging();
					this._PRDate = value;
					this.SendPropertyChanged("PRDate");
					this.OnPRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PerformanceReview_PRComment", Storage="_PRComments", ThisKey="ID", OtherKey="PRID")]
		public EntitySet<PRComment> PRComments
		{
			get
			{
				return this._PRComments;
			}
			set
			{
				this._PRComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EForm_PerformanceReview", Storage="_EForm", ThisKey="EFormID", OtherKey="ID", IsForeignKey=true)]
		public EForm EForm
		{
			get
			{
				return this._EForm.Entity;
			}
			set
			{
				EForm previousValue = this._EForm.Entity;
				if (((previousValue != value) 
							|| (this._EForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EForm.Entity = null;
						previousValue.PerformanceReviews.Remove(this);
					}
					this._EForm.Entity = value;
					if ((value != null))
					{
						value.PerformanceReviews.Add(this);
						this._EFormID = value.ID;
					}
					else
					{
						this._EFormID = default(int);
					}
					this.SendPropertyChanged("EForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PerformanceReview", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PerformanceReviews.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PerformanceReviews.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_PerformanceReview", Storage="_WFResolution", ThisKey="WFResolutionID", OtherKey="ID", IsForeignKey=true)]
		public WFResolution WFResolution
		{
			get
			{
				return this._WFResolution.Entity;
			}
			set
			{
				WFResolution previousValue = this._WFResolution.Entity;
				if (((previousValue != value) 
							|| (this._WFResolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFResolution.Entity = null;
						previousValue.PerformanceReviews.Remove(this);
					}
					this._WFResolution.Entity = value;
					if ((value != null))
					{
						value.PerformanceReviews.Add(this);
						this._WFResolutionID = value.ID;
					}
					else
					{
						this._WFResolutionID = default(int);
					}
					this.SendPropertyChanged("WFResolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_PerformanceReview", Storage="_WFRole", ThisKey="AssignRole", OtherKey="ID", IsForeignKey=true)]
		public WFRole WFRole
		{
			get
			{
				return this._WFRole.Entity;
			}
			set
			{
				WFRole previousValue = this._WFRole.Entity;
				if (((previousValue != value) 
							|| (this._WFRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFRole.Entity = null;
						previousValue.PerformanceReviews.Remove(this);
					}
					this._WFRole.Entity = value;
					if ((value != null))
					{
						value.PerformanceReviews.Add(this);
						this._AssignRole = value.ID;
					}
					else
					{
						this._AssignRole = default(int);
					}
					this.SendPropertyChanged("WFRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_PerformanceReview", Storage="_WFStatus", ThisKey="WFStatusID", OtherKey="ID", IsForeignKey=true)]
		public WFStatus WFStatus
		{
			get
			{
				return this._WFStatus.Entity;
			}
			set
			{
				WFStatus previousValue = this._WFStatus.Entity;
				if (((previousValue != value) 
							|| (this._WFStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFStatus.Entity = null;
						previousValue.PerformanceReviews.Remove(this);
					}
					this._WFStatus.Entity = value;
					if ((value != null))
					{
						value.PerformanceReviews.Add(this);
						this._WFStatusID = value.ID;
					}
					else
					{
						this._WFStatusID = default(int);
					}
					this.SendPropertyChanged("WFStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRComments(PRComment entity)
		{
			this.SendPropertyChanging();
			entity.PerformanceReview = this;
		}
		
		private void detach_PRComments(PRComment entity)
		{
			this.SendPropertyChanging();
			entity.PerformanceReview = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portal_LogAccess")]
	public partial class Portal_LogAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _SessionId;
		
		private string _UserAdmin;
		
		private string _UserIp;
		
		private System.DateTime _DatetimeAccess;
		
		private System.Nullable<System.DateTime> _DatetimeOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnUserIpChanging(string value);
    partial void OnUserIpChanged();
    partial void OnDatetimeAccessChanging(System.DateTime value);
    partial void OnDatetimeAccessChanged();
    partial void OnDatetimeOutChanging(System.Nullable<System.DateTime> value);
    partial void OnDatetimeOutChanged();
    #endregion
		
		public Portal_LogAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserIp
		{
			get
			{
				return this._UserIp;
			}
			set
			{
				if ((this._UserIp != value))
				{
					this.OnUserIpChanging(value);
					this.SendPropertyChanging();
					this._UserIp = value;
					this.SendPropertyChanged("UserIp");
					this.OnUserIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatetimeAccess", DbType="DateTime NOT NULL")]
		public System.DateTime DatetimeAccess
		{
			get
			{
				return this._DatetimeAccess;
			}
			set
			{
				if ((this._DatetimeAccess != value))
				{
					this.OnDatetimeAccessChanging(value);
					this.SendPropertyChanging();
					this._DatetimeAccess = value;
					this.SendPropertyChanged("DatetimeAccess");
					this.OnDatetimeAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatetimeOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatetimeOut
		{
			get
			{
				return this._DatetimeOut;
			}
			set
			{
				if ((this._DatetimeOut != value))
				{
					this.OnDatetimeOutChanging(value);
					this.SendPropertyChanging();
					this._DatetimeOut = value;
					this.SendPropertyChanged("DatetimeOut");
					this.OnDatetimeOutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portal_LogDetail")]
	public partial class Portal_LogDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetailId;
		
		private string _LogId;
		
		private string _ColumnName;
		
		private string _DisplayColumnName;
		
		private string _OldValue;
		
		private string _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIdChanging(string value);
    partial void OnDetailIdChanged();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnDisplayColumnNameChanging(string value);
    partial void OnDisplayColumnNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    #endregion
		
		public Portal_LogDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this.OnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DetailId = value;
					this.SendPropertyChanged("DetailId");
					this.OnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(30)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayColumnName", DbType="NVarChar(50)")]
		public string DisplayColumnName
		{
			get
			{
				return this._DisplayColumnName;
			}
			set
			{
				if ((this._DisplayColumnName != value))
				{
					this.OnDisplayColumnNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayColumnName = value;
					this.SendPropertyChanged("DisplayColumnName");
					this.OnDisplayColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(1000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(1000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PR_PaymentMethod")]
	public partial class PR_PaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Method;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    #endregion
		
		public PR_PaymentMethod()
		{
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PR_PaymentMethod_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="ID", OtherKey="US_PaymentMethod")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.PR_PaymentMethod = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.PR_PaymentMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRComment")]
	public partial class PRComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PRID;
		
		private string _Poster;
		
		private System.DateTime _PostTime;
		
		private string _Contents;
		
		private EntityRef<PerformanceReview> _PerformanceReview;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPRIDChanging(string value);
    partial void OnPRIDChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    #endregion
		
		public PRComment()
		{
			this._PerformanceReview = default(EntityRef<PerformanceReview>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PRID
		{
			get
			{
				return this._PRID;
			}
			set
			{
				if ((this._PRID != value))
				{
					if (this._PerformanceReview.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRIDChanging(value);
					this.SendPropertyChanging();
					this._PRID = value;
					this.SendPropertyChanged("PRID");
					this.OnPRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="DateTime NOT NULL")]
		public System.DateTime PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PerformanceReview_PRComment", Storage="_PerformanceReview", ThisKey="PRID", OtherKey="ID", IsForeignKey=true)]
		public PerformanceReview PerformanceReview
		{
			get
			{
				return this._PerformanceReview.Entity;
			}
			set
			{
				PerformanceReview previousValue = this._PerformanceReview.Entity;
				if (((previousValue != value) 
							|| (this._PerformanceReview.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PerformanceReview.Entity = null;
						previousValue.PRComments.Remove(this);
					}
					this._PerformanceReview.Entity = value;
					if ((value != null))
					{
						value.PRComments.Add(this);
						this._PRID = value.ID;
					}
					else
					{
						this._PRID = default(string);
					}
					this.SendPropertyChanged("PerformanceReview");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTO")]
	public partial class PTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Submitter;
		
		private string _SubmitTo;
		
		private int _PTOType_ID;
		
		private int _Status_ID;
		
		private bool _IsChanged;
		
		private string _Reason;
		
		private string _ManagerComment;
		
		private string _HRComment;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private int _Key_ID;
		
		private bool _DeleteFlag;
		
		private EntitySet<PTO_Detail> _PTO_Details;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<PTO_Status> _PTO_Status;
		
		private EntityRef<PTO_Type> _PTO_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSubmitterChanging(string value);
    partial void OnSubmitterChanged();
    partial void OnSubmitToChanging(string value);
    partial void OnSubmitToChanged();
    partial void OnPTOType_IDChanging(int value);
    partial void OnPTOType_IDChanged();
    partial void OnStatus_IDChanging(int value);
    partial void OnStatus_IDChanged();
    partial void OnIsChangedChanging(bool value);
    partial void OnIsChangedChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnManagerCommentChanging(string value);
    partial void OnManagerCommentChanged();
    partial void OnHRCommentChanging(string value);
    partial void OnHRCommentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnKey_IDChanging(int value);
    partial void OnKey_IDChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public PTO()
		{
			this._PTO_Details = new EntitySet<PTO_Detail>(new Action<PTO_Detail>(this.attach_PTO_Details), new Action<PTO_Detail>(this.detach_PTO_Details));
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._PTO_Status = default(EntityRef<PTO_Status>);
			this._PTO_Type = default(EntityRef<PTO_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submitter", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Submitter
		{
			get
			{
				return this._Submitter;
			}
			set
			{
				if ((this._Submitter != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmitterChanging(value);
					this.SendPropertyChanging();
					this._Submitter = value;
					this.SendPropertyChanged("Submitter");
					this.OnSubmitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitTo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string SubmitTo
		{
			get
			{
				return this._SubmitTo;
			}
			set
			{
				if ((this._SubmitTo != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmitToChanging(value);
					this.SendPropertyChanging();
					this._SubmitTo = value;
					this.SendPropertyChanged("SubmitTo");
					this.OnSubmitToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTOType_ID", DbType="Int NOT NULL")]
		public int PTOType_ID
		{
			get
			{
				return this._PTOType_ID;
			}
			set
			{
				if ((this._PTOType_ID != value))
				{
					if (this._PTO_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTOType_IDChanging(value);
					this.SendPropertyChanging();
					this._PTOType_ID = value;
					this.SendPropertyChanged("PTOType_ID");
					this.OnPTOType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_ID", DbType="Int NOT NULL")]
		public int Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					if (this._PTO_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChanged", DbType="Bit NOT NULL")]
		public bool IsChanged
		{
			get
			{
				return this._IsChanged;
			}
			set
			{
				if ((this._IsChanged != value))
				{
					this.OnIsChangedChanging(value);
					this.SendPropertyChanging();
					this._IsChanged = value;
					this.SendPropertyChanged("IsChanged");
					this.OnIsChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerComment", DbType="NVarChar(500)")]
		public string ManagerComment
		{
			get
			{
				return this._ManagerComment;
			}
			set
			{
				if ((this._ManagerComment != value))
				{
					this.OnManagerCommentChanging(value);
					this.SendPropertyChanging();
					this._ManagerComment = value;
					this.SendPropertyChanged("ManagerComment");
					this.OnManagerCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HRComment", DbType="NVarChar(500)")]
		public string HRComment
		{
			get
			{
				return this._HRComment;
			}
			set
			{
				if ((this._HRComment != value))
				{
					this.OnHRCommentChanging(value);
					this.SendPropertyChanging();
					this._HRComment = value;
					this.SendPropertyChanged("HRComment");
					this.OnHRCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Key_ID
		{
			get
			{
				return this._Key_ID;
			}
			set
			{
				if ((this._Key_ID != value))
				{
					this.OnKey_IDChanging(value);
					this.SendPropertyChanging();
					this._Key_ID = value;
					this.SendPropertyChanged("Key_ID");
					this.OnKey_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_PTO_Detail", Storage="_PTO_Details", ThisKey="ID", OtherKey="PTO_ID")]
		public EntitySet<PTO_Detail> PTO_Details
		{
			get
			{
				return this._PTO_Details;
			}
			set
			{
				this._PTO_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO", Storage="_Employee", ThisKey="Submitter", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PTOs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PTOs.Add(this);
						this._Submitter = value.ID;
					}
					else
					{
						this._Submitter = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO1", Storage="_Employee1", ThisKey="SubmitTo", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.PTOs1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.PTOs1.Add(this);
						this._SubmitTo = value.ID;
					}
					else
					{
						this._SubmitTo = default(string);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_Status_PTO", Storage="_PTO_Status", ThisKey="Status_ID", OtherKey="ID", IsForeignKey=true)]
		public PTO_Status PTO_Status
		{
			get
			{
				return this._PTO_Status.Entity;
			}
			set
			{
				PTO_Status previousValue = this._PTO_Status.Entity;
				if (((previousValue != value) 
							|| (this._PTO_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTO_Status.Entity = null;
						previousValue.PTOs.Remove(this);
					}
					this._PTO_Status.Entity = value;
					if ((value != null))
					{
						value.PTOs.Add(this);
						this._Status_ID = value.ID;
					}
					else
					{
						this._Status_ID = default(int);
					}
					this.SendPropertyChanged("PTO_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_Type_PTO", Storage="_PTO_Type", ThisKey="PTOType_ID", OtherKey="ID", IsForeignKey=true)]
		public PTO_Type PTO_Type
		{
			get
			{
				return this._PTO_Type.Entity;
			}
			set
			{
				PTO_Type previousValue = this._PTO_Type.Entity;
				if (((previousValue != value) 
							|| (this._PTO_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTO_Type.Entity = null;
						previousValue.PTOs.Remove(this);
					}
					this._PTO_Type.Entity = value;
					if ((value != null))
					{
						value.PTOs.Add(this);
						this._PTOType_ID = value.ID;
					}
					else
					{
						this._PTOType_ID = default(int);
					}
					this.SendPropertyChanged("PTO_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PTO_Details(PTO_Detail entity)
		{
			this.SendPropertyChanging();
			entity.PTO = this;
		}
		
		private void detach_PTO_Details(PTO_Detail entity)
		{
			this.SendPropertyChanging();
			entity.PTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTO_Detail")]
	public partial class PTO_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _DateOff;
		
		private System.Nullable<int> _TimeOff;
		
		private int _HourFrom;
		
		private int _HourTo;
		
		private bool _IsCompanyPay;
		
		private string _PTO_ID;
		
		private System.Nullable<System.DateTime> _DateOffFrom;
		
		private System.Nullable<System.DateTime> _DateOffTo;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<PTO> _PTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateOffChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOffChanged();
    partial void OnTimeOffChanging(System.Nullable<int> value);
    partial void OnTimeOffChanged();
    partial void OnHourFromChanging(int value);
    partial void OnHourFromChanged();
    partial void OnHourToChanging(int value);
    partial void OnHourToChanged();
    partial void OnIsCompanyPayChanging(bool value);
    partial void OnIsCompanyPayChanged();
    partial void OnPTO_IDChanging(string value);
    partial void OnPTO_IDChanged();
    partial void OnDateOffFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOffFromChanged();
    partial void OnDateOffToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOffToChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PTO_Detail()
		{
			this._PTO = default(EntityRef<PTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOff", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOff
		{
			get
			{
				return this._DateOff;
			}
			set
			{
				if ((this._DateOff != value))
				{
					this.OnDateOffChanging(value);
					this.SendPropertyChanging();
					this._DateOff = value;
					this.SendPropertyChanged("DateOff");
					this.OnDateOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOff", DbType="Int")]
		public System.Nullable<int> TimeOff
		{
			get
			{
				return this._TimeOff;
			}
			set
			{
				if ((this._TimeOff != value))
				{
					this.OnTimeOffChanging(value);
					this.SendPropertyChanging();
					this._TimeOff = value;
					this.SendPropertyChanged("TimeOff");
					this.OnTimeOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourFrom", DbType="Int NOT NULL")]
		public int HourFrom
		{
			get
			{
				return this._HourFrom;
			}
			set
			{
				if ((this._HourFrom != value))
				{
					this.OnHourFromChanging(value);
					this.SendPropertyChanging();
					this._HourFrom = value;
					this.SendPropertyChanged("HourFrom");
					this.OnHourFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourTo", DbType="Int NOT NULL")]
		public int HourTo
		{
			get
			{
				return this._HourTo;
			}
			set
			{
				if ((this._HourTo != value))
				{
					this.OnHourToChanging(value);
					this.SendPropertyChanging();
					this._HourTo = value;
					this.SendPropertyChanged("HourTo");
					this.OnHourToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompanyPay", DbType="Bit NOT NULL")]
		public bool IsCompanyPay
		{
			get
			{
				return this._IsCompanyPay;
			}
			set
			{
				if ((this._IsCompanyPay != value))
				{
					this.OnIsCompanyPayChanging(value);
					this.SendPropertyChanging();
					this._IsCompanyPay = value;
					this.SendPropertyChanged("IsCompanyPay");
					this.OnIsCompanyPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTO_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string PTO_ID
		{
			get
			{
				return this._PTO_ID;
			}
			set
			{
				if ((this._PTO_ID != value))
				{
					if (this._PTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTO_IDChanging(value);
					this.SendPropertyChanging();
					this._PTO_ID = value;
					this.SendPropertyChanged("PTO_ID");
					this.OnPTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOffFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOffFrom
		{
			get
			{
				return this._DateOffFrom;
			}
			set
			{
				if ((this._DateOffFrom != value))
				{
					this.OnDateOffFromChanging(value);
					this.SendPropertyChanging();
					this._DateOffFrom = value;
					this.SendPropertyChanged("DateOffFrom");
					this.OnDateOffFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOffTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOffTo
		{
			get
			{
				return this._DateOffTo;
			}
			set
			{
				if ((this._DateOffTo != value))
				{
					this.OnDateOffToChanging(value);
					this.SendPropertyChanging();
					this._DateOffTo = value;
					this.SendPropertyChanged("DateOffTo");
					this.OnDateOffToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_PTO_Detail", Storage="_PTO", ThisKey="PTO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PTO PTO
		{
			get
			{
				return this._PTO.Entity;
			}
			set
			{
				PTO previousValue = this._PTO.Entity;
				if (((previousValue != value) 
							|| (this._PTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTO.Entity = null;
						previousValue.PTO_Details.Remove(this);
					}
					this._PTO.Entity = value;
					if ((value != null))
					{
						value.PTO_Details.Add(this);
						this._PTO_ID = value.ID;
					}
					else
					{
						this._PTO_ID = default(string);
					}
					this.SendPropertyChanged("PTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTO_Report")]
	public partial class PTO_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _MonthYearReport;
		
		private string _EmployeeId;
		
		private int _CarriedForward;
		
		private int _MonthlyVacation;
		
		private string _Comment;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMonthYearReportChanging(System.DateTime value);
    partial void OnMonthYearReportChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnCarriedForwardChanging(int value);
    partial void OnCarriedForwardChanged();
    partial void OnMonthlyVacationChanging(int value);
    partial void OnMonthlyVacationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PTO_Report()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYearReport", DbType="DateTime NOT NULL")]
		public System.DateTime MonthYearReport
		{
			get
			{
				return this._MonthYearReport;
			}
			set
			{
				if ((this._MonthYearReport != value))
				{
					this.OnMonthYearReportChanging(value);
					this.SendPropertyChanging();
					this._MonthYearReport = value;
					this.SendPropertyChanged("MonthYearReport");
					this.OnMonthYearReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarriedForward", DbType="Int NOT NULL")]
		public int CarriedForward
		{
			get
			{
				return this._CarriedForward;
			}
			set
			{
				if ((this._CarriedForward != value))
				{
					this.OnCarriedForwardChanging(value);
					this.SendPropertyChanging();
					this._CarriedForward = value;
					this.SendPropertyChanged("CarriedForward");
					this.OnCarriedForwardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyVacation", DbType="Int NOT NULL")]
		public int MonthlyVacation
		{
			get
			{
				return this._MonthlyVacation;
			}
			set
			{
				if ((this._MonthlyVacation != value))
				{
					this.OnMonthlyVacationChanging(value);
					this.SendPropertyChanging();
					this._MonthlyVacation = value;
					this.SendPropertyChanged("MonthlyVacation");
					this.OnMonthlyVacationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(4000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PTO_Report", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PTO_Reports.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PTO_Reports.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTO_Status")]
	public partial class PTO_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<PTO> _PTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PTO_Status()
		{
			this._PTOs = new EntitySet<PTO>(new Action<PTO>(this.attach_PTOs), new Action<PTO>(this.detach_PTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_Status_PTO", Storage="_PTOs", ThisKey="ID", OtherKey="Status_ID")]
		public EntitySet<PTO> PTOs
		{
			get
			{
				return this._PTOs;
			}
			set
			{
				this._PTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.PTO_Status = this;
		}
		
		private void detach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.PTO_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTO_Type")]
	public partial class PTO_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsCompanyPay;
		
		private int _PayHour;
		
		private bool _IsHourType;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<PTO> _PTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsCompanyPayChanging(bool value);
    partial void OnIsCompanyPayChanged();
    partial void OnPayHourChanging(int value);
    partial void OnPayHourChanged();
    partial void OnIsHourTypeChanging(bool value);
    partial void OnIsHourTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public PTO_Type()
		{
			this._PTOs = new EntitySet<PTO>(new Action<PTO>(this.attach_PTOs), new Action<PTO>(this.detach_PTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompanyPay", DbType="Bit NOT NULL")]
		public bool IsCompanyPay
		{
			get
			{
				return this._IsCompanyPay;
			}
			set
			{
				if ((this._IsCompanyPay != value))
				{
					this.OnIsCompanyPayChanging(value);
					this.SendPropertyChanging();
					this._IsCompanyPay = value;
					this.SendPropertyChanged("IsCompanyPay");
					this.OnIsCompanyPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayHour", DbType="Int NOT NULL")]
		public int PayHour
		{
			get
			{
				return this._PayHour;
			}
			set
			{
				if ((this._PayHour != value))
				{
					this.OnPayHourChanging(value);
					this.SendPropertyChanging();
					this._PayHour = value;
					this.SendPropertyChanged("PayHour");
					this.OnPayHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHourType", DbType="Bit NOT NULL")]
		public bool IsHourType
		{
			get
			{
				return this._IsHourType;
			}
			set
			{
				if ((this._IsHourType != value))
				{
					this.OnIsHourTypeChanging(value);
					this.SendPropertyChanging();
					this._IsHourType = value;
					this.SendPropertyChanged("IsHourType");
					this.OnIsHourTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PTO_Type_PTO", Storage="_PTOs", ThisKey="ID", OtherKey="PTOType_ID")]
		public EntitySet<PTO> PTOs
		{
			get
			{
				return this._PTOs;
			}
			set
			{
				this._PTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.PTO_Type = this;
		}
		
		private void detach_PTOs(PTO entity)
		{
			this.SendPropertyChanging();
			entity.PTO_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseComment")]
	public partial class PurchaseComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestID;
		
		private string _Poster;
		
		private System.DateTime _PostTime;
		
		private string _Contents;
		
		private string _Files;
		
		private EntityRef<PurchaseRequest> _PurchaseRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnFilesChanging(string value);
    partial void OnFilesChanged();
    #endregion
		
		public PurchaseComment()
		{
			this._PurchaseRequest = default(EntityRef<PurchaseRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._PurchaseRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="DateTime NOT NULL")]
		public System.DateTime PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files", DbType="NVarChar(4000)")]
		public string Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				if ((this._Files != value))
				{
					this.OnFilesChanging(value);
					this.SendPropertyChanging();
					this._Files = value;
					this.SendPropertyChanged("Files");
					this.OnFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseComment", Storage="_PurchaseRequest", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseRequest PurchaseRequest
		{
			get
			{
				return this._PurchaseRequest.Entity;
			}
			set
			{
				PurchaseRequest previousValue = this._PurchaseRequest.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseRequest.Entity = null;
						previousValue.PurchaseComments.Remove(this);
					}
					this._PurchaseRequest.Entity = value;
					if ((value != null))
					{
						value.PurchaseComments.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("PurchaseRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseInvoice")]
	public partial class PurchaseInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestID;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _InvoiceNumber;
		
		private string _InvoiceValue;
		
		private EntityRef<PurchaseRequest> _PurchaseRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceValueChanging(string value);
    partial void OnInvoiceValueChanged();
    #endregion
		
		public PurchaseInvoice()
		{
			this._PurchaseRequest = default(EntityRef<PurchaseRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._PurchaseRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceValue", DbType="NVarChar(50)")]
		public string InvoiceValue
		{
			get
			{
				return this._InvoiceValue;
			}
			set
			{
				if ((this._InvoiceValue != value))
				{
					this.OnInvoiceValueChanging(value);
					this.SendPropertyChanging();
					this._InvoiceValue = value;
					this.SendPropertyChanged("InvoiceValue");
					this.OnInvoiceValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseInvoice", Storage="_PurchaseRequest", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseRequest PurchaseRequest
		{
			get
			{
				return this._PurchaseRequest.Entity;
			}
			set
			{
				PurchaseRequest previousValue = this._PurchaseRequest.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseRequest.Entity = null;
						previousValue.PurchaseInvoices.Remove(this);
					}
					this._PurchaseRequest.Entity = value;
					if ((value != null))
					{
						value.PurchaseInvoices.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("PurchaseRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseItem")]
	public partial class PurchaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestID;
		
		private string _ItemName;
		
		private double _Quantity;
		
		private double _Price;
		
		private double _TotalPrice;
		
		private EntityRef<PurchaseRequest> _PurchaseRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    #endregion
		
		public PurchaseItem()
		{
			this._PurchaseRequest = default(EntityRef<PurchaseRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._PurchaseRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
		public double Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseItem", Storage="_PurchaseRequest", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseRequest PurchaseRequest
		{
			get
			{
				return this._PurchaseRequest.Entity;
			}
			set
			{
				PurchaseRequest previousValue = this._PurchaseRequest.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseRequest.Entity = null;
						previousValue.PurchaseItems.Remove(this);
					}
					this._PurchaseRequest.Entity = value;
					if ((value != null))
					{
						value.PurchaseItems.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("PurchaseRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseRequest")]
	public partial class PurchaseRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private int _Requestor;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<System.DateTime> _ExpectedDate;
		
		private int _SubDepartment;
		
		private string _Justification;
		
		private bool _BillableToClient;
		
		private System.Nullable<int> _Priority;
		
		private string _VendorName;
		
		private string _VendorPhone;
		
		private string _VendorEmail;
		
		private string _VendorAddress;
		
		private int _MoneyType;
		
		private System.Nullable<double> _OtherCost;
		
		private string _SaleTaxName;
		
		private System.Nullable<double> _SaleTaxValue;
		
		private System.Nullable<double> _Shipping;
		
		private System.Nullable<double> _ServiceCharge;
		
		private System.Nullable<double> _Discount;
		
		private string _CCList;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private string _PurchaseAppoval;
		
		private string _PaymentAppoval;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _PaymentID;
		
		private System.Nullable<int> _USAccounting;
		
		private bool _IsUSPurchasing;
		
		private System.Nullable<int> _US_PaymentMethod;
		
		private EntitySet<PurchaseComment> _PurchaseComments;
		
		private EntitySet<PurchaseInvoice> _PurchaseInvoices;
		
		private EntitySet<PurchaseItem> _PurchaseItems;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<PR_PaymentMethod> _PR_PaymentMethod;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
		private EntityRef<UserAdmin> _UserAdmin1;
		
		private EntityRef<WFResolution> _WFResolution;
		
		private EntityRef<WFRole> _WFRole;
		
		private EntityRef<WFStatus> _WFStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWFStatusIDChanging(int value);
    partial void OnWFStatusIDChanged();
    partial void OnWFResolutionIDChanging(int value);
    partial void OnWFResolutionIDChanged();
    partial void OnRequestorChanging(int value);
    partial void OnRequestorChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnExpectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedDateChanged();
    partial void OnSubDepartmentChanging(int value);
    partial void OnSubDepartmentChanged();
    partial void OnJustificationChanging(string value);
    partial void OnJustificationChanged();
    partial void OnBillableToClientChanging(bool value);
    partial void OnBillableToClientChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnVendorPhoneChanging(string value);
    partial void OnVendorPhoneChanged();
    partial void OnVendorEmailChanging(string value);
    partial void OnVendorEmailChanged();
    partial void OnVendorAddressChanging(string value);
    partial void OnVendorAddressChanged();
    partial void OnMoneyTypeChanging(int value);
    partial void OnMoneyTypeChanged();
    partial void OnOtherCostChanging(System.Nullable<double> value);
    partial void OnOtherCostChanged();
    partial void OnSaleTaxNameChanging(string value);
    partial void OnSaleTaxNameChanged();
    partial void OnSaleTaxValueChanging(System.Nullable<double> value);
    partial void OnSaleTaxValueChanged();
    partial void OnShippingChanging(System.Nullable<double> value);
    partial void OnShippingChanged();
    partial void OnServiceChargeChanging(System.Nullable<double> value);
    partial void OnServiceChargeChanged();
    partial void OnDiscountChanging(System.Nullable<double> value);
    partial void OnDiscountChanged();
    partial void OnCCListChanging(string value);
    partial void OnCCListChanged();
    partial void OnAssignIDChanging(System.Nullable<int> value);
    partial void OnAssignIDChanged();
    partial void OnAssignRoleChanging(System.Nullable<int> value);
    partial void OnAssignRoleChanged();
    partial void OnInvolveIDChanging(string value);
    partial void OnInvolveIDChanged();
    partial void OnInvolveResolutionChanging(string value);
    partial void OnInvolveResolutionChanged();
    partial void OnInvolveDateChanging(string value);
    partial void OnInvolveDateChanged();
    partial void OnInvolveRoleChanging(string value);
    partial void OnInvolveRoleChanged();
    partial void OnPurchaseAppovalChanging(string value);
    partial void OnPurchaseAppovalChanged();
    partial void OnPaymentAppovalChanging(string value);
    partial void OnPaymentAppovalChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnUSAccountingChanging(System.Nullable<int> value);
    partial void OnUSAccountingChanged();
    partial void OnIsUSPurchasingChanging(bool value);
    partial void OnIsUSPurchasingChanged();
    partial void OnUS_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnUS_PaymentMethodChanged();
    #endregion
		
		public PurchaseRequest()
		{
			this._PurchaseComments = new EntitySet<PurchaseComment>(new Action<PurchaseComment>(this.attach_PurchaseComments), new Action<PurchaseComment>(this.detach_PurchaseComments));
			this._PurchaseInvoices = new EntitySet<PurchaseInvoice>(new Action<PurchaseInvoice>(this.attach_PurchaseInvoices), new Action<PurchaseInvoice>(this.detach_PurchaseInvoices));
			this._PurchaseItems = new EntitySet<PurchaseItem>(new Action<PurchaseItem>(this.attach_PurchaseItems), new Action<PurchaseItem>(this.detach_PurchaseItems));
			this._Department = default(EntityRef<Department>);
			this._PR_PaymentMethod = default(EntityRef<PR_PaymentMethod>);
			this._UserAdmin = default(EntityRef<UserAdmin>);
			this._UserAdmin1 = default(EntityRef<UserAdmin>);
			this._WFResolution = default(EntityRef<WFResolution>);
			this._WFRole = default(EntityRef<WFRole>);
			this._WFStatus = default(EntityRef<WFStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					if (this._WFStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WFStatusID = value;
					this.SendPropertyChanged("WFStatusID");
					this.OnWFStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					if (this._WFResolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._WFResolutionID = value;
					this.SendPropertyChanged("WFResolutionID");
					this.OnWFResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requestor", DbType="Int NOT NULL")]
		public int Requestor
		{
			get
			{
				return this._Requestor;
			}
			set
			{
				if ((this._Requestor != value))
				{
					if (this._UserAdmin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestorChanging(value);
					this.SendPropertyChanging();
					this._Requestor = value;
					this.SendPropertyChanged("Requestor");
					this.OnRequestorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._ExpectedDate;
			}
			set
			{
				if ((this._ExpectedDate != value))
				{
					this.OnExpectedDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedDate = value;
					this.SendPropertyChanged("ExpectedDate");
					this.OnExpectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="Int NOT NULL")]
		public int SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubDepartmentChanging(value);
					this.SendPropertyChanging();
					this._SubDepartment = value;
					this.SendPropertyChanged("SubDepartment");
					this.OnSubDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this.OnJustificationChanging(value);
					this.SendPropertyChanging();
					this._Justification = value;
					this.SendPropertyChanged("Justification");
					this.OnJustificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillableToClient", DbType="Bit NOT NULL")]
		public bool BillableToClient
		{
			get
			{
				return this._BillableToClient;
			}
			set
			{
				if ((this._BillableToClient != value))
				{
					this.OnBillableToClientChanging(value);
					this.SendPropertyChanging();
					this._BillableToClient = value;
					this.SendPropertyChanged("BillableToClient");
					this.OnBillableToClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(100)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPhone", DbType="NVarChar(50)")]
		public string VendorPhone
		{
			get
			{
				return this._VendorPhone;
			}
			set
			{
				if ((this._VendorPhone != value))
				{
					this.OnVendorPhoneChanging(value);
					this.SendPropertyChanging();
					this._VendorPhone = value;
					this.SendPropertyChanged("VendorPhone");
					this.OnVendorPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorEmail", DbType="NVarChar(100)")]
		public string VendorEmail
		{
			get
			{
				return this._VendorEmail;
			}
			set
			{
				if ((this._VendorEmail != value))
				{
					this.OnVendorEmailChanging(value);
					this.SendPropertyChanging();
					this._VendorEmail = value;
					this.SendPropertyChanged("VendorEmail");
					this.OnVendorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddress", DbType="NVarChar(200)")]
		public string VendorAddress
		{
			get
			{
				return this._VendorAddress;
			}
			set
			{
				if ((this._VendorAddress != value))
				{
					this.OnVendorAddressChanging(value);
					this.SendPropertyChanging();
					this._VendorAddress = value;
					this.SendPropertyChanged("VendorAddress");
					this.OnVendorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyType", DbType="Int NOT NULL")]
		public int MoneyType
		{
			get
			{
				return this._MoneyType;
			}
			set
			{
				if ((this._MoneyType != value))
				{
					this.OnMoneyTypeChanging(value);
					this.SendPropertyChanging();
					this._MoneyType = value;
					this.SendPropertyChanged("MoneyType");
					this.OnMoneyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCost", DbType="Float")]
		public System.Nullable<double> OtherCost
		{
			get
			{
				return this._OtherCost;
			}
			set
			{
				if ((this._OtherCost != value))
				{
					this.OnOtherCostChanging(value);
					this.SendPropertyChanging();
					this._OtherCost = value;
					this.SendPropertyChanged("OtherCost");
					this.OnOtherCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxName", DbType="NVarChar(50)")]
		public string SaleTaxName
		{
			get
			{
				return this._SaleTaxName;
			}
			set
			{
				if ((this._SaleTaxName != value))
				{
					this.OnSaleTaxNameChanging(value);
					this.SendPropertyChanging();
					this._SaleTaxName = value;
					this.SendPropertyChanged("SaleTaxName");
					this.OnSaleTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxValue", DbType="Float")]
		public System.Nullable<double> SaleTaxValue
		{
			get
			{
				return this._SaleTaxValue;
			}
			set
			{
				if ((this._SaleTaxValue != value))
				{
					this.OnSaleTaxValueChanging(value);
					this.SendPropertyChanging();
					this._SaleTaxValue = value;
					this.SendPropertyChanged("SaleTaxValue");
					this.OnSaleTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="Float")]
		public System.Nullable<double> Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this.OnShippingChanging(value);
					this.SendPropertyChanging();
					this._Shipping = value;
					this.SendPropertyChanged("Shipping");
					this.OnShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Float")]
		public System.Nullable<double> ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this.OnServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCharge = value;
					this.SendPropertyChanged("ServiceCharge");
					this.OnServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this.OnCCListChanging(value);
					this.SendPropertyChanging();
					this._CCList = value;
					this.SendPropertyChanged("CCList");
					this.OnCCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignIDChanging(value);
					this.SendPropertyChanging();
					this._AssignID = value;
					this.SendPropertyChanged("AssignID");
					this.OnAssignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					if (this._WFRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignRoleChanging(value);
					this.SendPropertyChanging();
					this._AssignRole = value;
					this.SendPropertyChanged("AssignRole");
					this.OnAssignRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(500)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this.OnInvolveIDChanging(value);
					this.SendPropertyChanging();
					this._InvolveID = value;
					this.SendPropertyChanged("InvolveID");
					this.OnInvolveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this.OnInvolveResolutionChanging(value);
					this.SendPropertyChanging();
					this._InvolveResolution = value;
					this.SendPropertyChanged("InvolveResolution");
					this.OnInvolveResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this.OnInvolveDateChanging(value);
					this.SendPropertyChanging();
					this._InvolveDate = value;
					this.SendPropertyChanged("InvolveDate");
					this.OnInvolveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="NVarChar(500)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this.OnInvolveRoleChanging(value);
					this.SendPropertyChanging();
					this._InvolveRole = value;
					this.SendPropertyChanged("InvolveRole");
					this.OnInvolveRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAppoval", DbType="NVarChar(50)")]
		public string PurchaseAppoval
		{
			get
			{
				return this._PurchaseAppoval;
			}
			set
			{
				if ((this._PurchaseAppoval != value))
				{
					this.OnPurchaseAppovalChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAppoval = value;
					this.SendPropertyChanged("PurchaseAppoval");
					this.OnPurchaseAppovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAppoval", DbType="NVarChar(50)")]
		public string PaymentAppoval
		{
			get
			{
				return this._PaymentAppoval;
			}
			set
			{
				if ((this._PaymentAppoval != value))
				{
					this.OnPaymentAppovalChanging(value);
					this.SendPropertyChanging();
					this._PaymentAppoval = value;
					this.SendPropertyChanged("PaymentAppoval");
					this.OnPaymentAppovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int NOT NULL")]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USAccounting", DbType="Int")]
		public System.Nullable<int> USAccounting
		{
			get
			{
				return this._USAccounting;
			}
			set
			{
				if ((this._USAccounting != value))
				{
					this.OnUSAccountingChanging(value);
					this.SendPropertyChanging();
					this._USAccounting = value;
					this.SendPropertyChanged("USAccounting");
					this.OnUSAccountingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSPurchasing", DbType="Bit NOT NULL")]
		public bool IsUSPurchasing
		{
			get
			{
				return this._IsUSPurchasing;
			}
			set
			{
				if ((this._IsUSPurchasing != value))
				{
					this.OnIsUSPurchasingChanging(value);
					this.SendPropertyChanging();
					this._IsUSPurchasing = value;
					this.SendPropertyChanged("IsUSPurchasing");
					this.OnIsUSPurchasingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_US_PaymentMethod", DbType="Int")]
		public System.Nullable<int> US_PaymentMethod
		{
			get
			{
				return this._US_PaymentMethod;
			}
			set
			{
				if ((this._US_PaymentMethod != value))
				{
					if (this._PR_PaymentMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUS_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._US_PaymentMethod = value;
					this.SendPropertyChanged("US_PaymentMethod");
					this.OnUS_PaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseComment", Storage="_PurchaseComments", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<PurchaseComment> PurchaseComments
		{
			get
			{
				return this._PurchaseComments;
			}
			set
			{
				this._PurchaseComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseInvoice", Storage="_PurchaseInvoices", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<PurchaseInvoice> PurchaseInvoices
		{
			get
			{
				return this._PurchaseInvoices;
			}
			set
			{
				this._PurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseRequest_PurchaseItem", Storage="_PurchaseItems", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<PurchaseItem> PurchaseItems
		{
			get
			{
				return this._PurchaseItems;
			}
			set
			{
				this._PurchaseItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PurchaseRequest", Storage="_Department", ThisKey="SubDepartment", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._SubDepartment = value.DepartmentId;
					}
					else
					{
						this._SubDepartment = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PR_PaymentMethod_PurchaseRequest", Storage="_PR_PaymentMethod", ThisKey="US_PaymentMethod", OtherKey="ID", IsForeignKey=true)]
		public PR_PaymentMethod PR_PaymentMethod
		{
			get
			{
				return this._PR_PaymentMethod.Entity;
			}
			set
			{
				PR_PaymentMethod previousValue = this._PR_PaymentMethod.Entity;
				if (((previousValue != value) 
							|| (this._PR_PaymentMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PR_PaymentMethod.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._PR_PaymentMethod.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._US_PaymentMethod = value.ID;
					}
					else
					{
						this._US_PaymentMethod = default(Nullable<int>);
					}
					this.SendPropertyChanged("PR_PaymentMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequest", Storage="_UserAdmin", ThisKey="AssignID", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._AssignID = value.UserAdminId;
					}
					else
					{
						this._AssignID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequest1", Storage="_UserAdmin1", ThisKey="Requestor", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin1
		{
			get
			{
				return this._UserAdmin1.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin1.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin1.Entity = null;
						previousValue.PurchaseRequests1.Remove(this);
					}
					this._UserAdmin1.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests1.Add(this);
						this._Requestor = value.UserAdminId;
					}
					else
					{
						this._Requestor = default(int);
					}
					this.SendPropertyChanged("UserAdmin1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_PurchaseRequest", Storage="_WFResolution", ThisKey="WFResolutionID", OtherKey="ID", IsForeignKey=true)]
		public WFResolution WFResolution
		{
			get
			{
				return this._WFResolution.Entity;
			}
			set
			{
				WFResolution previousValue = this._WFResolution.Entity;
				if (((previousValue != value) 
							|| (this._WFResolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFResolution.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._WFResolution.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._WFResolutionID = value.ID;
					}
					else
					{
						this._WFResolutionID = default(int);
					}
					this.SendPropertyChanged("WFResolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_PurchaseRequest", Storage="_WFRole", ThisKey="AssignRole", OtherKey="ID", IsForeignKey=true)]
		public WFRole WFRole
		{
			get
			{
				return this._WFRole.Entity;
			}
			set
			{
				WFRole previousValue = this._WFRole.Entity;
				if (((previousValue != value) 
							|| (this._WFRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFRole.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._WFRole.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._AssignRole = value.ID;
					}
					else
					{
						this._AssignRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("WFRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_PurchaseRequest", Storage="_WFStatus", ThisKey="WFStatusID", OtherKey="ID", IsForeignKey=true)]
		public WFStatus WFStatus
		{
			get
			{
				return this._WFStatus.Entity;
			}
			set
			{
				WFStatus previousValue = this._WFStatus.Entity;
				if (((previousValue != value) 
							|| (this._WFStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFStatus.Entity = null;
						previousValue.PurchaseRequests.Remove(this);
					}
					this._WFStatus.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequests.Add(this);
						this._WFStatusID = value.ID;
					}
					else
					{
						this._WFStatusID = default(int);
					}
					this.SendPropertyChanged("WFStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseComments(PurchaseComment entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = this;
		}
		
		private void detach_PurchaseComments(PurchaseComment entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = null;
		}
		
		private void attach_PurchaseInvoices(PurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = this;
		}
		
		private void detach_PurchaseInvoices(PurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = null;
		}
		
		private void attach_PurchaseItems(PurchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = this;
		}
		
		private void detach_PurchaseItems(PurchaseItem entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseRequestApproval")]
	public partial class PurchaseRequestApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApprovalID;
		
		private int _RequestID;
		
		private int _ApproverId;
		
		private int _ApproverGroup;
		
		private bool _IsApprove;
		
		private System.Nullable<bool> _IsImmediate;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApprovalIDChanging(int value);
    partial void OnApprovalIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnApproverIdChanging(int value);
    partial void OnApproverIdChanged();
    partial void OnApproverGroupChanging(int value);
    partial void OnApproverGroupChanged();
    partial void OnIsApproveChanging(bool value);
    partial void OnIsApproveChanged();
    partial void OnIsImmediateChanging(System.Nullable<bool> value);
    partial void OnIsImmediateChanged();
    #endregion
		
		public PurchaseRequestApproval()
		{
			this._UserAdmin = default(EntityRef<UserAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApprovalID
		{
			get
			{
				return this._ApprovalID;
			}
			set
			{
				if ((this._ApprovalID != value))
				{
					this.OnApprovalIDChanging(value);
					this.SendPropertyChanging();
					this._ApprovalID = value;
					this.SendPropertyChanged("ApprovalID");
					this.OnApprovalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverId", DbType="Int NOT NULL")]
		public int ApproverId
		{
			get
			{
				return this._ApproverId;
			}
			set
			{
				if ((this._ApproverId != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproverIdChanging(value);
					this.SendPropertyChanging();
					this._ApproverId = value;
					this.SendPropertyChanged("ApproverId");
					this.OnApproverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverGroup", DbType="Int NOT NULL")]
		public int ApproverGroup
		{
			get
			{
				return this._ApproverGroup;
			}
			set
			{
				if ((this._ApproverGroup != value))
				{
					this.OnApproverGroupChanging(value);
					this.SendPropertyChanging();
					this._ApproverGroup = value;
					this.SendPropertyChanged("ApproverGroup");
					this.OnApproverGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit NOT NULL")]
		public bool IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this.OnIsApproveChanging(value);
					this.SendPropertyChanging();
					this._IsApprove = value;
					this.SendPropertyChanged("IsApprove");
					this.OnIsApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImmediate", DbType="Bit")]
		public System.Nullable<bool> IsImmediate
		{
			get
			{
				return this._IsImmediate;
			}
			set
			{
				if ((this._IsImmediate != value))
				{
					this.OnIsImmediateChanging(value);
					this.SendPropertyChanging();
					this._IsImmediate = value;
					this.SendPropertyChanged("IsImmediate");
					this.OnIsImmediateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequestApproval", Storage="_UserAdmin", ThisKey="ApproverId", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.PurchaseRequestApprovals.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.PurchaseRequestApprovals.Add(this);
						this._ApproverId = value.UserAdminId;
					}
					else
					{
						this._ApproverId = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultTemplate")]
	public partial class ResultTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ResultTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SeatCode")]
	public partial class SeatCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _FloorID;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Floor> _Floor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFloorIDChanging(int value);
    partial void OnFloorIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SeatCode()
		{
			this._Floor = default(EntityRef<Floor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorID", DbType="Int NOT NULL")]
		public int FloorID
		{
			get
			{
				return this._FloorID;
			}
			set
			{
				if ((this._FloorID != value))
				{
					if (this._Floor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFloorIDChanging(value);
					this.SendPropertyChanging();
					this._FloorID = value;
					this.SendPropertyChanged("FloorID");
					this.OnFloorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_SeatCode", Storage="_Floor", ThisKey="FloorID", OtherKey="ID", IsForeignKey=true)]
		public Floor Floor
		{
			get
			{
				return this._Floor.Entity;
			}
			set
			{
				Floor previousValue = this._Floor.Entity;
				if (((previousValue != value) 
							|| (this._Floor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Floor.Entity = null;
						previousValue.SeatCodes.Remove(this);
					}
					this._Floor.Entity = value;
					if ((value != null))
					{
						value.SeatCodes.Add(this);
						this._FloorID = value.ID;
					}
					else
					{
						this._FloorID = default(int);
					}
					this.SendPropertyChanged("Floor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Activity")]
	public partial class SR_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ServiceRequestID;
		
		private string _UserName;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private double _Total;
		
		private string _Description;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<SR_ServiceRequest> _SR_ServiceRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceRequestIDChanging(int value);
    partial void OnServiceRequestIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public SR_Activity()
		{
			this._SR_ServiceRequest = default(EntityRef<SR_ServiceRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRequestID", DbType="Int NOT NULL")]
		public int ServiceRequestID
		{
			get
			{
				return this._ServiceRequestID;
			}
			set
			{
				if ((this._ServiceRequestID != value))
				{
					if (this._SR_ServiceRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceRequestIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceRequestID = value;
					this.SendPropertyChanged("ServiceRequestID");
					this.OnServiceRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(3000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_Activity", Storage="_SR_ServiceRequest", ThisKey="ServiceRequestID", OtherKey="ID", IsForeignKey=true)]
		public SR_ServiceRequest SR_ServiceRequest
		{
			get
			{
				return this._SR_ServiceRequest.Entity;
			}
			set
			{
				SR_ServiceRequest previousValue = this._SR_ServiceRequest.Entity;
				if (((previousValue != value) 
							|| (this._SR_ServiceRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_ServiceRequest.Entity = null;
						previousValue.SR_Activities.Remove(this);
					}
					this._SR_ServiceRequest.Entity = value;
					if ((value != null))
					{
						value.SR_Activities.Add(this);
						this._ServiceRequestID = value.ID;
					}
					else
					{
						this._ServiceRequestID = default(int);
					}
					this.SendPropertyChanged("SR_ServiceRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Category")]
	public partial class SR_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<SR_Category> _SR_Categories;
		
		private EntitySet<SR_ServiceRequest> _SR_ServiceRequests;
		
		private EntityRef<SR_Category> _SR_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SR_Category()
		{
			this._SR_Categories = new EntitySet<SR_Category>(new Action<SR_Category>(this.attach_SR_Categories), new Action<SR_Category>(this.detach_SR_Categories));
			this._SR_ServiceRequests = new EntitySet<SR_ServiceRequest>(new Action<SR_ServiceRequest>(this.attach_SR_ServiceRequests), new Action<SR_ServiceRequest>(this.detach_SR_ServiceRequests));
			this._SR_Category1 = default(EntityRef<SR_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._SR_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Category_SR_Category", Storage="_SR_Categories", ThisKey="ID", OtherKey="ParentId")]
		public EntitySet<SR_Category> SR_Categories
		{
			get
			{
				return this._SR_Categories;
			}
			set
			{
				this._SR_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Category_SR_ServiceRequest", Storage="_SR_ServiceRequests", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<SR_ServiceRequest> SR_ServiceRequests
		{
			get
			{
				return this._SR_ServiceRequests;
			}
			set
			{
				this._SR_ServiceRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Category_SR_Category", Storage="_SR_Category1", ThisKey="ParentId", OtherKey="ID", IsForeignKey=true)]
		public SR_Category SR_Category1
		{
			get
			{
				return this._SR_Category1.Entity;
			}
			set
			{
				SR_Category previousValue = this._SR_Category1.Entity;
				if (((previousValue != value) 
							|| (this._SR_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_Category1.Entity = null;
						previousValue.SR_Categories.Remove(this);
					}
					this._SR_Category1.Entity = value;
					if ((value != null))
					{
						value.SR_Categories.Add(this);
						this._ParentId = value.ID;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SR_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SR_Categories(SR_Category entity)
		{
			this.SendPropertyChanging();
			entity.SR_Category1 = this;
		}
		
		private void detach_SR_Categories(SR_Category entity)
		{
			this.SendPropertyChanging();
			entity.SR_Category1 = null;
		}
		
		private void attach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Category = this;
		}
		
		private void detach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Comment")]
	public partial class SR_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ServiceRequestID;
		
		private string _Poster;
		
		private System.DateTime _PostTime;
		
		private string _Contents;
		
		private string _Files;
		
		private EntityRef<SR_ServiceRequest> _SR_ServiceRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceRequestIDChanging(int value);
    partial void OnServiceRequestIDChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnFilesChanging(string value);
    partial void OnFilesChanged();
    #endregion
		
		public SR_Comment()
		{
			this._SR_ServiceRequest = default(EntityRef<SR_ServiceRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRequestID", DbType="Int NOT NULL")]
		public int ServiceRequestID
		{
			get
			{
				return this._ServiceRequestID;
			}
			set
			{
				if ((this._ServiceRequestID != value))
				{
					if (this._SR_ServiceRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceRequestIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceRequestID = value;
					this.SendPropertyChanged("ServiceRequestID");
					this.OnServiceRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="DateTime NOT NULL")]
		public System.DateTime PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files", DbType="NVarChar(4000)")]
		public string Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				if ((this._Files != value))
				{
					this.OnFilesChanging(value);
					this.SendPropertyChanging();
					this._Files = value;
					this.SendPropertyChanged("Files");
					this.OnFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_Comment", Storage="_SR_ServiceRequest", ThisKey="ServiceRequestID", OtherKey="ID", IsForeignKey=true)]
		public SR_ServiceRequest SR_ServiceRequest
		{
			get
			{
				return this._SR_ServiceRequest.Entity;
			}
			set
			{
				SR_ServiceRequest previousValue = this._SR_ServiceRequest.Entity;
				if (((previousValue != value) 
							|| (this._SR_ServiceRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_ServiceRequest.Entity = null;
						previousValue.SR_Comments.Remove(this);
					}
					this._SR_ServiceRequest.Entity = value;
					if ((value != null))
					{
						value.SR_Comments.Add(this);
						this._ServiceRequestID = value.ID;
					}
					else
					{
						this._ServiceRequestID = default(int);
					}
					this.SendPropertyChanged("SR_ServiceRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_ServiceRequest")]
	public partial class SR_ServiceRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private string _Title;
		
		private string _Description;
		
		private string _SubmitUser;
		
		private string _RequestUser;
		
		private string _CCList;
		
		private int _UrgencyID;
		
		private int _StatusID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Files;
		
		private string _AssignUser;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _InvolveUser;
		
		private string _InvolveDate;
		
		private string _InvolveStatus;
		
		private string _Solution;
		
		private string _SolutionLastModified;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<int> _OldId;
		
		private EntitySet<SR_Activity> _SR_Activities;
		
		private EntitySet<SR_Comment> _SR_Comments;
		
		private EntitySet<SR_ServiceRequest> _SR_ServiceRequests;
		
		private EntityRef<SR_Category> _SR_Category;
		
		private EntityRef<SR_ServiceRequest> _SR_ServiceRequest1;
		
		private EntityRef<SR_Status> _SR_Status;
		
		private EntityRef<SR_Urgency> _SR_Urgency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSubmitUserChanging(string value);
    partial void OnSubmitUserChanged();
    partial void OnRequestUserChanging(string value);
    partial void OnRequestUserChanged();
    partial void OnCCListChanging(string value);
    partial void OnCCListChanged();
    partial void OnUrgencyIDChanging(int value);
    partial void OnUrgencyIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnFilesChanging(string value);
    partial void OnFilesChanged();
    partial void OnAssignUserChanging(string value);
    partial void OnAssignUserChanged();
    partial void OnCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnInvolveUserChanging(string value);
    partial void OnInvolveUserChanged();
    partial void OnInvolveDateChanging(string value);
    partial void OnInvolveDateChanged();
    partial void OnInvolveStatusChanging(string value);
    partial void OnInvolveStatusChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnSolutionLastModifiedChanging(string value);
    partial void OnSolutionLastModifiedChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOldIdChanging(System.Nullable<int> value);
    partial void OnOldIdChanged();
    #endregion
		
		public SR_ServiceRequest()
		{
			this._SR_Activities = new EntitySet<SR_Activity>(new Action<SR_Activity>(this.attach_SR_Activities), new Action<SR_Activity>(this.detach_SR_Activities));
			this._SR_Comments = new EntitySet<SR_Comment>(new Action<SR_Comment>(this.attach_SR_Comments), new Action<SR_Comment>(this.detach_SR_Comments));
			this._SR_ServiceRequests = new EntitySet<SR_ServiceRequest>(new Action<SR_ServiceRequest>(this.attach_SR_ServiceRequests), new Action<SR_ServiceRequest>(this.detach_SR_ServiceRequests));
			this._SR_Category = default(EntityRef<SR_Category>);
			this._SR_ServiceRequest1 = default(EntityRef<SR_ServiceRequest>);
			this._SR_Status = default(EntityRef<SR_Status>);
			this._SR_Urgency = default(EntityRef<SR_Urgency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._SR_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SubmitUser
		{
			get
			{
				return this._SubmitUser;
			}
			set
			{
				if ((this._SubmitUser != value))
				{
					this.OnSubmitUserChanging(value);
					this.SendPropertyChanging();
					this._SubmitUser = value;
					this.SendPropertyChanged("SubmitUser");
					this.OnSubmitUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestUser
		{
			get
			{
				return this._RequestUser;
			}
			set
			{
				if ((this._RequestUser != value))
				{
					this.OnRequestUserChanging(value);
					this.SendPropertyChanging();
					this._RequestUser = value;
					this.SendPropertyChanged("RequestUser");
					this.OnRequestUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this.OnCCListChanging(value);
					this.SendPropertyChanging();
					this._CCList = value;
					this.SendPropertyChanged("CCList");
					this.OnCCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgencyID", DbType="Int NOT NULL")]
		public int UrgencyID
		{
			get
			{
				return this._UrgencyID;
			}
			set
			{
				if ((this._UrgencyID != value))
				{
					if (this._SR_Urgency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrgencyIDChanging(value);
					this.SendPropertyChanging();
					this._UrgencyID = value;
					this.SendPropertyChanged("UrgencyID");
					this.OnUrgencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._SR_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._SR_ServiceRequest1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Files", DbType="NVarChar(4000)")]
		public string Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				if ((this._Files != value))
				{
					this.OnFilesChanging(value);
					this.SendPropertyChanging();
					this._Files = value;
					this.SendPropertyChanged("Files");
					this.OnFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this.OnAssignUserChanging(value);
					this.SendPropertyChanging();
					this._AssignUser = value;
					this.SendPropertyChanged("AssignUser");
					this.OnAssignUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveUser", DbType="NVarChar(1000)")]
		public string InvolveUser
		{
			get
			{
				return this._InvolveUser;
			}
			set
			{
				if ((this._InvolveUser != value))
				{
					this.OnInvolveUserChanging(value);
					this.SendPropertyChanging();
					this._InvolveUser = value;
					this.SendPropertyChanged("InvolveUser");
					this.OnInvolveUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(1000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this.OnInvolveDateChanging(value);
					this.SendPropertyChanging();
					this._InvolveDate = value;
					this.SendPropertyChanged("InvolveDate");
					this.OnInvolveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveStatus", DbType="NVarChar(100)")]
		public string InvolveStatus
		{
			get
			{
				return this._InvolveStatus;
			}
			set
			{
				if ((this._InvolveStatus != value))
				{
					this.OnInvolveStatusChanging(value);
					this.SendPropertyChanging();
					this._InvolveStatus = value;
					this.SendPropertyChanged("InvolveStatus");
					this.OnInvolveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solution", DbType="NVarChar(4000)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionLastModified", DbType="NVarChar(200)")]
		public string SolutionLastModified
		{
			get
			{
				return this._SolutionLastModified;
			}
			set
			{
				if ((this._SolutionLastModified != value))
				{
					this.OnSolutionLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._SolutionLastModified = value;
					this.SendPropertyChanged("SolutionLastModified");
					this.OnSolutionLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_Activity", Storage="_SR_Activities", ThisKey="ID", OtherKey="ServiceRequestID")]
		public EntitySet<SR_Activity> SR_Activities
		{
			get
			{
				return this._SR_Activities;
			}
			set
			{
				this._SR_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_Comment", Storage="_SR_Comments", ThisKey="ID", OtherKey="ServiceRequestID")]
		public EntitySet<SR_Comment> SR_Comments
		{
			get
			{
				return this._SR_Comments;
			}
			set
			{
				this._SR_Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_ServiceRequest", Storage="_SR_ServiceRequests", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<SR_ServiceRequest> SR_ServiceRequests
		{
			get
			{
				return this._SR_ServiceRequests;
			}
			set
			{
				this._SR_ServiceRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Category_SR_ServiceRequest", Storage="_SR_Category", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public SR_Category SR_Category
		{
			get
			{
				return this._SR_Category.Entity;
			}
			set
			{
				SR_Category previousValue = this._SR_Category.Entity;
				if (((previousValue != value) 
							|| (this._SR_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_Category.Entity = null;
						previousValue.SR_ServiceRequests.Remove(this);
					}
					this._SR_Category.Entity = value;
					if ((value != null))
					{
						value.SR_ServiceRequests.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("SR_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_ServiceRequest_SR_ServiceRequest", Storage="_SR_ServiceRequest1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public SR_ServiceRequest SR_ServiceRequest1
		{
			get
			{
				return this._SR_ServiceRequest1.Entity;
			}
			set
			{
				SR_ServiceRequest previousValue = this._SR_ServiceRequest1.Entity;
				if (((previousValue != value) 
							|| (this._SR_ServiceRequest1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_ServiceRequest1.Entity = null;
						previousValue.SR_ServiceRequests.Remove(this);
					}
					this._SR_ServiceRequest1.Entity = value;
					if ((value != null))
					{
						value.SR_ServiceRequests.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SR_ServiceRequest1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Status_SR_ServiceRequest", Storage="_SR_Status", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public SR_Status SR_Status
		{
			get
			{
				return this._SR_Status.Entity;
			}
			set
			{
				SR_Status previousValue = this._SR_Status.Entity;
				if (((previousValue != value) 
							|| (this._SR_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_Status.Entity = null;
						previousValue.SR_ServiceRequests.Remove(this);
					}
					this._SR_Status.Entity = value;
					if ((value != null))
					{
						value.SR_ServiceRequests.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("SR_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Urgency_SR_ServiceRequest", Storage="_SR_Urgency", ThisKey="UrgencyID", OtherKey="ID", IsForeignKey=true)]
		public SR_Urgency SR_Urgency
		{
			get
			{
				return this._SR_Urgency.Entity;
			}
			set
			{
				SR_Urgency previousValue = this._SR_Urgency.Entity;
				if (((previousValue != value) 
							|| (this._SR_Urgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SR_Urgency.Entity = null;
						previousValue.SR_ServiceRequests.Remove(this);
					}
					this._SR_Urgency.Entity = value;
					if ((value != null))
					{
						value.SR_ServiceRequests.Add(this);
						this._UrgencyID = value.ID;
					}
					else
					{
						this._UrgencyID = default(int);
					}
					this.SendPropertyChanged("SR_Urgency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SR_Activities(SR_Activity entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest = this;
		}
		
		private void detach_SR_Activities(SR_Activity entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest = null;
		}
		
		private void attach_SR_Comments(SR_Comment entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest = this;
		}
		
		private void detach_SR_Comments(SR_Comment entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest = null;
		}
		
		private void attach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest1 = this;
		}
		
		private void detach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_ServiceRequest1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Setting")]
	public partial class SR_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OfficeID;
		
		private string _ProjectName;
		
		private int _UserAdminID;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOfficeIDChanging(int value);
    partial void OnOfficeIDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnUserAdminIDChanging(int value);
    partial void OnUserAdminIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SR_Setting()
		{
			this._Office = default(EntityRef<Office>);
			this._UserAdmin = default(EntityRef<UserAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminID", DbType="Int NOT NULL")]
		public int UserAdminID
		{
			get
			{
				return this._UserAdminID;
			}
			set
			{
				if ((this._UserAdminID != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAdminIDChanging(value);
					this.SendPropertyChanging();
					this._UserAdminID = value;
					this.SendPropertyChanged("UserAdminID");
					this.OnUserAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_SR_Setting", Storage="_Office", ThisKey="OfficeID", OtherKey="ID", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.SR_Settings.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.SR_Settings.Add(this);
						this._OfficeID = value.ID;
					}
					else
					{
						this._OfficeID = default(int);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_SR_Setting", Storage="_UserAdmin", ThisKey="UserAdminID", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.SR_Settings.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.SR_Settings.Add(this);
						this._UserAdminID = value.UserAdminId;
					}
					else
					{
						this._UserAdminID = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Status")]
	public partial class SR_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<SR_ServiceRequest> _SR_ServiceRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SR_Status()
		{
			this._SR_ServiceRequests = new EntitySet<SR_ServiceRequest>(new Action<SR_ServiceRequest>(this.attach_SR_ServiceRequests), new Action<SR_ServiceRequest>(this.detach_SR_ServiceRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Status_SR_ServiceRequest", Storage="_SR_ServiceRequests", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<SR_ServiceRequest> SR_ServiceRequests
		{
			get
			{
				return this._SR_ServiceRequests;
			}
			set
			{
				this._SR_ServiceRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Status = this;
		}
		
		private void detach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SR_Urgency")]
	public partial class SR_Urgency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Icon;
		
		private string _Description;
		
		private EntitySet<SR_ServiceRequest> _SR_ServiceRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SR_Urgency()
		{
			this._SR_ServiceRequests = new EntitySet<SR_ServiceRequest>(new Action<SR_ServiceRequest>(this.attach_SR_ServiceRequests), new Action<SR_ServiceRequest>(this.detach_SR_ServiceRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(100)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SR_Urgency_SR_ServiceRequest", Storage="_SR_ServiceRequests", ThisKey="ID", OtherKey="UrgencyID")]
		public EntitySet<SR_ServiceRequest> SR_ServiceRequests
		{
			get
			{
				return this._SR_ServiceRequests;
			}
			set
			{
				this._SR_ServiceRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Urgency = this;
		}
		
		private void detach_SR_ServiceRequests(SR_ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.SR_Urgency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STT")]
	public partial class STT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _EmployeeID;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _FirstName;
		
		private string _VnLastName;
		
		private string _VnMiddleName;
		
		private string _VnFirstName;
		
		private System.Nullable<bool> _Gender;
		
		private string _IDNumber;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ExpectedEndDate;
		
		private string _Photograph;
		
		private string _Major;
		
		private string _JR;
		
		private string _JRApproval;
		
		private string _TempAddress;
		
		private string _TempArea;
		
		private string _TempDistrict;
		
		private string _TempCityProvince;
		
		private string _TempCountry;
		
		private string _PermanentAddress;
		
		private string _PermanentArea;
		
		private string _PermanentDistrict;
		
		private string _PermanentCityProvince;
		
		private string _PermanentCountry;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _PersonalEmail;
		
		private string _OfficeEmail;
		
		private string _ExtensionNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _VnPOB;
		
		private string _POB;
		
		private string _Nationality;
		
		private string _PlaceOfOrigin;
		
		private string _VnPlaceOfOrigin;
		
		private string _SSN;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<double> _ResignedAllowance;
		
		private System.Nullable<bool> _LaborUnion;
		
		private System.Nullable<System.DateTime> _LaborUnionDate;
		
		private string _Remarks;
		
		private System.Nullable<bool> _MarriedStatus;
		
		private string _Floor;
		
		private string _Religion;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private string _EmergencyContactRelationship;
		
		private string _Title;
		
		private string _Degree;
		
		private string _OtherDegree;
		
		private string _IDIssueLocation;
		
		private string _VnIDIssueLocation;
		
		private int _DepartmentId;
		
		private string _SkypeId;
		
		private string _YahooId;
		
		private string _SeatCode;
		
		private string _Race;
		
		private string _VnTempAddress;
		
		private string _VnTempArea;
		
		private string _VnTempDistrict;
		
		private string _VnTempCityProvince;
		
		private string _VnTempCountry;
		
		private string _VnPermanentAddress;
		
		private string _VnPermanentArea;
		
		private string _VnPermanentDistrict;
		
		private string _VnPermanentCityProvince;
		
		private string _VnPermanentCountry;
		
		private string _CVFile;
		
		private int _STTStatusId;
		
		private System.Nullable<int> _ResultId;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _Project;
		
		private string _Manager;
		
		private string _ManagerId;
		
		private string _CandidateID;
		
		private string _LocationCode;
		
		private EntitySet<STT_RefResult> _STT_RefResults;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<STT_Result> _STT_Result;
		
		private EntityRef<STT_Status> _STT_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnVnLastNameChanging(string value);
    partial void OnVnLastNameChanged();
    partial void OnVnMiddleNameChanging(string value);
    partial void OnVnMiddleNameChanged();
    partial void OnVnFirstNameChanging(string value);
    partial void OnVnFirstNameChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnExpectedEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedEndDateChanged();
    partial void OnPhotographChanging(string value);
    partial void OnPhotographChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnJRChanging(string value);
    partial void OnJRChanged();
    partial void OnJRApprovalChanging(string value);
    partial void OnJRApprovalChanged();
    partial void OnTempAddressChanging(string value);
    partial void OnTempAddressChanged();
    partial void OnTempAreaChanging(string value);
    partial void OnTempAreaChanged();
    partial void OnTempDistrictChanging(string value);
    partial void OnTempDistrictChanged();
    partial void OnTempCityProvinceChanging(string value);
    partial void OnTempCityProvinceChanged();
    partial void OnTempCountryChanging(string value);
    partial void OnTempCountryChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnPermanentAreaChanging(string value);
    partial void OnPermanentAreaChanged();
    partial void OnPermanentDistrictChanging(string value);
    partial void OnPermanentDistrictChanged();
    partial void OnPermanentCityProvinceChanging(string value);
    partial void OnPermanentCityProvinceChanged();
    partial void OnPermanentCountryChanging(string value);
    partial void OnPermanentCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnPersonalEmailChanging(string value);
    partial void OnPersonalEmailChanged();
    partial void OnOfficeEmailChanging(string value);
    partial void OnOfficeEmailChanged();
    partial void OnExtensionNumberChanging(string value);
    partial void OnExtensionNumberChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnVnPOBChanging(string value);
    partial void OnVnPOBChanged();
    partial void OnPOBChanging(string value);
    partial void OnPOBChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPlaceOfOriginChanging(string value);
    partial void OnPlaceOfOriginChanged();
    partial void OnVnPlaceOfOriginChanging(string value);
    partial void OnVnPlaceOfOriginChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnResignedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResignedDateChanged();
    partial void OnResignedReasonChanging(string value);
    partial void OnResignedReasonChanged();
    partial void OnResignedAllowanceChanging(System.Nullable<double> value);
    partial void OnResignedAllowanceChanged();
    partial void OnLaborUnionChanging(System.Nullable<bool> value);
    partial void OnLaborUnionChanged();
    partial void OnLaborUnionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLaborUnionDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnMarriedStatusChanging(System.Nullable<bool> value);
    partial void OnMarriedStatusChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnEmergencyContactNameChanging(string value);
    partial void OnEmergencyContactNameChanged();
    partial void OnEmergencyContactPhoneChanging(string value);
    partial void OnEmergencyContactPhoneChanged();
    partial void OnEmergencyContactRelationshipChanging(string value);
    partial void OnEmergencyContactRelationshipChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnOtherDegreeChanging(string value);
    partial void OnOtherDegreeChanged();
    partial void OnIDIssueLocationChanging(string value);
    partial void OnIDIssueLocationChanged();
    partial void OnVnIDIssueLocationChanging(string value);
    partial void OnVnIDIssueLocationChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnSkypeIdChanging(string value);
    partial void OnSkypeIdChanged();
    partial void OnYahooIdChanging(string value);
    partial void OnYahooIdChanged();
    partial void OnSeatCodeChanging(string value);
    partial void OnSeatCodeChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnVnTempAddressChanging(string value);
    partial void OnVnTempAddressChanged();
    partial void OnVnTempAreaChanging(string value);
    partial void OnVnTempAreaChanged();
    partial void OnVnTempDistrictChanging(string value);
    partial void OnVnTempDistrictChanged();
    partial void OnVnTempCityProvinceChanging(string value);
    partial void OnVnTempCityProvinceChanged();
    partial void OnVnTempCountryChanging(string value);
    partial void OnVnTempCountryChanged();
    partial void OnVnPermanentAddressChanging(string value);
    partial void OnVnPermanentAddressChanged();
    partial void OnVnPermanentAreaChanging(string value);
    partial void OnVnPermanentAreaChanged();
    partial void OnVnPermanentDistrictChanging(string value);
    partial void OnVnPermanentDistrictChanged();
    partial void OnVnPermanentCityProvinceChanging(string value);
    partial void OnVnPermanentCityProvinceChanged();
    partial void OnVnPermanentCountryChanging(string value);
    partial void OnVnPermanentCountryChanged();
    partial void OnCVFileChanging(string value);
    partial void OnCVFileChanged();
    partial void OnSTTStatusIdChanging(int value);
    partial void OnSTTStatusIdChanged();
    partial void OnResultIdChanging(System.Nullable<int> value);
    partial void OnResultIdChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnManagerIdChanging(string value);
    partial void OnManagerIdChanged();
    partial void OnCandidateIDChanging(string value);
    partial void OnCandidateIDChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    #endregion
		
		public STT()
		{
			this._STT_RefResults = new EntitySet<STT_RefResult>(new Action<STT_RefResult>(this.attach_STT_RefResults), new Action<STT_RefResult>(this.detach_STT_RefResults));
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._STT_Result = default(EntityRef<STT_Result>);
			this._STT_Status = default(EntityRef<STT_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(100)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(20)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnLastName", DbType="NVarChar(50)")]
		public string VnLastName
		{
			get
			{
				return this._VnLastName;
			}
			set
			{
				if ((this._VnLastName != value))
				{
					this.OnVnLastNameChanging(value);
					this.SendPropertyChanging();
					this._VnLastName = value;
					this.SendPropertyChanged("VnLastName");
					this.OnVnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnMiddleName", DbType="NVarChar(50)")]
		public string VnMiddleName
		{
			get
			{
				return this._VnMiddleName;
			}
			set
			{
				if ((this._VnMiddleName != value))
				{
					this.OnVnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._VnMiddleName = value;
					this.SendPropertyChanged("VnMiddleName");
					this.OnVnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnFirstName", DbType="NVarChar(50)")]
		public string VnFirstName
		{
			get
			{
				return this._VnFirstName;
			}
			set
			{
				if ((this._VnFirstName != value))
				{
					this.OnVnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._VnFirstName = value;
					this.SendPropertyChanged("VnFirstName");
					this.OnVnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(20)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedEndDate
		{
			get
			{
				return this._ExpectedEndDate;
			}
			set
			{
				if ((this._ExpectedEndDate != value))
				{
					this.OnExpectedEndDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedEndDate = value;
					this.SendPropertyChanged("ExpectedEndDate");
					this.OnExpectedEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this.OnPhotographChanging(value);
					this.SendPropertyChanging();
					this._Photograph = value;
					this.SendPropertyChanged("Photograph");
					this.OnPhotographChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(255)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this.OnJRChanging(value);
					this.SendPropertyChanging();
					this._JR = value;
					this.SendPropertyChanged("JR");
					this.OnJRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRApproval", DbType="NVarChar(10)")]
		public string JRApproval
		{
			get
			{
				return this._JRApproval;
			}
			set
			{
				if ((this._JRApproval != value))
				{
					this.OnJRApprovalChanging(value);
					this.SendPropertyChanging();
					this._JRApproval = value;
					this.SendPropertyChanged("JRApproval");
					this.OnJRApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress", DbType="NVarChar(255)")]
		public string TempAddress
		{
			get
			{
				return this._TempAddress;
			}
			set
			{
				if ((this._TempAddress != value))
				{
					this.OnTempAddressChanging(value);
					this.SendPropertyChanging();
					this._TempAddress = value;
					this.SendPropertyChanged("TempAddress");
					this.OnTempAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempArea", DbType="NVarChar(30)")]
		public string TempArea
		{
			get
			{
				return this._TempArea;
			}
			set
			{
				if ((this._TempArea != value))
				{
					this.OnTempAreaChanging(value);
					this.SendPropertyChanging();
					this._TempArea = value;
					this.SendPropertyChanged("TempArea");
					this.OnTempAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempDistrict", DbType="NVarChar(30)")]
		public string TempDistrict
		{
			get
			{
				return this._TempDistrict;
			}
			set
			{
				if ((this._TempDistrict != value))
				{
					this.OnTempDistrictChanging(value);
					this.SendPropertyChanging();
					this._TempDistrict = value;
					this.SendPropertyChanged("TempDistrict");
					this.OnTempDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCityProvince", DbType="NVarChar(30)")]
		public string TempCityProvince
		{
			get
			{
				return this._TempCityProvince;
			}
			set
			{
				if ((this._TempCityProvince != value))
				{
					this.OnTempCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._TempCityProvince = value;
					this.SendPropertyChanged("TempCityProvince");
					this.OnTempCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCountry", DbType="NVarChar(30)")]
		public string TempCountry
		{
			get
			{
				return this._TempCountry;
			}
			set
			{
				if ((this._TempCountry != value))
				{
					this.OnTempCountryChanging(value);
					this.SendPropertyChanging();
					this._TempCountry = value;
					this.SendPropertyChanged("TempCountry");
					this.OnTempCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(255)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentArea", DbType="NVarChar(30)")]
		public string PermanentArea
		{
			get
			{
				return this._PermanentArea;
			}
			set
			{
				if ((this._PermanentArea != value))
				{
					this.OnPermanentAreaChanging(value);
					this.SendPropertyChanging();
					this._PermanentArea = value;
					this.SendPropertyChanged("PermanentArea");
					this.OnPermanentAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentDistrict", DbType="NVarChar(30)")]
		public string PermanentDistrict
		{
			get
			{
				return this._PermanentDistrict;
			}
			set
			{
				if ((this._PermanentDistrict != value))
				{
					this.OnPermanentDistrictChanging(value);
					this.SendPropertyChanging();
					this._PermanentDistrict = value;
					this.SendPropertyChanged("PermanentDistrict");
					this.OnPermanentDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityProvince", DbType="NVarChar(30)")]
		public string PermanentCityProvince
		{
			get
			{
				return this._PermanentCityProvince;
			}
			set
			{
				if ((this._PermanentCityProvince != value))
				{
					this.OnPermanentCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._PermanentCityProvince = value;
					this.SendPropertyChanged("PermanentCityProvince");
					this.OnPermanentCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCountry", DbType="NVarChar(30)")]
		public string PermanentCountry
		{
			get
			{
				return this._PermanentCountry;
			}
			set
			{
				if ((this._PermanentCountry != value))
				{
					this.OnPermanentCountryChanging(value);
					this.SendPropertyChanging();
					this._PermanentCountry = value;
					this.SendPropertyChanged("PermanentCountry");
					this.OnPermanentCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalEmail", DbType="NVarChar(50)")]
		public string PersonalEmail
		{
			get
			{
				return this._PersonalEmail;
			}
			set
			{
				if ((this._PersonalEmail != value))
				{
					this.OnPersonalEmailChanging(value);
					this.SendPropertyChanging();
					this._PersonalEmail = value;
					this.SendPropertyChanged("PersonalEmail");
					this.OnPersonalEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(50)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this.OnOfficeEmailChanging(value);
					this.SendPropertyChanging();
					this._OfficeEmail = value;
					this.SendPropertyChanged("OfficeEmail");
					this.OnOfficeEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(10)")]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this.OnExtensionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExtensionNumber = value;
					this.SendPropertyChanged("ExtensionNumber");
					this.OnExtensionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPOB", DbType="NVarChar(50)")]
		public string VnPOB
		{
			get
			{
				return this._VnPOB;
			}
			set
			{
				if ((this._VnPOB != value))
				{
					this.OnVnPOBChanging(value);
					this.SendPropertyChanging();
					this._VnPOB = value;
					this.SendPropertyChanged("VnPOB");
					this.OnVnPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="NVarChar(50)")]
		public string POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this.OnPOBChanging(value);
					this.SendPropertyChanging();
					this._POB = value;
					this.SendPropertyChanged("POB");
					this.OnPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(30)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this.OnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfOrigin = value;
					this.SendPropertyChanged("PlaceOfOrigin");
					this.OnPlaceOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPlaceOfOrigin", DbType="NVarChar(100)")]
		public string VnPlaceOfOrigin
		{
			get
			{
				return this._VnPlaceOfOrigin;
			}
			set
			{
				if ((this._VnPlaceOfOrigin != value))
				{
					this.OnVnPlaceOfOriginChanging(value);
					this.SendPropertyChanging();
					this._VnPlaceOfOrigin = value;
					this.SendPropertyChanged("VnPlaceOfOrigin");
					this.OnVnPlaceOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="NVarChar(20)")]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(20)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this.OnResignedDateChanging(value);
					this.SendPropertyChanging();
					this._ResignedDate = value;
					this.SendPropertyChanged("ResignedDate");
					this.OnResignedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this.OnResignedReasonChanging(value);
					this.SendPropertyChanging();
					this._ResignedReason = value;
					this.SendPropertyChanged("ResignedReason");
					this.OnResignedReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedAllowance", DbType="Float")]
		public System.Nullable<double> ResignedAllowance
		{
			get
			{
				return this._ResignedAllowance;
			}
			set
			{
				if ((this._ResignedAllowance != value))
				{
					this.OnResignedAllowanceChanging(value);
					this.SendPropertyChanging();
					this._ResignedAllowance = value;
					this.SendPropertyChanged("ResignedAllowance");
					this.OnResignedAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnion", DbType="Bit")]
		public System.Nullable<bool> LaborUnion
		{
			get
			{
				return this._LaborUnion;
			}
			set
			{
				if ((this._LaborUnion != value))
				{
					this.OnLaborUnionChanging(value);
					this.SendPropertyChanging();
					this._LaborUnion = value;
					this.SendPropertyChanged("LaborUnion");
					this.OnLaborUnionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaborUnionDate
		{
			get
			{
				return this._LaborUnionDate;
			}
			set
			{
				if ((this._LaborUnionDate != value))
				{
					this.OnLaborUnionDateChanging(value);
					this.SendPropertyChanging();
					this._LaborUnionDate = value;
					this.SendPropertyChanged("LaborUnionDate");
					this.OnLaborUnionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedStatus", DbType="Bit")]
		public System.Nullable<bool> MarriedStatus
		{
			get
			{
				return this._MarriedStatus;
			}
			set
			{
				if ((this._MarriedStatus != value))
				{
					this.OnMarriedStatusChanging(value);
					this.SendPropertyChanging();
					this._MarriedStatus = value;
					this.SendPropertyChanged("MarriedStatus");
					this.OnMarriedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(20)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(50)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this.OnEmergencyContactNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactName = value;
					this.SendPropertyChanged("EmergencyContactName");
					this.OnEmergencyContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(20)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this.OnEmergencyContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactPhone = value;
					this.SendPropertyChanged("EmergencyContactPhone");
					this.OnEmergencyContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactRelationship", DbType="NVarChar(50)")]
		public string EmergencyContactRelationship
		{
			get
			{
				return this._EmergencyContactRelationship;
			}
			set
			{
				if ((this._EmergencyContactRelationship != value))
				{
					this.OnEmergencyContactRelationshipChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactRelationship = value;
					this.SendPropertyChanged("EmergencyContactRelationship");
					this.OnEmergencyContactRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(200)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDegree", DbType="NVarChar(200)")]
		public string OtherDegree
		{
			get
			{
				return this._OtherDegree;
			}
			set
			{
				if ((this._OtherDegree != value))
				{
					this.OnOtherDegreeChanging(value);
					this.SendPropertyChanging();
					this._OtherDegree = value;
					this.SendPropertyChanged("OtherDegree");
					this.OnOtherDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIssueLocation", DbType="NVarChar(200)")]
		public string IDIssueLocation
		{
			get
			{
				return this._IDIssueLocation;
			}
			set
			{
				if ((this._IDIssueLocation != value))
				{
					this.OnIDIssueLocationChanging(value);
					this.SendPropertyChanging();
					this._IDIssueLocation = value;
					this.SendPropertyChanged("IDIssueLocation");
					this.OnIDIssueLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnIDIssueLocation", DbType="NVarChar(200)")]
		public string VnIDIssueLocation
		{
			get
			{
				return this._VnIDIssueLocation;
			}
			set
			{
				if ((this._VnIDIssueLocation != value))
				{
					this.OnVnIDIssueLocationChanging(value);
					this.SendPropertyChanging();
					this._VnIDIssueLocation = value;
					this.SendPropertyChanged("VnIDIssueLocation");
					this.OnVnIDIssueLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeId", DbType="NVarChar(50)")]
		public string SkypeId
		{
			get
			{
				return this._SkypeId;
			}
			set
			{
				if ((this._SkypeId != value))
				{
					this.OnSkypeIdChanging(value);
					this.SendPropertyChanging();
					this._SkypeId = value;
					this.SendPropertyChanged("SkypeId");
					this.OnSkypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YahooId", DbType="NVarChar(50)")]
		public string YahooId
		{
			get
			{
				return this._YahooId;
			}
			set
			{
				if ((this._YahooId != value))
				{
					this.OnYahooIdChanging(value);
					this.SendPropertyChanging();
					this._YahooId = value;
					this.SendPropertyChanged("YahooId");
					this.OnYahooIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCode", DbType="NVarChar(10)")]
		public string SeatCode
		{
			get
			{
				return this._SeatCode;
			}
			set
			{
				if ((this._SeatCode != value))
				{
					this.OnSeatCodeChanging(value);
					this.SendPropertyChanging();
					this._SeatCode = value;
					this.SendPropertyChanged("SeatCode");
					this.OnSeatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempAddress", DbType="NVarChar(255)")]
		public string VnTempAddress
		{
			get
			{
				return this._VnTempAddress;
			}
			set
			{
				if ((this._VnTempAddress != value))
				{
					this.OnVnTempAddressChanging(value);
					this.SendPropertyChanging();
					this._VnTempAddress = value;
					this.SendPropertyChanged("VnTempAddress");
					this.OnVnTempAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempArea", DbType="NVarChar(30)")]
		public string VnTempArea
		{
			get
			{
				return this._VnTempArea;
			}
			set
			{
				if ((this._VnTempArea != value))
				{
					this.OnVnTempAreaChanging(value);
					this.SendPropertyChanging();
					this._VnTempArea = value;
					this.SendPropertyChanged("VnTempArea");
					this.OnVnTempAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempDistrict", DbType="NVarChar(30)")]
		public string VnTempDistrict
		{
			get
			{
				return this._VnTempDistrict;
			}
			set
			{
				if ((this._VnTempDistrict != value))
				{
					this.OnVnTempDistrictChanging(value);
					this.SendPropertyChanging();
					this._VnTempDistrict = value;
					this.SendPropertyChanged("VnTempDistrict");
					this.OnVnTempDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCityProvince", DbType="NVarChar(30)")]
		public string VnTempCityProvince
		{
			get
			{
				return this._VnTempCityProvince;
			}
			set
			{
				if ((this._VnTempCityProvince != value))
				{
					this.OnVnTempCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._VnTempCityProvince = value;
					this.SendPropertyChanged("VnTempCityProvince");
					this.OnVnTempCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCountry", DbType="NVarChar(30)")]
		public string VnTempCountry
		{
			get
			{
				return this._VnTempCountry;
			}
			set
			{
				if ((this._VnTempCountry != value))
				{
					this.OnVnTempCountryChanging(value);
					this.SendPropertyChanging();
					this._VnTempCountry = value;
					this.SendPropertyChanged("VnTempCountry");
					this.OnVnTempCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentAddress", DbType="NVarChar(255)")]
		public string VnPermanentAddress
		{
			get
			{
				return this._VnPermanentAddress;
			}
			set
			{
				if ((this._VnPermanentAddress != value))
				{
					this.OnVnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentAddress = value;
					this.SendPropertyChanged("VnPermanentAddress");
					this.OnVnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentArea", DbType="NVarChar(30)")]
		public string VnPermanentArea
		{
			get
			{
				return this._VnPermanentArea;
			}
			set
			{
				if ((this._VnPermanentArea != value))
				{
					this.OnVnPermanentAreaChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentArea = value;
					this.SendPropertyChanged("VnPermanentArea");
					this.OnVnPermanentAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentDistrict", DbType="NVarChar(30)")]
		public string VnPermanentDistrict
		{
			get
			{
				return this._VnPermanentDistrict;
			}
			set
			{
				if ((this._VnPermanentDistrict != value))
				{
					this.OnVnPermanentDistrictChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentDistrict = value;
					this.SendPropertyChanged("VnPermanentDistrict");
					this.OnVnPermanentDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCityProvince", DbType="NVarChar(30)")]
		public string VnPermanentCityProvince
		{
			get
			{
				return this._VnPermanentCityProvince;
			}
			set
			{
				if ((this._VnPermanentCityProvince != value))
				{
					this.OnVnPermanentCityProvinceChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentCityProvince = value;
					this.SendPropertyChanged("VnPermanentCityProvince");
					this.OnVnPermanentCityProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCountry", DbType="NVarChar(30)")]
		public string VnPermanentCountry
		{
			get
			{
				return this._VnPermanentCountry;
			}
			set
			{
				if ((this._VnPermanentCountry != value))
				{
					this.OnVnPermanentCountryChanging(value);
					this.SendPropertyChanging();
					this._VnPermanentCountry = value;
					this.SendPropertyChanged("VnPermanentCountry");
					this.OnVnPermanentCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this.OnCVFileChanging(value);
					this.SendPropertyChanging();
					this._CVFile = value;
					this.SendPropertyChanged("CVFile");
					this.OnCVFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STTStatusId", DbType="Int NOT NULL")]
		public int STTStatusId
		{
			get
			{
				return this._STTStatusId;
			}
			set
			{
				if ((this._STTStatusId != value))
				{
					if (this._STT_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTTStatusIdChanging(value);
					this.SendPropertyChanging();
					this._STTStatusId = value;
					this.SendPropertyChanged("STTStatusId");
					this.OnSTTStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int")]
		public System.Nullable<int> ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					if (this._STT_Result.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultIdChanging(value);
					this.SendPropertyChanging();
					this._ResultId = value;
					this.SendPropertyChanged("ResultId");
					this.OnResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateID", DbType="NVarChar(10)")]
		public string CandidateID
		{
			get
			{
				return this._CandidateID;
			}
			set
			{
				if ((this._CandidateID != value))
				{
					this.OnCandidateIDChanging(value);
					this.SendPropertyChanging();
					this._CandidateID = value;
					this.SendPropertyChanged("CandidateID");
					this.OnCandidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_STT_RefResult", Storage="_STT_RefResults", ThisKey="ID", OtherKey="SttID")]
		public EntitySet<STT_RefResult> STT_RefResults
		{
			get
			{
				return this._STT_RefResults;
			}
			set
			{
				this._STT_RefResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_STT", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.STTs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.STTs.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_STT", Storage="_Employee", ThisKey="ManagerId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.STTs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.STTs.Add(this);
						this._ManagerId = value.ID;
					}
					else
					{
						this._ManagerId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Result_STT", Storage="_STT_Result", ThisKey="ResultId", OtherKey="ID", IsForeignKey=true)]
		public STT_Result STT_Result
		{
			get
			{
				return this._STT_Result.Entity;
			}
			set
			{
				STT_Result previousValue = this._STT_Result.Entity;
				if (((previousValue != value) 
							|| (this._STT_Result.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STT_Result.Entity = null;
						previousValue.STTs.Remove(this);
					}
					this._STT_Result.Entity = value;
					if ((value != null))
					{
						value.STTs.Add(this);
						this._ResultId = value.ID;
					}
					else
					{
						this._ResultId = default(Nullable<int>);
					}
					this.SendPropertyChanged("STT_Result");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Status_STT", Storage="_STT_Status", ThisKey="STTStatusId", OtherKey="ID", IsForeignKey=true)]
		public STT_Status STT_Status
		{
			get
			{
				return this._STT_Status.Entity;
			}
			set
			{
				STT_Status previousValue = this._STT_Status.Entity;
				if (((previousValue != value) 
							|| (this._STT_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STT_Status.Entity = null;
						previousValue.STTs.Remove(this);
					}
					this._STT_Status.Entity = value;
					if ((value != null))
					{
						value.STTs.Add(this);
						this._STTStatusId = value.ID;
					}
					else
					{
						this._STTStatusId = default(int);
					}
					this.SendPropertyChanged("STT_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STT_RefResults(STT_RefResult entity)
		{
			this.SendPropertyChanging();
			entity.STT = this;
		}
		
		private void detach_STT_RefResults(STT_RefResult entity)
		{
			this.SendPropertyChanging();
			entity.STT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STT_RefResult")]
	public partial class STT_RefResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SttID;
		
		private int _ResultId;
		
		private System.DateTime _EndDate;
		
		private string _Remarks;
		
		private string _Attachfile;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private string _UpdatedBy;
		
		private EntityRef<STT> _STT;
		
		private EntityRef<STT_Result> _STT_Result;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSttIDChanging(string value);
    partial void OnSttIDChanged();
    partial void OnResultIdChanging(int value);
    partial void OnResultIdChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAttachfileChanging(string value);
    partial void OnAttachfileChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public STT_RefResult()
		{
			this._STT = default(EntityRef<STT>);
			this._STT_Result = default(EntityRef<STT_Result>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SttID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SttID
		{
			get
			{
				return this._SttID;
			}
			set
			{
				if ((this._SttID != value))
				{
					if (this._STT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSttIDChanging(value);
					this.SendPropertyChanging();
					this._SttID = value;
					this.SendPropertyChanged("SttID");
					this.OnSttIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int NOT NULL")]
		public int ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					if (this._STT_Result.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultIdChanging(value);
					this.SendPropertyChanging();
					this._ResultId = value;
					this.SendPropertyChanged("ResultId");
					this.OnResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(254)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachfile", DbType="NVarChar(1000)")]
		public string Attachfile
		{
			get
			{
				return this._Attachfile;
			}
			set
			{
				if ((this._Attachfile != value))
				{
					this.OnAttachfileChanging(value);
					this.SendPropertyChanging();
					this._Attachfile = value;
					this.SendPropertyChanged("Attachfile");
					this.OnAttachfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_STT_RefResult", Storage="_STT", ThisKey="SttID", OtherKey="ID", IsForeignKey=true)]
		public STT STT
		{
			get
			{
				return this._STT.Entity;
			}
			set
			{
				STT previousValue = this._STT.Entity;
				if (((previousValue != value) 
							|| (this._STT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STT.Entity = null;
						previousValue.STT_RefResults.Remove(this);
					}
					this._STT.Entity = value;
					if ((value != null))
					{
						value.STT_RefResults.Add(this);
						this._SttID = value.ID;
					}
					else
					{
						this._SttID = default(string);
					}
					this.SendPropertyChanged("STT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Result_STT_RefResult", Storage="_STT_Result", ThisKey="ResultId", OtherKey="ID", IsForeignKey=true)]
		public STT_Result STT_Result
		{
			get
			{
				return this._STT_Result.Entity;
			}
			set
			{
				STT_Result previousValue = this._STT_Result.Entity;
				if (((previousValue != value) 
							|| (this._STT_Result.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STT_Result.Entity = null;
						previousValue.STT_RefResults.Remove(this);
					}
					this._STT_Result.Entity = value;
					if ((value != null))
					{
						value.STT_RefResults.Add(this);
						this._ResultId = value.ID;
					}
					else
					{
						this._ResultId = default(int);
					}
					this.SendPropertyChanged("STT_Result");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STT_Result")]
	public partial class STT_Result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<STT> _STTs;
		
		private EntitySet<STT_RefResult> _STT_RefResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public STT_Result()
		{
			this._STTs = new EntitySet<STT>(new Action<STT>(this.attach_STTs), new Action<STT>(this.detach_STTs));
			this._STT_RefResults = new EntitySet<STT_RefResult>(new Action<STT_RefResult>(this.attach_STT_RefResults), new Action<STT_RefResult>(this.detach_STT_RefResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Result_STT", Storage="_STTs", ThisKey="ID", OtherKey="ResultId")]
		public EntitySet<STT> STTs
		{
			get
			{
				return this._STTs;
			}
			set
			{
				this._STTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Result_STT_RefResult", Storage="_STT_RefResults", ThisKey="ID", OtherKey="ResultId")]
		public EntitySet<STT_RefResult> STT_RefResults
		{
			get
			{
				return this._STT_RefResults;
			}
			set
			{
				this._STT_RefResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.STT_Result = this;
		}
		
		private void detach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.STT_Result = null;
		}
		
		private void attach_STT_RefResults(STT_RefResult entity)
		{
			this.SendPropertyChanging();
			entity.STT_Result = this;
		}
		
		private void detach_STT_RefResults(STT_RefResult entity)
		{
			this.SendPropertyChanging();
			entity.STT_Result = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STT_Status")]
	public partial class STT_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<STT> _STTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public STT_Status()
		{
			this._STTs = new EntitySet<STT>(new Action<STT>(this.attach_STTs), new Action<STT>(this.detach_STTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STT_Status_STT", Storage="_STTs", ThisKey="ID", OtherKey="STTStatusId")]
		public EntitySet<STT> STTs
		{
			get
			{
				return this._STTs;
			}
			set
			{
				this._STTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.STT_Status = this;
		}
		
		private void detach_STTs(STT entity)
		{
			this.SendPropertyChanging();
			entity.STT_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Attendees")]
	public partial class Training_Attendee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassId;
		
		private string _EmpId;
		
		private string _Result;
		
		private string _Remark;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnEmpIdChanging(string value);
    partial void OnEmpIdChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_Attendee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_CertificationMaster")]
	public partial class Training_CertificationMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Employee_Certification> _Employee_Certifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_CertificationMaster()
		{
			this._Employee_Certifications = new EntitySet<Employee_Certification>(new Action<Employee_Certification>(this.attach_Employee_Certifications), new Action<Employee_Certification>(this.detach_Employee_Certifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_CertificationMaster_Employee_Certification", Storage="_Employee_Certifications", ThisKey="ID", OtherKey="CertificationId")]
		public EntitySet<Employee_Certification> Employee_Certifications
		{
			get
			{
				return this._Employee_Certifications;
			}
			set
			{
				this._Employee_Certifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_Certifications(Employee_Certification entity)
		{
			this.SendPropertyChanging();
			entity.Training_CertificationMaster = this;
		}
		
		private void detach_Employee_Certifications(Employee_Certification entity)
		{
			this.SendPropertyChanging();
			entity.Training_CertificationMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Class")]
	public partial class Training_Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ClassId;
		
		private int _CourseId;
		
		private int _RegStatusId;
		
		private System.DateTime _StartDate;
		
		private string _Instructors;
		
		private System.Nullable<int> _AttendeeQuantity;
		
		private bool _Active;
		
		private string _ClassTime;
		
		private string _Notes;
		
		private System.Nullable<int> _ResultType;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Training_Course> _Training_Course;
		
		private EntityRef<Training_RegStatus> _Training_RegStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClassIdChanging(string value);
    partial void OnClassIdChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnRegStatusIdChanging(int value);
    partial void OnRegStatusIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnInstructorsChanging(string value);
    partial void OnInstructorsChanged();
    partial void OnAttendeeQuantityChanging(System.Nullable<int> value);
    partial void OnAttendeeQuantityChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnClassTimeChanging(string value);
    partial void OnClassTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_Class()
		{
			this._Training_Course = default(EntityRef<Training_Course>);
			this._Training_RegStatus = default(EntityRef<Training_RegStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._Training_Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegStatusId", DbType="Int NOT NULL")]
		public int RegStatusId
		{
			get
			{
				return this._RegStatusId;
			}
			set
			{
				if ((this._RegStatusId != value))
				{
					if (this._Training_RegStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegStatusIdChanging(value);
					this.SendPropertyChanging();
					this._RegStatusId = value;
					this.SendPropertyChanged("RegStatusId");
					this.OnRegStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructors", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				if ((this._Instructors != value))
				{
					this.OnInstructorsChanging(value);
					this.SendPropertyChanging();
					this._Instructors = value;
					this.SendPropertyChanged("Instructors");
					this.OnInstructorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendeeQuantity", DbType="Int")]
		public System.Nullable<int> AttendeeQuantity
		{
			get
			{
				return this._AttendeeQuantity;
			}
			set
			{
				if ((this._AttendeeQuantity != value))
				{
					this.OnAttendeeQuantityChanging(value);
					this.SendPropertyChanging();
					this._AttendeeQuantity = value;
					this.SendPropertyChanged("AttendeeQuantity");
					this.OnAttendeeQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTime", DbType="NVarChar(100)")]
		public string ClassTime
		{
			get
			{
				return this._ClassTime;
			}
			set
			{
				if ((this._ClassTime != value))
				{
					this.OnClassTimeChanging(value);
					this.SendPropertyChanging();
					this._ClassTime = value;
					this.SendPropertyChanged("ClassTime");
					this.OnClassTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Course_Training_Class", Storage="_Training_Course", ThisKey="CourseId", OtherKey="ID", IsForeignKey=true)]
		public Training_Course Training_Course
		{
			get
			{
				return this._Training_Course.Entity;
			}
			set
			{
				Training_Course previousValue = this._Training_Course.Entity;
				if (((previousValue != value) 
							|| (this._Training_Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Course.Entity = null;
						previousValue.Training_Classes.Remove(this);
					}
					this._Training_Course.Entity = value;
					if ((value != null))
					{
						value.Training_Classes.Add(this);
						this._CourseId = value.ID;
					}
					else
					{
						this._CourseId = default(int);
					}
					this.SendPropertyChanged("Training_Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_RegStatus_Training_Class", Storage="_Training_RegStatus", ThisKey="RegStatusId", OtherKey="ID", IsForeignKey=true)]
		public Training_RegStatus Training_RegStatus
		{
			get
			{
				return this._Training_RegStatus.Entity;
			}
			set
			{
				Training_RegStatus previousValue = this._Training_RegStatus.Entity;
				if (((previousValue != value) 
							|| (this._Training_RegStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_RegStatus.Entity = null;
						previousValue.Training_Classes.Remove(this);
					}
					this._Training_RegStatus.Entity = value;
					if ((value != null))
					{
						value.Training_Classes.Add(this);
						this._RegStatusId = value.ID;
					}
					else
					{
						this._RegStatusId = default(int);
					}
					this.SendPropertyChanged("Training_RegStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Courses")]
	public partial class Training_Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CourseId;
		
		private string _Name;
		
		private int _TypeOfCourse;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<int> _StatusId;
		
		private bool _Active;
		
		private System.Nullable<double> _Duration;
		
		private string _Objectives;
		
		private string _Overview;
		
		private string _Requirements;
		
		private string _KeyTrainers;
		
		private string _Notes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<Training_Class> _Training_Classes;
		
		private EntitySet<Training_Material> _Training_Materials;
		
		private EntityRef<Training_SkillType> _Training_SkillType;
		
		private EntityRef<Training_Status> _Training_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseIdChanging(string value);
    partial void OnCourseIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeOfCourseChanging(int value);
    partial void OnTypeOfCourseChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDurationChanging(System.Nullable<double> value);
    partial void OnDurationChanged();
    partial void OnObjectivesChanging(string value);
    partial void OnObjectivesChanged();
    partial void OnOverviewChanging(string value);
    partial void OnOverviewChanged();
    partial void OnRequirementsChanging(string value);
    partial void OnRequirementsChanged();
    partial void OnKeyTrainersChanging(string value);
    partial void OnKeyTrainersChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_Course()
		{
			this._Training_Classes = new EntitySet<Training_Class>(new Action<Training_Class>(this.attach_Training_Classes), new Action<Training_Class>(this.detach_Training_Classes));
			this._Training_Materials = new EntitySet<Training_Material>(new Action<Training_Material>(this.attach_Training_Materials), new Action<Training_Material>(this.detach_Training_Materials));
			this._Training_SkillType = default(EntityRef<Training_SkillType>);
			this._Training_Status = default(EntityRef<Training_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfCourse", DbType="Int NOT NULL")]
		public int TypeOfCourse
		{
			get
			{
				return this._TypeOfCourse;
			}
			set
			{
				if ((this._TypeOfCourse != value))
				{
					this.OnTypeOfCourseChanging(value);
					this.SendPropertyChanging();
					this._TypeOfCourse = value;
					this.SendPropertyChanged("TypeOfCourse");
					this.OnTypeOfCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._Training_SkillType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._Training_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="NVarChar(1000)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this.OnObjectivesChanging(value);
					this.SendPropertyChanging();
					this._Objectives = value;
					this.SendPropertyChanged("Objectives");
					this.OnObjectivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="NVarChar(1000)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this.OnOverviewChanging(value);
					this.SendPropertyChanging();
					this._Overview = value;
					this.SendPropertyChanged("Overview");
					this.OnOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="NVarChar(1000)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this.OnRequirementsChanging(value);
					this.SendPropertyChanging();
					this._Requirements = value;
					this.SendPropertyChanged("Requirements");
					this.OnRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyTrainers", DbType="NVarChar(1000)")]
		public string KeyTrainers
		{
			get
			{
				return this._KeyTrainers;
			}
			set
			{
				if ((this._KeyTrainers != value))
				{
					this.OnKeyTrainersChanging(value);
					this.SendPropertyChanging();
					this._KeyTrainers = value;
					this.SendPropertyChanged("KeyTrainers");
					this.OnKeyTrainersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Course_Training_Class", Storage="_Training_Classes", ThisKey="ID", OtherKey="CourseId")]
		public EntitySet<Training_Class> Training_Classes
		{
			get
			{
				return this._Training_Classes;
			}
			set
			{
				this._Training_Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Course_Training_Material", Storage="_Training_Materials", ThisKey="ID", OtherKey="CourseId")]
		public EntitySet<Training_Material> Training_Materials
		{
			get
			{
				return this._Training_Materials;
			}
			set
			{
				this._Training_Materials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_SkillType_Training_Course", Storage="_Training_SkillType", ThisKey="TypeId", OtherKey="ID", IsForeignKey=true)]
		public Training_SkillType Training_SkillType
		{
			get
			{
				return this._Training_SkillType.Entity;
			}
			set
			{
				Training_SkillType previousValue = this._Training_SkillType.Entity;
				if (((previousValue != value) 
							|| (this._Training_SkillType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_SkillType.Entity = null;
						previousValue.Training_Courses.Remove(this);
					}
					this._Training_SkillType.Entity = value;
					if ((value != null))
					{
						value.Training_Courses.Add(this);
						this._TypeId = value.ID;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Training_SkillType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Status_Training_Course", Storage="_Training_Status", ThisKey="StatusId", OtherKey="ID", IsForeignKey=true)]
		public Training_Status Training_Status
		{
			get
			{
				return this._Training_Status.Entity;
			}
			set
			{
				Training_Status previousValue = this._Training_Status.Entity;
				if (((previousValue != value) 
							|| (this._Training_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Status.Entity = null;
						previousValue.Training_Courses.Remove(this);
					}
					this._Training_Status.Entity = value;
					if ((value != null))
					{
						value.Training_Courses.Add(this);
						this._StatusId = value.ID;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Training_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_Classes(Training_Class entity)
		{
			this.SendPropertyChanging();
			entity.Training_Course = this;
		}
		
		private void detach_Training_Classes(Training_Class entity)
		{
			this.SendPropertyChanging();
			entity.Training_Course = null;
		}
		
		private void attach_Training_Materials(Training_Material entity)
		{
			this.SendPropertyChanging();
			entity.Training_Course = this;
		}
		
		private void detach_Training_Materials(Training_Material entity)
		{
			this.SendPropertyChanging();
			entity.Training_Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_CourseType")]
	public partial class Training_CourseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Training_CourseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_EmpEnglishInfo")]
	public partial class Training_EmpEnglishInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EmployeeId;
		
		private int _TypeId;
		
		private double _Score;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Notes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Training_MasterEnglishType> _Training_MasterEnglishType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnScoreChanging(double value);
    partial void OnScoreChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_EmpEnglishInfo()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Training_MasterEnglishType = default(EntityRef<Training_MasterEnglishType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._Training_MasterEnglishType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Training_EmpEnglishInfo", Storage="_Employee", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Training_EmpEnglishInfos.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Training_EmpEnglishInfos.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_MasterEnglishType_Training_EmpEnglishInfo", Storage="_Training_MasterEnglishType", ThisKey="TypeId", OtherKey="ID", IsForeignKey=true)]
		public Training_MasterEnglishType Training_MasterEnglishType
		{
			get
			{
				return this._Training_MasterEnglishType.Entity;
			}
			set
			{
				Training_MasterEnglishType previousValue = this._Training_MasterEnglishType.Entity;
				if (((previousValue != value) 
							|| (this._Training_MasterEnglishType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_MasterEnglishType.Entity = null;
						previousValue.Training_EmpEnglishInfos.Remove(this);
					}
					this._Training_MasterEnglishType.Entity = value;
					if ((value != null))
					{
						value.Training_EmpEnglishInfos.Add(this);
						this._TypeId = value.ID;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("Training_MasterEnglishType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_EnglishTitleMapping")]
	public partial class Training_EnglishTitleMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TitleId;
		
		private int _SkillMappingId;
		
		private int _VerbalMappingId;
		
		private EntityRef<JobTitleLevel> _JobTitleLevel;
		
		private EntityRef<Training_SkillMapping> _Training_SkillMapping;
		
		private EntityRef<Training_VerbalMapping> _Training_VerbalMapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleIdChanging(int value);
    partial void OnTitleIdChanged();
    partial void OnSkillMappingIdChanging(int value);
    partial void OnSkillMappingIdChanged();
    partial void OnVerbalMappingIdChanging(int value);
    partial void OnVerbalMappingIdChanged();
    #endregion
		
		public Training_EnglishTitleMapping()
		{
			this._JobTitleLevel = default(EntityRef<JobTitleLevel>);
			this._Training_SkillMapping = default(EntityRef<Training_SkillMapping>);
			this._Training_VerbalMapping = default(EntityRef<Training_VerbalMapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int NOT NULL")]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					if (this._JobTitleLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillMappingId", DbType="Int NOT NULL")]
		public int SkillMappingId
		{
			get
			{
				return this._SkillMappingId;
			}
			set
			{
				if ((this._SkillMappingId != value))
				{
					if (this._Training_SkillMapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkillMappingIdChanging(value);
					this.SendPropertyChanging();
					this._SkillMappingId = value;
					this.SendPropertyChanged("SkillMappingId");
					this.OnSkillMappingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalMappingId", DbType="Int NOT NULL")]
		public int VerbalMappingId
		{
			get
			{
				return this._VerbalMappingId;
			}
			set
			{
				if ((this._VerbalMappingId != value))
				{
					if (this._Training_VerbalMapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerbalMappingIdChanging(value);
					this.SendPropertyChanging();
					this._VerbalMappingId = value;
					this.SendPropertyChanged("VerbalMappingId");
					this.OnVerbalMappingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitleLevel_Training_EnglishTitleMapping", Storage="_JobTitleLevel", ThisKey="TitleId", OtherKey="ID", IsForeignKey=true)]
		public JobTitleLevel JobTitleLevel
		{
			get
			{
				return this._JobTitleLevel.Entity;
			}
			set
			{
				JobTitleLevel previousValue = this._JobTitleLevel.Entity;
				if (((previousValue != value) 
							|| (this._JobTitleLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitleLevel.Entity = null;
						previousValue.Training_EnglishTitleMappings.Remove(this);
					}
					this._JobTitleLevel.Entity = value;
					if ((value != null))
					{
						value.Training_EnglishTitleMappings.Add(this);
						this._TitleId = value.ID;
					}
					else
					{
						this._TitleId = default(int);
					}
					this.SendPropertyChanged("JobTitleLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_SkillMapping_Training_EnglishTitleMapping", Storage="_Training_SkillMapping", ThisKey="SkillMappingId", OtherKey="ID", IsForeignKey=true)]
		public Training_SkillMapping Training_SkillMapping
		{
			get
			{
				return this._Training_SkillMapping.Entity;
			}
			set
			{
				Training_SkillMapping previousValue = this._Training_SkillMapping.Entity;
				if (((previousValue != value) 
							|| (this._Training_SkillMapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_SkillMapping.Entity = null;
						previousValue.Training_EnglishTitleMappings.Remove(this);
					}
					this._Training_SkillMapping.Entity = value;
					if ((value != null))
					{
						value.Training_EnglishTitleMappings.Add(this);
						this._SkillMappingId = value.ID;
					}
					else
					{
						this._SkillMappingId = default(int);
					}
					this.SendPropertyChanged("Training_SkillMapping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_VerbalMapping_Training_EnglishTitleMapping", Storage="_Training_VerbalMapping", ThisKey="VerbalMappingId", OtherKey="ID", IsForeignKey=true)]
		public Training_VerbalMapping Training_VerbalMapping
		{
			get
			{
				return this._Training_VerbalMapping.Entity;
			}
			set
			{
				Training_VerbalMapping previousValue = this._Training_VerbalMapping.Entity;
				if (((previousValue != value) 
							|| (this._Training_VerbalMapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_VerbalMapping.Entity = null;
						previousValue.Training_EnglishTitleMappings.Remove(this);
					}
					this._Training_VerbalMapping.Entity = value;
					if ((value != null))
					{
						value.Training_EnglishTitleMappings.Add(this);
						this._VerbalMappingId = value.ID;
					}
					else
					{
						this._VerbalMappingId = default(int);
					}
					this.SendPropertyChanged("Training_VerbalMapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_MasterEnglishType")]
	public partial class Training_MasterEnglishType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Training_EmpEnglishInfo> _Training_EmpEnglishInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Training_MasterEnglishType()
		{
			this._Training_EmpEnglishInfos = new EntitySet<Training_EmpEnglishInfo>(new Action<Training_EmpEnglishInfo>(this.attach_Training_EmpEnglishInfos), new Action<Training_EmpEnglishInfo>(this.detach_Training_EmpEnglishInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_MasterEnglishType_Training_EmpEnglishInfo", Storage="_Training_EmpEnglishInfos", ThisKey="ID", OtherKey="TypeId")]
		public EntitySet<Training_EmpEnglishInfo> Training_EmpEnglishInfos
		{
			get
			{
				return this._Training_EmpEnglishInfos;
			}
			set
			{
				this._Training_EmpEnglishInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_EmpEnglishInfos(Training_EmpEnglishInfo entity)
		{
			this.SendPropertyChanging();
			entity.Training_MasterEnglishType = this;
		}
		
		private void detach_Training_EmpEnglishInfos(Training_EmpEnglishInfo entity)
		{
			this.SendPropertyChanging();
			entity.Training_MasterEnglishType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Material")]
	public partial class Training_Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TypeOfMaterial;
		
		private System.Nullable<int> _CourseId;
		
		private string _Category;
		
		private int _DisplayOrder;
		
		private string _UploadFile;
		
		private string _UploadFileDisplayName;
		
		private string _Title;
		
		private int _Permission;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Description;
		
		private int _DownloadTimes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Training_Course> _Training_Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeOfMaterialChanging(int value);
    partial void OnTypeOfMaterialChanged();
    partial void OnCourseIdChanging(System.Nullable<int> value);
    partial void OnCourseIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnUploadFileChanging(string value);
    partial void OnUploadFileChanged();
    partial void OnUploadFileDisplayNameChanging(string value);
    partial void OnUploadFileDisplayNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPermissionChanging(int value);
    partial void OnPermissionChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDownloadTimesChanging(int value);
    partial void OnDownloadTimesChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Training_Material()
		{
			this._Training_Course = default(EntityRef<Training_Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfMaterial", DbType="Int NOT NULL")]
		public int TypeOfMaterial
		{
			get
			{
				return this._TypeOfMaterial;
			}
			set
			{
				if ((this._TypeOfMaterial != value))
				{
					this.OnTypeOfMaterialChanging(value);
					this.SendPropertyChanging();
					this._TypeOfMaterial = value;
					this.SendPropertyChanged("TypeOfMaterial");
					this.OnTypeOfMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int")]
		public System.Nullable<int> CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._Training_Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFile", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UploadFile
		{
			get
			{
				return this._UploadFile;
			}
			set
			{
				if ((this._UploadFile != value))
				{
					this.OnUploadFileChanging(value);
					this.SendPropertyChanging();
					this._UploadFile = value;
					this.SendPropertyChanged("UploadFile");
					this.OnUploadFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFileDisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UploadFileDisplayName
		{
			get
			{
				return this._UploadFileDisplayName;
			}
			set
			{
				if ((this._UploadFileDisplayName != value))
				{
					this.OnUploadFileDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._UploadFileDisplayName = value;
					this.SendPropertyChanged("UploadFileDisplayName");
					this.OnUploadFileDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="Int NOT NULL")]
		public int Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadTimes", DbType="Int NOT NULL")]
		public int DownloadTimes
		{
			get
			{
				return this._DownloadTimes;
			}
			set
			{
				if ((this._DownloadTimes != value))
				{
					this.OnDownloadTimesChanging(value);
					this.SendPropertyChanging();
					this._DownloadTimes = value;
					this.SendPropertyChanged("DownloadTimes");
					this.OnDownloadTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Course_Training_Material", Storage="_Training_Course", ThisKey="CourseId", OtherKey="ID", IsForeignKey=true)]
		public Training_Course Training_Course
		{
			get
			{
				return this._Training_Course.Entity;
			}
			set
			{
				Training_Course previousValue = this._Training_Course.Entity;
				if (((previousValue != value) 
							|| (this._Training_Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Course.Entity = null;
						previousValue.Training_Materials.Remove(this);
					}
					this._Training_Course.Entity = value;
					if ((value != null))
					{
						value.Training_Materials.Add(this);
						this._CourseId = value.ID;
					}
					else
					{
						this._CourseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Training_Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_RegStatus")]
	public partial class Training_RegStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Training_Class> _Training_Classes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Training_RegStatus()
		{
			this._Training_Classes = new EntitySet<Training_Class>(new Action<Training_Class>(this.attach_Training_Classes), new Action<Training_Class>(this.detach_Training_Classes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_RegStatus_Training_Class", Storage="_Training_Classes", ThisKey="ID", OtherKey="RegStatusId")]
		public EntitySet<Training_Class> Training_Classes
		{
			get
			{
				return this._Training_Classes;
			}
			set
			{
				this._Training_Classes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_Classes(Training_Class entity)
		{
			this.SendPropertyChanging();
			entity.Training_RegStatus = this;
		}
		
		private void detach_Training_Classes(Training_Class entity)
		{
			this.SendPropertyChanging();
			entity.Training_RegStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_SkillMapping")]
	public partial class Training_SkillMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private double _SkillLevel;
		
		private System.Nullable<int> _SkillTestFrom;
		
		private System.Nullable<int> _SkillTestTo;
		
		private System.Nullable<int> _ToeicTestFrom;
		
		private System.Nullable<int> _ToeicTestTo;
		
		private EntitySet<Training_EnglishTitleMapping> _Training_EnglishTitleMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkillLevelChanging(double value);
    partial void OnSkillLevelChanged();
    partial void OnSkillTestFromChanging(System.Nullable<int> value);
    partial void OnSkillTestFromChanged();
    partial void OnSkillTestToChanging(System.Nullable<int> value);
    partial void OnSkillTestToChanged();
    partial void OnToeicTestFromChanging(System.Nullable<int> value);
    partial void OnToeicTestFromChanged();
    partial void OnToeicTestToChanging(System.Nullable<int> value);
    partial void OnToeicTestToChanged();
    #endregion
		
		public Training_SkillMapping()
		{
			this._Training_EnglishTitleMappings = new EntitySet<Training_EnglishTitleMapping>(new Action<Training_EnglishTitleMapping>(this.attach_Training_EnglishTitleMappings), new Action<Training_EnglishTitleMapping>(this.detach_Training_EnglishTitleMappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillLevel", DbType="Float NOT NULL")]
		public double SkillLevel
		{
			get
			{
				return this._SkillLevel;
			}
			set
			{
				if ((this._SkillLevel != value))
				{
					this.OnSkillLevelChanging(value);
					this.SendPropertyChanging();
					this._SkillLevel = value;
					this.SendPropertyChanged("SkillLevel");
					this.OnSkillLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillTestFrom", DbType="Int")]
		public System.Nullable<int> SkillTestFrom
		{
			get
			{
				return this._SkillTestFrom;
			}
			set
			{
				if ((this._SkillTestFrom != value))
				{
					this.OnSkillTestFromChanging(value);
					this.SendPropertyChanging();
					this._SkillTestFrom = value;
					this.SendPropertyChanged("SkillTestFrom");
					this.OnSkillTestFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillTestTo", DbType="Int")]
		public System.Nullable<int> SkillTestTo
		{
			get
			{
				return this._SkillTestTo;
			}
			set
			{
				if ((this._SkillTestTo != value))
				{
					this.OnSkillTestToChanging(value);
					this.SendPropertyChanging();
					this._SkillTestTo = value;
					this.SendPropertyChanged("SkillTestTo");
					this.OnSkillTestToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToeicTestFrom", DbType="Int")]
		public System.Nullable<int> ToeicTestFrom
		{
			get
			{
				return this._ToeicTestFrom;
			}
			set
			{
				if ((this._ToeicTestFrom != value))
				{
					this.OnToeicTestFromChanging(value);
					this.SendPropertyChanging();
					this._ToeicTestFrom = value;
					this.SendPropertyChanged("ToeicTestFrom");
					this.OnToeicTestFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToeicTestTo", DbType="Int")]
		public System.Nullable<int> ToeicTestTo
		{
			get
			{
				return this._ToeicTestTo;
			}
			set
			{
				if ((this._ToeicTestTo != value))
				{
					this.OnToeicTestToChanging(value);
					this.SendPropertyChanging();
					this._ToeicTestTo = value;
					this.SendPropertyChanged("ToeicTestTo");
					this.OnToeicTestToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_SkillMapping_Training_EnglishTitleMapping", Storage="_Training_EnglishTitleMappings", ThisKey="ID", OtherKey="SkillMappingId")]
		public EntitySet<Training_EnglishTitleMapping> Training_EnglishTitleMappings
		{
			get
			{
				return this._Training_EnglishTitleMappings;
			}
			set
			{
				this._Training_EnglishTitleMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.Training_SkillMapping = this;
		}
		
		private void detach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.Training_SkillMapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_SkillType")]
	public partial class Training_SkillType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Training_Course> _Training_Courses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Training_SkillType()
		{
			this._Training_Courses = new EntitySet<Training_Course>(new Action<Training_Course>(this.attach_Training_Courses), new Action<Training_Course>(this.detach_Training_Courses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_SkillType_Training_Course", Storage="_Training_Courses", ThisKey="ID", OtherKey="TypeId")]
		public EntitySet<Training_Course> Training_Courses
		{
			get
			{
				return this._Training_Courses;
			}
			set
			{
				this._Training_Courses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_Courses(Training_Course entity)
		{
			this.SendPropertyChanging();
			entity.Training_SkillType = this;
		}
		
		private void detach_Training_Courses(Training_Course entity)
		{
			this.SendPropertyChanging();
			entity.Training_SkillType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Status")]
	public partial class Training_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Training_Course> _Training_Courses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Training_Status()
		{
			this._Training_Courses = new EntitySet<Training_Course>(new Action<Training_Course>(this.attach_Training_Courses), new Action<Training_Course>(this.detach_Training_Courses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_Status_Training_Course", Storage="_Training_Courses", ThisKey="ID", OtherKey="StatusId")]
		public EntitySet<Training_Course> Training_Courses
		{
			get
			{
				return this._Training_Courses;
			}
			set
			{
				this._Training_Courses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_Courses(Training_Course entity)
		{
			this.SendPropertyChanging();
			entity.Training_Status = this;
		}
		
		private void detach_Training_Courses(Training_Course entity)
		{
			this.SendPropertyChanging();
			entity.Training_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_VerbalMapping")]
	public partial class Training_VerbalMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private double _VerbalLevel;
		
		private System.Nullable<int> _ToeicTestFrom;
		
		private System.Nullable<int> _ToeicTestTo;
		
		private EntitySet<Training_EnglishTitleMapping> _Training_EnglishTitleMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVerbalLevelChanging(double value);
    partial void OnVerbalLevelChanged();
    partial void OnToeicTestFromChanging(System.Nullable<int> value);
    partial void OnToeicTestFromChanged();
    partial void OnToeicTestToChanging(System.Nullable<int> value);
    partial void OnToeicTestToChanged();
    #endregion
		
		public Training_VerbalMapping()
		{
			this._Training_EnglishTitleMappings = new EntitySet<Training_EnglishTitleMapping>(new Action<Training_EnglishTitleMapping>(this.attach_Training_EnglishTitleMappings), new Action<Training_EnglishTitleMapping>(this.detach_Training_EnglishTitleMappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalLevel", DbType="Float NOT NULL")]
		public double VerbalLevel
		{
			get
			{
				return this._VerbalLevel;
			}
			set
			{
				if ((this._VerbalLevel != value))
				{
					this.OnVerbalLevelChanging(value);
					this.SendPropertyChanging();
					this._VerbalLevel = value;
					this.SendPropertyChanged("VerbalLevel");
					this.OnVerbalLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToeicTestFrom", DbType="Int")]
		public System.Nullable<int> ToeicTestFrom
		{
			get
			{
				return this._ToeicTestFrom;
			}
			set
			{
				if ((this._ToeicTestFrom != value))
				{
					this.OnToeicTestFromChanging(value);
					this.SendPropertyChanging();
					this._ToeicTestFrom = value;
					this.SendPropertyChanged("ToeicTestFrom");
					this.OnToeicTestFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToeicTestTo", DbType="Int")]
		public System.Nullable<int> ToeicTestTo
		{
			get
			{
				return this._ToeicTestTo;
			}
			set
			{
				if ((this._ToeicTestTo != value))
				{
					this.OnToeicTestToChanging(value);
					this.SendPropertyChanging();
					this._ToeicTestTo = value;
					this.SendPropertyChanged("ToeicTestTo");
					this.OnToeicTestToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Training_VerbalMapping_Training_EnglishTitleMapping", Storage="_Training_EnglishTitleMappings", ThisKey="ID", OtherKey="VerbalMappingId")]
		public EntitySet<Training_EnglishTitleMapping> Training_EnglishTitleMappings
		{
			get
			{
				return this._Training_EnglishTitleMappings;
			}
			set
			{
				this._Training_EnglishTitleMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.Training_VerbalMapping = this;
		}
		
		private void detach_Training_EnglishTitleMappings(Training_EnglishTitleMapping entity)
		{
			this.SendPropertyChanging();
			entity.Training_VerbalMapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.University")]
	public partial class University : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private EntitySet<Candidate> _Candidates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public University()
		{
			this._Candidates = new EntitySet<Candidate>(new Action<Candidate>(this.attach_Candidates), new Action<Candidate>(this.detach_Candidates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Candidate", Storage="_Candidates", ThisKey="ID", OtherKey="UniversityId")]
		public EntitySet<Candidate> Candidates
		{
			get
			{
				return this._Candidates;
			}
			set
			{
				this._Candidates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Candidates(Candidate entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Group")]
	public partial class User_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserAdminId;
		
		private int _GroupId;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserAdminIdChanging(int value);
    partial void OnUserAdminIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public User_Group()
		{
			this._Group = default(EntityRef<Group>);
			this._UserAdmin = default(EntityRef<UserAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAdminIdChanging(value);
					this.SendPropertyChanging();
					this._UserAdminId = value;
					this.SendPropertyChanged("UserAdminId");
					this.OnUserAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User_Group", Storage="_Group", ThisKey="GroupId", OtherKey="GroupId", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.User_Groups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.User_Groups.Add(this);
						this._GroupId = value.GroupId;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_User_Group", Storage="_UserAdmin", ThisKey="UserAdminId", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.User_Groups.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.User_Groups.Add(this);
						this._UserAdminId = value.UserAdminId;
					}
					else
					{
						this._UserAdminId = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAdmin")]
	public partial class UserAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAdminId;
		
		private string _UserName;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<JobRequest> _JobRequests1;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests1;
		
		private EntitySet<PurchaseRequestApproval> _PurchaseRequestApprovals;
		
		private EntitySet<SR_Setting> _SR_Settings;
		
		private EntitySet<User_Group> _User_Groups;
		
		private EntitySet<UserAdmin_WFRole> _UserAdmin_WFRoles;
		
		private EntityRef<UserConfig> _UserConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminIdChanging(int value);
    partial void OnUserAdminIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public UserAdmin()
		{
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._JobRequests1 = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests1), new Action<JobRequest>(this.detach_JobRequests1));
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			this._PurchaseRequests1 = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests1), new Action<PurchaseRequest>(this.detach_PurchaseRequests1));
			this._PurchaseRequestApprovals = new EntitySet<PurchaseRequestApproval>(new Action<PurchaseRequestApproval>(this.attach_PurchaseRequestApprovals), new Action<PurchaseRequestApproval>(this.detach_PurchaseRequestApprovals));
			this._SR_Settings = new EntitySet<SR_Setting>(new Action<SR_Setting>(this.attach_SR_Settings), new Action<SR_Setting>(this.detach_SR_Settings));
			this._User_Groups = new EntitySet<User_Group>(new Action<User_Group>(this.attach_User_Groups), new Action<User_Group>(this.detach_User_Groups));
			this._UserAdmin_WFRoles = new EntitySet<UserAdmin_WFRole>(new Action<UserAdmin_WFRole>(this.attach_UserAdmin_WFRoles), new Action<UserAdmin_WFRole>(this.detach_UserAdmin_WFRoles));
			this._UserConfig = default(EntityRef<UserConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this.OnUserAdminIdChanging(value);
					this.SendPropertyChanging();
					this._UserAdminId = value;
					this.SendPropertyChanged("UserAdminId");
					this.OnUserAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_JobRequest", Storage="_JobRequests", ThisKey="UserAdminId", OtherKey="RequestorId")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_JobRequest1", Storage="_JobRequests1", ThisKey="UserAdminId", OtherKey="AssignID")]
		public EntitySet<JobRequest> JobRequests1
		{
			get
			{
				return this._JobRequests1;
			}
			set
			{
				this._JobRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="UserAdminId", OtherKey="AssignID")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequest1", Storage="_PurchaseRequests1", ThisKey="UserAdminId", OtherKey="Requestor")]
		public EntitySet<PurchaseRequest> PurchaseRequests1
		{
			get
			{
				return this._PurchaseRequests1;
			}
			set
			{
				this._PurchaseRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_PurchaseRequestApproval", Storage="_PurchaseRequestApprovals", ThisKey="UserAdminId", OtherKey="ApproverId")]
		public EntitySet<PurchaseRequestApproval> PurchaseRequestApprovals
		{
			get
			{
				return this._PurchaseRequestApprovals;
			}
			set
			{
				this._PurchaseRequestApprovals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_SR_Setting", Storage="_SR_Settings", ThisKey="UserAdminId", OtherKey="UserAdminID")]
		public EntitySet<SR_Setting> SR_Settings
		{
			get
			{
				return this._SR_Settings;
			}
			set
			{
				this._SR_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_User_Group", Storage="_User_Groups", ThisKey="UserAdminId", OtherKey="UserAdminId")]
		public EntitySet<User_Group> User_Groups
		{
			get
			{
				return this._User_Groups;
			}
			set
			{
				this._User_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_UserAdmin_WFRole", Storage="_UserAdmin_WFRoles", ThisKey="UserAdminId", OtherKey="UserAdminId")]
		public EntitySet<UserAdmin_WFRole> UserAdmin_WFRoles
		{
			get
			{
				return this._UserAdmin_WFRoles;
			}
			set
			{
				this._UserAdmin_WFRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_UserConfig", Storage="_UserConfig", ThisKey="UserAdminId", OtherKey="UserAdminID", IsUnique=true, IsForeignKey=false)]
		public UserConfig UserConfig
		{
			get
			{
				return this._UserConfig.Entity;
			}
			set
			{
				UserConfig previousValue = this._UserConfig.Entity;
				if (((previousValue != value) 
							|| (this._UserConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserConfig.Entity = null;
						previousValue.UserAdmin = null;
					}
					this._UserConfig.Entity = value;
					if ((value != null))
					{
						value.UserAdmin = this;
					}
					this.SendPropertyChanged("UserConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
		
		private void attach_JobRequests1(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin1 = this;
		}
		
		private void detach_JobRequests1(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin1 = null;
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
		
		private void attach_PurchaseRequests1(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin1 = this;
		}
		
		private void detach_PurchaseRequests1(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin1 = null;
		}
		
		private void attach_PurchaseRequestApprovals(PurchaseRequestApproval entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_PurchaseRequestApprovals(PurchaseRequestApproval entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
		
		private void attach_SR_Settings(SR_Setting entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_SR_Settings(SR_Setting entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
		
		private void attach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
		
		private void attach_UserAdmin_WFRoles(UserAdmin_WFRole entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = this;
		}
		
		private void detach_UserAdmin_WFRoles(UserAdmin_WFRole entity)
		{
			this.SendPropertyChanging();
			entity.UserAdmin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAdmin_WFRole")]
	public partial class UserAdmin_WFRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserAdminId;
		
		private int _WFRoleID;
		
		private bool _IsActive;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
		private EntityRef<WFRole> _WFRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserAdminIdChanging(int value);
    partial void OnUserAdminIdChanged();
    partial void OnWFRoleIDChanging(int value);
    partial void OnWFRoleIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public UserAdmin_WFRole()
		{
			this._UserAdmin = default(EntityRef<UserAdmin>);
			this._WFRole = default(EntityRef<WFRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAdminIdChanging(value);
					this.SendPropertyChanging();
					this._UserAdminId = value;
					this.SendPropertyChanged("UserAdminId");
					this.OnUserAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int NOT NULL")]
		public int WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					if (this._WFRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFRoleIDChanging(value);
					this.SendPropertyChanging();
					this._WFRoleID = value;
					this.SendPropertyChanged("WFRoleID");
					this.OnWFRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_UserAdmin_WFRole", Storage="_UserAdmin", ThisKey="UserAdminId", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.UserAdmin_WFRoles.Remove(this);
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.UserAdmin_WFRoles.Add(this);
						this._UserAdminId = value.UserAdminId;
					}
					else
					{
						this._UserAdminId = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_UserAdmin_WFRole", Storage="_WFRole", ThisKey="WFRoleID", OtherKey="ID", IsForeignKey=true)]
		public WFRole WFRole
		{
			get
			{
				return this._WFRole.Entity;
			}
			set
			{
				WFRole previousValue = this._WFRole.Entity;
				if (((previousValue != value) 
							|| (this._WFRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFRole.Entity = null;
						previousValue.UserAdmin_WFRoles.Remove(this);
					}
					this._WFRole.Entity = value;
					if ((value != null))
					{
						value.UserAdmin_WFRoles.Add(this);
						this._WFRoleID = value.ID;
					}
					else
					{
						this._WFRoleID = default(int);
					}
					this.SendPropertyChanged("WFRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserConfig")]
	public partial class UserConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAdminID;
		
		private bool _IsOff;
		
		private string _AutoReplyMessage;
		
		private EntityRef<UserAdmin> _UserAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminIDChanging(int value);
    partial void OnUserAdminIDChanged();
    partial void OnIsOffChanging(bool value);
    partial void OnIsOffChanged();
    partial void OnAutoReplyMessageChanging(string value);
    partial void OnAutoReplyMessageChanged();
    #endregion
		
		public UserConfig()
		{
			this._UserAdmin = default(EntityRef<UserAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserAdminID
		{
			get
			{
				return this._UserAdminID;
			}
			set
			{
				if ((this._UserAdminID != value))
				{
					if (this._UserAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAdminIDChanging(value);
					this.SendPropertyChanging();
					this._UserAdminID = value;
					this.SendPropertyChanged("UserAdminID");
					this.OnUserAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOff", DbType="Bit NOT NULL")]
		public bool IsOff
		{
			get
			{
				return this._IsOff;
			}
			set
			{
				if ((this._IsOff != value))
				{
					this.OnIsOffChanging(value);
					this.SendPropertyChanging();
					this._IsOff = value;
					this.SendPropertyChanged("IsOff");
					this.OnIsOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoReplyMessage", DbType="NVarChar(500)")]
		public string AutoReplyMessage
		{
			get
			{
				return this._AutoReplyMessage;
			}
			set
			{
				if ((this._AutoReplyMessage != value))
				{
					this.OnAutoReplyMessageChanging(value);
					this.SendPropertyChanging();
					this._AutoReplyMessage = value;
					this.SendPropertyChanged("AutoReplyMessage");
					this.OnAutoReplyMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAdmin_UserConfig", Storage="_UserAdmin", ThisKey="UserAdminID", OtherKey="UserAdminId", IsForeignKey=true)]
		public UserAdmin UserAdmin
		{
			get
			{
				return this._UserAdmin.Entity;
			}
			set
			{
				UserAdmin previousValue = this._UserAdmin.Entity;
				if (((previousValue != value) 
							|| (this._UserAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAdmin.Entity = null;
						previousValue.UserConfig = null;
					}
					this._UserAdmin.Entity = value;
					if ((value != null))
					{
						value.UserConfig = this;
						this._UserAdminID = value.UserAdminId;
					}
					else
					{
						this._UserAdminID = default(int);
					}
					this.SendPropertyChanged("UserAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFResolution")]
	public partial class WFResolution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WFID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CreateBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _DeletedFlag;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<PerformanceReview> _PerformanceReviews;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
		private EntitySet<WFResolution_WFStatus> _WFResolution_WFStatus;
		
		private EntitySet<WFRole_WFResolution> _WFRole_WFResolutions;
		
		private EntityRef<WorkFlow> _WorkFlow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWFIDChanging(int value);
    partial void OnWFIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeletedFlagChanging(bool value);
    partial void OnDeletedFlagChanged();
    #endregion
		
		public WFResolution()
		{
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._PerformanceReviews = new EntitySet<PerformanceReview>(new Action<PerformanceReview>(this.attach_PerformanceReviews), new Action<PerformanceReview>(this.detach_PerformanceReviews));
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			this._WFResolution_WFStatus = new EntitySet<WFResolution_WFStatus>(new Action<WFResolution_WFStatus>(this.attach_WFResolution_WFStatus), new Action<WFResolution_WFStatus>(this.detach_WFResolution_WFStatus));
			this._WFRole_WFResolutions = new EntitySet<WFRole_WFResolution>(new Action<WFRole_WFResolution>(this.attach_WFRole_WFResolutions), new Action<WFRole_WFResolution>(this.detach_WFRole_WFResolutions));
			this._WorkFlow = default(EntityRef<WorkFlow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="Int NOT NULL")]
		public int WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					if (this._WorkFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedFlag", DbType="Bit NOT NULL")]
		public bool DeletedFlag
		{
			get
			{
				return this._DeletedFlag;
			}
			set
			{
				if ((this._DeletedFlag != value))
				{
					this.OnDeletedFlagChanging(value);
					this.SendPropertyChanging();
					this._DeletedFlag = value;
					this.SendPropertyChanged("DeletedFlag");
					this.OnDeletedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_JobRequest", Storage="_JobRequests", ThisKey="ID", OtherKey="WFResolutionID")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_PerformanceReview", Storage="_PerformanceReviews", ThisKey="ID", OtherKey="WFResolutionID")]
		public EntitySet<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this._PerformanceReviews;
			}
			set
			{
				this._PerformanceReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="ID", OtherKey="WFResolutionID")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_WFResolution_WFStatus", Storage="_WFResolution_WFStatus", ThisKey="ID", OtherKey="WFResolutionID")]
		public EntitySet<WFResolution_WFStatus> WFResolution_WFStatus
		{
			get
			{
				return this._WFResolution_WFStatus;
			}
			set
			{
				this._WFResolution_WFStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_WFRole_WFResolution", Storage="_WFRole_WFResolutions", ThisKey="ID", OtherKey="WFResolutionID")]
		public EntitySet<WFRole_WFResolution> WFRole_WFResolutions
		{
			get
			{
				return this._WFRole_WFResolutions;
			}
			set
			{
				this._WFRole_WFResolutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlow_WFResolution", Storage="_WorkFlow", ThisKey="WFID", OtherKey="ID", IsForeignKey=true)]
		public WorkFlow WorkFlow
		{
			get
			{
				return this._WorkFlow.Entity;
			}
			set
			{
				WorkFlow previousValue = this._WorkFlow.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlow.Entity = null;
						previousValue.WFResolutions.Remove(this);
					}
					this._WorkFlow.Entity = value;
					if ((value != null))
					{
						value.WFResolutions.Add(this);
						this._WFID = value.ID;
					}
					else
					{
						this._WFID = default(int);
					}
					this.SendPropertyChanged("WorkFlow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = null;
		}
		
		private void attach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = this;
		}
		
		private void detach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = null;
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = null;
		}
		
		private void attach_WFResolution_WFStatus(WFResolution_WFStatus entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = this;
		}
		
		private void detach_WFResolution_WFStatus(WFResolution_WFStatus entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = null;
		}
		
		private void attach_WFRole_WFResolutions(WFRole_WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = this;
		}
		
		private void detach_WFRole_WFResolutions(WFRole_WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WFResolution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFResolution_WFStatus")]
	public partial class WFResolution_WFStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WFResolutionID;
		
		private int _WFStatusID;
		
		private EntityRef<WFResolution> _WFResolution;
		
		private EntityRef<WFStatus> _WFStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWFResolutionIDChanging(int value);
    partial void OnWFResolutionIDChanged();
    partial void OnWFStatusIDChanging(int value);
    partial void OnWFStatusIDChanged();
    #endregion
		
		public WFResolution_WFStatus()
		{
			this._WFResolution = default(EntityRef<WFResolution>);
			this._WFStatus = default(EntityRef<WFStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					if (this._WFResolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._WFResolutionID = value;
					this.SendPropertyChanged("WFResolutionID");
					this.OnWFResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					if (this._WFStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WFStatusID = value;
					this.SendPropertyChanged("WFStatusID");
					this.OnWFStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_WFResolution_WFStatus", Storage="_WFResolution", ThisKey="WFResolutionID", OtherKey="ID", IsForeignKey=true)]
		public WFResolution WFResolution
		{
			get
			{
				return this._WFResolution.Entity;
			}
			set
			{
				WFResolution previousValue = this._WFResolution.Entity;
				if (((previousValue != value) 
							|| (this._WFResolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFResolution.Entity = null;
						previousValue.WFResolution_WFStatus.Remove(this);
					}
					this._WFResolution.Entity = value;
					if ((value != null))
					{
						value.WFResolution_WFStatus.Add(this);
						this._WFResolutionID = value.ID;
					}
					else
					{
						this._WFResolutionID = default(int);
					}
					this.SendPropertyChanged("WFResolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_WFResolution_WFStatus", Storage="_WFStatus", ThisKey="WFStatusID", OtherKey="ID", IsForeignKey=true)]
		public WFStatus WFStatus
		{
			get
			{
				return this._WFStatus.Entity;
			}
			set
			{
				WFStatus previousValue = this._WFStatus.Entity;
				if (((previousValue != value) 
							|| (this._WFStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFStatus.Entity = null;
						previousValue.WFResolution_WFStatus.Remove(this);
					}
					this._WFStatus.Entity = value;
					if ((value != null))
					{
						value.WFResolution_WFStatus.Add(this);
						this._WFStatusID = value.ID;
					}
					else
					{
						this._WFStatusID = default(int);
					}
					this.SendPropertyChanged("WFStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFRole")]
	public partial class WFRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WFID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _DeleteFlag;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<PerformanceReview> _PerformanceReviews;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
		private EntitySet<UserAdmin_WFRole> _UserAdmin_WFRoles;
		
		private EntitySet<WFRole_WFResolution> _WFRole_WFResolutions;
		
		private EntityRef<WorkFlow> _WorkFlow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWFIDChanging(int value);
    partial void OnWFIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public WFRole()
		{
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._PerformanceReviews = new EntitySet<PerformanceReview>(new Action<PerformanceReview>(this.attach_PerformanceReviews), new Action<PerformanceReview>(this.detach_PerformanceReviews));
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			this._UserAdmin_WFRoles = new EntitySet<UserAdmin_WFRole>(new Action<UserAdmin_WFRole>(this.attach_UserAdmin_WFRoles), new Action<UserAdmin_WFRole>(this.detach_UserAdmin_WFRoles));
			this._WFRole_WFResolutions = new EntitySet<WFRole_WFResolution>(new Action<WFRole_WFResolution>(this.attach_WFRole_WFResolutions), new Action<WFRole_WFResolution>(this.detach_WFRole_WFResolutions));
			this._WorkFlow = default(EntityRef<WorkFlow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="Int NOT NULL")]
		public int WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					if (this._WorkFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_JobRequest", Storage="_JobRequests", ThisKey="ID", OtherKey="AssignRole")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_PerformanceReview", Storage="_PerformanceReviews", ThisKey="ID", OtherKey="AssignRole")]
		public EntitySet<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this._PerformanceReviews;
			}
			set
			{
				this._PerformanceReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="ID", OtherKey="AssignRole")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_UserAdmin_WFRole", Storage="_UserAdmin_WFRoles", ThisKey="ID", OtherKey="WFRoleID")]
		public EntitySet<UserAdmin_WFRole> UserAdmin_WFRoles
		{
			get
			{
				return this._UserAdmin_WFRoles;
			}
			set
			{
				this._UserAdmin_WFRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_WFRole_WFResolution", Storage="_WFRole_WFResolutions", ThisKey="ID", OtherKey="WFRoleID")]
		public EntitySet<WFRole_WFResolution> WFRole_WFResolutions
		{
			get
			{
				return this._WFRole_WFResolutions;
			}
			set
			{
				this._WFRole_WFResolutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlow_WFRole", Storage="_WorkFlow", ThisKey="WFID", OtherKey="ID", IsForeignKey=true)]
		public WorkFlow WorkFlow
		{
			get
			{
				return this._WorkFlow.Entity;
			}
			set
			{
				WorkFlow previousValue = this._WorkFlow.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlow.Entity = null;
						previousValue.WFRoles.Remove(this);
					}
					this._WorkFlow.Entity = value;
					if ((value != null))
					{
						value.WFRoles.Add(this);
						this._WFID = value.ID;
					}
					else
					{
						this._WFID = default(int);
					}
					this.SendPropertyChanged("WorkFlow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = null;
		}
		
		private void attach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = this;
		}
		
		private void detach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = null;
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = null;
		}
		
		private void attach_UserAdmin_WFRoles(UserAdmin_WFRole entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = this;
		}
		
		private void detach_UserAdmin_WFRoles(UserAdmin_WFRole entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = null;
		}
		
		private void attach_WFRole_WFResolutions(WFRole_WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = this;
		}
		
		private void detach_WFRole_WFResolutions(WFRole_WFResolution entity)
		{
			this.SendPropertyChanging();
			entity.WFRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFRole_WFResolution")]
	public partial class WFRole_WFResolution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WFRoleID;
		
		private int _WFResolutionID;
		
		private bool _IsHold;
		
		private EntityRef<WFResolution> _WFResolution;
		
		private EntityRef<WFRole> _WFRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWFRoleIDChanging(int value);
    partial void OnWFRoleIDChanged();
    partial void OnWFResolutionIDChanging(int value);
    partial void OnWFResolutionIDChanged();
    partial void OnIsHoldChanging(bool value);
    partial void OnIsHoldChanged();
    #endregion
		
		public WFRole_WFResolution()
		{
			this._WFResolution = default(EntityRef<WFResolution>);
			this._WFRole = default(EntityRef<WFRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					if (this._WFRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFRoleIDChanging(value);
					this.SendPropertyChanging();
					this._WFRoleID = value;
					this.SendPropertyChanged("WFRoleID");
					this.OnWFRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					if (this._WFResolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._WFResolutionID = value;
					this.SendPropertyChanged("WFResolutionID");
					this.OnWFResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHold", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool IsHold
		{
			get
			{
				return this._IsHold;
			}
			set
			{
				if ((this._IsHold != value))
				{
					this.OnIsHoldChanging(value);
					this.SendPropertyChanging();
					this._IsHold = value;
					this.SendPropertyChanged("IsHold");
					this.OnIsHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFResolution_WFRole_WFResolution", Storage="_WFResolution", ThisKey="WFResolutionID", OtherKey="ID", IsForeignKey=true)]
		public WFResolution WFResolution
		{
			get
			{
				return this._WFResolution.Entity;
			}
			set
			{
				WFResolution previousValue = this._WFResolution.Entity;
				if (((previousValue != value) 
							|| (this._WFResolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFResolution.Entity = null;
						previousValue.WFRole_WFResolutions.Remove(this);
					}
					this._WFResolution.Entity = value;
					if ((value != null))
					{
						value.WFRole_WFResolutions.Add(this);
						this._WFResolutionID = value.ID;
					}
					else
					{
						this._WFResolutionID = default(int);
					}
					this.SendPropertyChanged("WFResolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFRole_WFRole_WFResolution", Storage="_WFRole", ThisKey="WFRoleID", OtherKey="ID", IsForeignKey=true)]
		public WFRole WFRole
		{
			get
			{
				return this._WFRole.Entity;
			}
			set
			{
				WFRole previousValue = this._WFRole.Entity;
				if (((previousValue != value) 
							|| (this._WFRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WFRole.Entity = null;
						previousValue.WFRole_WFResolutions.Remove(this);
					}
					this._WFRole.Entity = value;
					if ((value != null))
					{
						value.WFRole_WFResolutions.Add(this);
						this._WFRoleID = value.ID;
					}
					else
					{
						this._WFRoleID = default(int);
					}
					this.SendPropertyChanged("WFRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFStatus")]
	public partial class WFStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _DeleteFlag;
		
		private EntitySet<JobRequest> _JobRequests;
		
		private EntitySet<PerformanceReview> _PerformanceReviews;
		
		private EntitySet<PurchaseRequest> _PurchaseRequests;
		
		private EntitySet<WFResolution_WFStatus> _WFResolution_WFStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public WFStatus()
		{
			this._JobRequests = new EntitySet<JobRequest>(new Action<JobRequest>(this.attach_JobRequests), new Action<JobRequest>(this.detach_JobRequests));
			this._PerformanceReviews = new EntitySet<PerformanceReview>(new Action<PerformanceReview>(this.attach_PerformanceReviews), new Action<PerformanceReview>(this.detach_PerformanceReviews));
			this._PurchaseRequests = new EntitySet<PurchaseRequest>(new Action<PurchaseRequest>(this.attach_PurchaseRequests), new Action<PurchaseRequest>(this.detach_PurchaseRequests));
			this._WFResolution_WFStatus = new EntitySet<WFResolution_WFStatus>(new Action<WFResolution_WFStatus>(this.attach_WFResolution_WFStatus), new Action<WFResolution_WFStatus>(this.detach_WFResolution_WFStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_JobRequest", Storage="_JobRequests", ThisKey="ID", OtherKey="WFStatusID")]
		public EntitySet<JobRequest> JobRequests
		{
			get
			{
				return this._JobRequests;
			}
			set
			{
				this._JobRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_PerformanceReview", Storage="_PerformanceReviews", ThisKey="ID", OtherKey="WFStatusID")]
		public EntitySet<PerformanceReview> PerformanceReviews
		{
			get
			{
				return this._PerformanceReviews;
			}
			set
			{
				this._PerformanceReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_PurchaseRequest", Storage="_PurchaseRequests", ThisKey="ID", OtherKey="WFStatusID")]
		public EntitySet<PurchaseRequest> PurchaseRequests
		{
			get
			{
				return this._PurchaseRequests;
			}
			set
			{
				this._PurchaseRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WFStatus_WFResolution_WFStatus", Storage="_WFResolution_WFStatus", ThisKey="ID", OtherKey="WFStatusID")]
		public EntitySet<WFResolution_WFStatus> WFResolution_WFStatus
		{
			get
			{
				return this._WFResolution_WFStatus;
			}
			set
			{
				this._WFResolution_WFStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = this;
		}
		
		private void detach_JobRequests(JobRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = null;
		}
		
		private void attach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = this;
		}
		
		private void detach_PerformanceReviews(PerformanceReview entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = null;
		}
		
		private void attach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = this;
		}
		
		private void detach_PurchaseRequests(PurchaseRequest entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = null;
		}
		
		private void attach_WFResolution_WFStatus(WFResolution_WFStatus entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = this;
		}
		
		private void detach_WFResolution_WFStatus(WFResolution_WFStatus entity)
		{
			this.SendPropertyChanging();
			entity.WFStatus = null;
		}
	}
	
	public partial class sp_GetAccessibleModulesResult
	{
		
		private int _ModuleId;
		
		public sp_GetAccessibleModulesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this._ModuleId = value;
				}
			}
		}
	}
	
	public partial class sp_GetAllSeatCodeAndEmpSTTResult
	{
		
		private int _SeatCodeID;
		
		private string _SeatCodeName;
		
		private string _EmpId;
		
		private string _EmpName;
		
		private string _locationcode;
		
		private string _Photograph;
		
		private string _EmpType;
		
		public sp_GetAllSeatCodeAndEmpSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeID", DbType="Int NOT NULL")]
		public int SeatCodeID
		{
			get
			{
				return this._SeatCodeID;
			}
			set
			{
				if ((this._SeatCodeID != value))
				{
					this._SeatCodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SeatCodeName
		{
			get
			{
				return this._SeatCodeName;
			}
			set
			{
				if ((this._SeatCodeName != value))
				{
					this._SeatCodeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="NVarChar(10)")]
		public string EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this._EmpId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="NVarChar(82)")]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this._EmpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationcode", DbType="NVarChar(20)")]
		public string locationcode
		{
			get
			{
				return this._locationcode;
			}
			set
			{
				if ((this._locationcode != value))
				{
					this._locationcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string EmpType
		{
			get
			{
				return this._EmpType;
			}
			set
			{
				if ((this._EmpType != value))
				{
					this._EmpType = value;
				}
			}
		}
	}
	
	public partial class sp_GetAssetMasterResult
	{
		
		private long _ID;
		
		private string _AssetId;
		
		private int _CategoryId;
		
		private string _Remark;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private bool _DeleteFlag;
		
		private int _AssetCategoryID;
		
		private string _AssetCategoryName;
		
		private string _AssetCategoryDescription;
		
		private string _StatusName;
		
		private string _EmployeeId;
		
		private string _UserName;
		
		private string _DisplayName;
		
		private string _OfficeEmail;
		
		private string _Project;
		
		public sp_GetAssetMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetId
		{
			get
			{
				return this._AssetId;
			}
			set
			{
				if ((this._AssetId != value))
				{
					this._AssetId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryID", DbType="Int NOT NULL")]
		public int AssetCategoryID
		{
			get
			{
				return this._AssetCategoryID;
			}
			set
			{
				if ((this._AssetCategoryID != value))
				{
					this._AssetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AssetCategoryName
		{
			get
			{
				return this._AssetCategoryName;
			}
			set
			{
				if ((this._AssetCategoryName != value))
				{
					this._AssetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryDescription", DbType="NVarChar(4000)")]
		public string AssetCategoryDescription
		{
			get
			{
				return this._AssetCategoryDescription;
			}
			set
			{
				if ((this._AssetCategoryDescription != value))
				{
					this._AssetCategoryDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10)")]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
	}
	
	public partial class sp_GetAssetMasterPropertyResult
	{
		
		private long _ID;
		
		private string _AssetID;
		
		private int _CategoryId;
		
		private long _AssetPropertyId;
		
		private string _AssetPropertyName;
		
		private string _MasterData;
		
		private int _DisplayOrder;
		
		private int _AssetCategoryID;
		
		private string _AssetCategoryName;
		
		private long _AssetPropertyDetailId;
		
		public sp_GetAssetMasterPropertyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this._AssetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyId", DbType="BigInt NOT NULL")]
		public long AssetPropertyId
		{
			get
			{
				return this._AssetPropertyId;
			}
			set
			{
				if ((this._AssetPropertyId != value))
				{
					this._AssetPropertyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AssetPropertyName
		{
			get
			{
				return this._AssetPropertyName;
			}
			set
			{
				if ((this._AssetPropertyName != value))
				{
					this._AssetPropertyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterData", DbType="NVarChar(4000)")]
		public string MasterData
		{
			get
			{
				return this._MasterData;
			}
			set
			{
				if ((this._MasterData != value))
				{
					this._MasterData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryID", DbType="Int NOT NULL")]
		public int AssetCategoryID
		{
			get
			{
				return this._AssetCategoryID;
			}
			set
			{
				if ((this._AssetCategoryID != value))
				{
					this._AssetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AssetCategoryName
		{
			get
			{
				return this._AssetCategoryName;
			}
			set
			{
				if ((this._AssetCategoryName != value))
				{
					this._AssetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyDetailId", DbType="BigInt NOT NULL")]
		public long AssetPropertyDetailId
		{
			get
			{
				return this._AssetPropertyDetailId;
			}
			set
			{
				if ((this._AssetPropertyDetailId != value))
				{
					this._AssetPropertyDetailId = value;
				}
			}
		}
	}
	
	public partial class sp_GetAssetPropertyResult
	{
		
		private System.Nullable<long> _ID;
		
		private string _Name;
		
		private System.Nullable<int> _AssetCategoryID;
		
		private string _AssetCategoryName;
		
		private string _MasterData;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.Nullable<int> _DisplayOrder;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		public sp_GetAssetPropertyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryID", DbType="Int")]
		public System.Nullable<int> AssetCategoryID
		{
			get
			{
				return this._AssetCategoryID;
			}
			set
			{
				if ((this._AssetCategoryID != value))
				{
					this._AssetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AssetCategoryName
		{
			get
			{
				return this._AssetCategoryName;
			}
			set
			{
				if ((this._AssetCategoryName != value))
				{
					this._AssetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterData", DbType="NVarChar(4000)")]
		public string MasterData
		{
			get
			{
				return this._MasterData;
			}
			set
			{
				if ((this._MasterData != value))
				{
					this._MasterData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	public partial class sp_GetAssetToolTipResult
	{
		
		private long _ID;
		
		private string _AssetId;
		
		private int _CategoryId;
		
		private string _AssetCategoryName;
		
		private long _AssetPropertyDetailId;
		
		private long _AssetPropertyId;
		
		private string _AssetPropertyName;
		
		public sp_GetAssetToolTipResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetId
		{
			get
			{
				return this._AssetId;
			}
			set
			{
				if ((this._AssetId != value))
				{
					this._AssetId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AssetCategoryName
		{
			get
			{
				return this._AssetCategoryName;
			}
			set
			{
				if ((this._AssetCategoryName != value))
				{
					this._AssetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyDetailId", DbType="BigInt NOT NULL")]
		public long AssetPropertyDetailId
		{
			get
			{
				return this._AssetPropertyDetailId;
			}
			set
			{
				if ((this._AssetPropertyDetailId != value))
				{
					this._AssetPropertyDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyId", DbType="BigInt NOT NULL")]
		public long AssetPropertyId
		{
			get
			{
				return this._AssetPropertyId;
			}
			set
			{
				if ((this._AssetPropertyId != value))
				{
					this._AssetPropertyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AssetPropertyName
		{
			get
			{
				return this._AssetPropertyName;
			}
			set
			{
				if ((this._AssetPropertyName != value))
				{
					this._AssetPropertyName = value;
				}
			}
		}
	}
	
	public partial class sp_GetCandidateResult
	{
		
		private int _ID;
		
		private string _DisplayName;
		
		private string _DisplayNameExport;
		
		private string _VNName;
		
		private string _VNNameExport;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CellPhone;
		
		private string _Email;
		
		private System.DateTime _SearchDate;
		
		private bool _Gender;
		
		private string _University;
		
		private string _SourceName;
		
		private string _Title;
		
		private int _Status;
		
		private string _Address;
		
		private string _Note;
		
		private string _Photograph;
		
		private string _CVFile;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		public sp_GetCandidateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayNameExport", DbType="NVarChar(82)")]
		public string DisplayNameExport
		{
			get
			{
				return this._DisplayNameExport;
			}
			set
			{
				if ((this._DisplayNameExport != value))
				{
					this._DisplayNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNName", DbType="NVarChar(82)")]
		public string VNName
		{
			get
			{
				return this._VNName;
			}
			set
			{
				if ((this._VNName != value))
				{
					this._VNName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNNameExport", DbType="NVarChar(82)")]
		public string VNNameExport
		{
			get
			{
				return this._VNNameExport;
			}
			set
			{
				if ((this._VNNameExport != value))
				{
					this._VNNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchDate", DbType="DateTime NOT NULL")]
		public System.DateTime SearchDate
		{
			get
			{
				return this._SearchDate;
			}
			set
			{
				if ((this._SearchDate != value))
				{
					this._SearchDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University", DbType="NVarChar(255)")]
		public string University
		{
			get
			{
				return this._University;
			}
			set
			{
				if ((this._University != value))
				{
					this._University = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this._SourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this._CVFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	public partial class sp_GetCandidateAnswerListResult
	{
		
		private int _ID;
		
		private int _CandidateExamID;
		
		private int _ExamQuestionSectionID;
		
		private int _QuestionID;
		
		private System.Nullable<int> _AnswerID;
		
		private string _Essay;
		
		private System.Nullable<bool> _IsCorrect;
		
		public sp_GetCandidateAnswerListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateExamID", DbType="Int NOT NULL")]
		public int CandidateExamID
		{
			get
			{
				return this._CandidateExamID;
			}
			set
			{
				if ((this._CandidateExamID != value))
				{
					this._CandidateExamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					this._ExamQuestionSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int")]
		public System.Nullable<int> AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Essay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Essay
		{
			get
			{
				return this._Essay;
			}
			set
			{
				if ((this._Essay != value))
				{
					this._Essay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this._IsCorrect = value;
				}
			}
		}
	}
	
	public partial class sp_GetCandidateExamResult
	{
		
		private int _ID;
		
		private int _CandidateID;
		
		private string _DisplayName;
		
		private string _DisplayNameExport;
		
		private string _VNName;
		
		private string _VNNameExport;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CellPhone;
		
		private string _Email;
		
		private System.DateTime _SearchDate;
		
		private bool _Gender;
		
		private string _SourceName;
		
		private string _Title;
		
		private int _Status;
		
		private string _Address;
		
		private string _Note;
		
		private string _Photograph;
		
		private string _CVFile;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _CandidatePin;
		
		public sp_GetCandidateExamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateID", DbType="Int NOT NULL")]
		public int CandidateID
		{
			get
			{
				return this._CandidateID;
			}
			set
			{
				if ((this._CandidateID != value))
				{
					this._CandidateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayNameExport", DbType="NVarChar(82)")]
		public string DisplayNameExport
		{
			get
			{
				return this._DisplayNameExport;
			}
			set
			{
				if ((this._DisplayNameExport != value))
				{
					this._DisplayNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNName", DbType="NVarChar(82)")]
		public string VNName
		{
			get
			{
				return this._VNName;
			}
			set
			{
				if ((this._VNName != value))
				{
					this._VNName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNNameExport", DbType="NVarChar(82)")]
		public string VNNameExport
		{
			get
			{
				return this._VNNameExport;
			}
			set
			{
				if ((this._VNNameExport != value))
				{
					this._VNNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchDate", DbType="DateTime NOT NULL")]
		public System.DateTime SearchDate
		{
			get
			{
				return this._SearchDate;
			}
			set
			{
				if ((this._SearchDate != value))
				{
					this._SearchDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this._SourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this._CVFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatePin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CandidatePin
		{
			get
			{
				return this._CandidatePin;
			}
			set
			{
				if ((this._CandidatePin != value))
				{
					this._CandidatePin = value;
				}
			}
		}
	}
	
	public partial class sp_GetCandidateListByExamResult
	{
		
		private int _ID;
		
		private int _ExamID;
		
		private string _CandidateID;
		
		private string _CandidatePin;
		
		private System.Nullable<double> _WritingMark;
		
		private string _WritingComment;
		
		private System.Nullable<double> _ProgramingMark;
		
		private string _ProgramingComment;
		
		private bool _IsFinish;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private string _DisplayName;
		
		private string _Email;
		
		private bool _SendMail;
		
		public sp_GetCandidateListByExamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int NOT NULL")]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this._ExamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateID", DbType="NVarChar(50)")]
		public string CandidateID
		{
			get
			{
				return this._CandidateID;
			}
			set
			{
				if ((this._CandidateID != value))
				{
					this._CandidateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatePin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CandidatePin
		{
			get
			{
				return this._CandidatePin;
			}
			set
			{
				if ((this._CandidatePin != value))
				{
					this._CandidatePin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WritingMark", DbType="Float")]
		public System.Nullable<double> WritingMark
		{
			get
			{
				return this._WritingMark;
			}
			set
			{
				if ((this._WritingMark != value))
				{
					this._WritingMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WritingComment", DbType="NVarChar(255)")]
		public string WritingComment
		{
			get
			{
				return this._WritingComment;
			}
			set
			{
				if ((this._WritingComment != value))
				{
					this._WritingComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramingMark", DbType="Float")]
		public System.Nullable<double> ProgramingMark
		{
			get
			{
				return this._ProgramingMark;
			}
			set
			{
				if ((this._ProgramingMark != value))
				{
					this._ProgramingMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramingComment", DbType="NVarChar(255)")]
		public string ProgramingComment
		{
			get
			{
				return this._ProgramingComment;
			}
			set
			{
				if ((this._ProgramingComment != value))
				{
					this._ProgramingComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinish", DbType="Bit NOT NULL")]
		public bool IsFinish
		{
			get
			{
				return this._IsFinish;
			}
			set
			{
				if ((this._IsFinish != value))
				{
					this._IsFinish = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this._LoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMail", DbType="Bit NOT NULL")]
		public bool SendMail
		{
			get
			{
				return this._SendMail;
			}
			set
			{
				if ((this._SendMail != value))
				{
					this._SendMail = value;
				}
			}
		}
	}
	
	public partial class sp_GetClassPlanningResult
	{
		
		private int _ID;
		
		private string _ClassID;
		
		private string _CourseName;
		
		private string _SkillTypeName;
		
		private string _StatusName;
		
		private int _StatusID;
		
		private System.Nullable<double> _Duration;
		
		private System.DateTime _StartDate;
		
		private string _Instructors;
		
		private System.Nullable<int> _Attendess;
		
		private string _Objectives;
		
		private string _ClassTime;
		
		public sp_GetClassPlanningResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillTypeName", DbType="NVarChar(100)")]
		public string SkillTypeName
		{
			get
			{
				return this._SkillTypeName;
			}
			set
			{
				if ((this._SkillTypeName != value))
				{
					this._SkillTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructors", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				if ((this._Instructors != value))
				{
					this._Instructors = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendess", DbType="Int")]
		public System.Nullable<int> Attendess
		{
			get
			{
				return this._Attendess;
			}
			set
			{
				if ((this._Attendess != value))
				{
					this._Attendess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="NVarChar(1000)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this._Objectives = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTime", DbType="NVarChar(100)")]
		public string ClassTime
		{
			get
			{
				return this._ClassTime;
			}
			set
			{
				if ((this._ClassTime != value))
				{
					this._ClassTime = value;
				}
			}
		}
	}
	
	public partial class sp_GetComprehensionParagraphListByExamQuestionSectionIDResult
	{
		
		private int _ID;
		
		private int _ParagraphID;
		
		private string _ParagraphContent;
		
		public sp_GetComprehensionParagraphListByExamQuestionSectionIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphID", DbType="Int NOT NULL")]
		public int ParagraphID
		{
			get
			{
				return this._ParagraphID;
			}
			set
			{
				if ((this._ParagraphID != value))
				{
					this._ParagraphID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ParagraphContent
		{
			get
			{
				return this._ParagraphContent;
			}
			set
			{
				if ((this._ParagraphContent != value))
				{
					this._ParagraphContent = value;
				}
			}
		}
	}
	
	public partial class sp_GetDateOffPTOResult
	{
		
		private System.Nullable<System.DateTime> _DateOff;
		
		private System.Nullable<int> _TimeOff;
		
		private System.Nullable<System.DateTime> _DateOffFrom;
		
		private System.Nullable<System.DateTime> _DateOffTo;
		
		private string _PtoTypeName;
		
		public sp_GetDateOffPTOResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOff", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOff
		{
			get
			{
				return this._DateOff;
			}
			set
			{
				if ((this._DateOff != value))
				{
					this._DateOff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOff", DbType="Int")]
		public System.Nullable<int> TimeOff
		{
			get
			{
				return this._TimeOff;
			}
			set
			{
				if ((this._TimeOff != value))
				{
					this._TimeOff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOffFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOffFrom
		{
			get
			{
				return this._DateOffFrom;
			}
			set
			{
				if ((this._DateOffFrom != value))
				{
					this._DateOffFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOffTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOffTo
		{
			get
			{
				return this._DateOffTo;
			}
			set
			{
				if ((this._DateOffTo != value))
				{
					this._DateOffTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PtoTypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PtoTypeName
		{
			get
			{
				return this._PtoTypeName;
			}
			set
			{
				if ((this._PtoTypeName != value))
				{
					this._PtoTypeName = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeCertificationResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _TitleName;
		
		private string _ManagerId;
		
		private string _ManagerName;
		
		private int _EmployeeCertificationId;
		
		private string _EmployeeId;
		
		private string _Remark;
		
		private string _Name;
		
		public sp_GetEmployeeCertificationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(200)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCertificationId", DbType="Int NOT NULL")]
		public int EmployeeCertificationId
		{
			get
			{
				return this._EmployeeCertificationId;
			}
			set
			{
				if ((this._EmployeeCertificationId != value))
				{
					this._EmployeeCertificationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeCertificationManagerResult
	{
		
		private string _ManagerName;
		
		private string _ManagerId;
		
		public sp_GetEmployeeCertificationManagerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(200)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeExamResult
	{
		
		private int _ID;
		
		private string _EmployeeID;
		
		private string _DisplayName;
		
		private string _DepartmentName;
		
		private string _TitleName;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<int> _EmpStatusId;
		
		private string _StatusName;
		
		private string _OfficeEmail;
		
		private string _JR;
		
		private string _Department;
		
		private string _CandidatePin;
		
		public sp_GetEmployeeExamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this._ResignedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this._ResignedReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatusId", DbType="Int")]
		public System.Nullable<int> EmpStatusId
		{
			get
			{
				return this._EmpStatusId;
			}
			set
			{
				if ((this._EmpStatusId != value))
				{
					this._EmpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(30)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatePin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CandidatePin
		{
			get
			{
				return this._CandidatePin;
			}
			set
			{
				if ((this._CandidatePin != value))
				{
					this._CandidatePin = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeForExportResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _DepartmentName;
		
		private string _Department;
		
		private string _TitleName;
		
		private string _VnName;
		
		private string _VnPOB;
		
		private string _VnPlaceOfOrigin;
		
		private string _Degree;
		
		private string _OtherDegree;
		
		private string _Race;
		
		private string _IDIssueLocation;
		
		private string _VnIDIssueLocation;
		
		private string _TaxID;
		
		private System.Nullable<System.DateTime> _TaxIssueDate;
		
		private string _SocialInsuranceNo;
		
		private string _Hospital;
		
		private System.Nullable<bool> _Gender;
		
		private string _IDNumber;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ContractedDate;
		
		private string _Photograph;
		
		private string _JR;
		
		private string _Major;
		
		private string _JRApproval;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _PersonalEmail;
		
		private string _OfficeEmail;
		
		private string _ExtensionNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _POB;
		
		private string _Nationality;
		
		private string _PlaceOfOrigin;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<double> _ResignedAllowance;
		
		private System.Nullable<bool> _LaborUnion;
		
		private System.Nullable<System.DateTime> _LaborUnionDate;
		
		private string _Remarks;
		
		private System.Nullable<bool> _MarriedStatus;
		
		private string _Floor;
		
		private string _Religion;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private string _EmergencyContactRelationship;
		
		private string _SkypeId;
		
		private string _YahooId;
		
		private string _SeatCode;
		
		private string _CVFile;
		
		private System.Nullable<int> _EmpStatusid;
		
		private string _StatusName;
		
		private string _Project;
		
		private string _Manager;
		
		private string _PermanentAddress;
		
		private string _VnPermanentAddress;
		
		private string _TempAddress;
		
		private string _VnTempAddress;
		
		public sp_GetEmployeeForExportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnName", DbType="NVarChar(82)")]
		public string VnName
		{
			get
			{
				return this._VnName;
			}
			set
			{
				if ((this._VnName != value))
				{
					this._VnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPOB", DbType="NVarChar(100)")]
		public string VnPOB
		{
			get
			{
				return this._VnPOB;
			}
			set
			{
				if ((this._VnPOB != value))
				{
					this._VnPOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPlaceOfOrigin", DbType="NVarChar(100)")]
		public string VnPlaceOfOrigin
		{
			get
			{
				return this._VnPlaceOfOrigin;
			}
			set
			{
				if ((this._VnPlaceOfOrigin != value))
				{
					this._VnPlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(200)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this._Degree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDegree", DbType="NVarChar(200)")]
		public string OtherDegree
		{
			get
			{
				return this._OtherDegree;
			}
			set
			{
				if ((this._OtherDegree != value))
				{
					this._OtherDegree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this._Race = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIssueLocation", DbType="NVarChar(200)")]
		public string IDIssueLocation
		{
			get
			{
				return this._IDIssueLocation;
			}
			set
			{
				if ((this._IDIssueLocation != value))
				{
					this._IDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnIDIssueLocation", DbType="NVarChar(200)")]
		public string VnIDIssueLocation
		{
			get
			{
				return this._VnIDIssueLocation;
			}
			set
			{
				if ((this._VnIDIssueLocation != value))
				{
					this._VnIDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="NVarChar(20)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this._TaxID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxIssueDate
		{
			get
			{
				return this._TaxIssueDate;
			}
			set
			{
				if ((this._TaxIssueDate != value))
				{
					this._TaxIssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialInsuranceNo", DbType="NVarChar(20)")]
		public string SocialInsuranceNo
		{
			get
			{
				return this._SocialInsuranceNo;
			}
			set
			{
				if ((this._SocialInsuranceNo != value))
				{
					this._SocialInsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hospital", DbType="NVarChar(200)")]
		public string Hospital
		{
			get
			{
				return this._Hospital;
			}
			set
			{
				if ((this._Hospital != value))
				{
					this._Hospital = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(20)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this._IDNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractedDate
		{
			get
			{
				return this._ContractedDate;
			}
			set
			{
				if ((this._ContractedDate != value))
				{
					this._ContractedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(255)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this._Major = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRApproval", DbType="NVarChar(10)")]
		public string JRApproval
		{
			get
			{
				return this._JRApproval;
			}
			set
			{
				if ((this._JRApproval != value))
				{
					this._JRApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(100)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(100)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalEmail", DbType="NVarChar(100)")]
		public string PersonalEmail
		{
			get
			{
				return this._PersonalEmail;
			}
			set
			{
				if ((this._PersonalEmail != value))
				{
					this._PersonalEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(10)")]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this._ExtensionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="NVarChar(100)")]
		public string POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this._POB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(30)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this._PlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(100)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this._BankAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this._ResignedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this._ResignedReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedAllowance", DbType="Float")]
		public System.Nullable<double> ResignedAllowance
		{
			get
			{
				return this._ResignedAllowance;
			}
			set
			{
				if ((this._ResignedAllowance != value))
				{
					this._ResignedAllowance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnion", DbType="Bit")]
		public System.Nullable<bool> LaborUnion
		{
			get
			{
				return this._LaborUnion;
			}
			set
			{
				if ((this._LaborUnion != value))
				{
					this._LaborUnion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaborUnionDate
		{
			get
			{
				return this._LaborUnionDate;
			}
			set
			{
				if ((this._LaborUnionDate != value))
				{
					this._LaborUnionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedStatus", DbType="Bit")]
		public System.Nullable<bool> MarriedStatus
		{
			get
			{
				return this._MarriedStatus;
			}
			set
			{
				if ((this._MarriedStatus != value))
				{
					this._MarriedStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(20)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this._Religion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(100)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this._EmergencyContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(100)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this._EmergencyContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactRelationship", DbType="NVarChar(100)")]
		public string EmergencyContactRelationship
		{
			get
			{
				return this._EmergencyContactRelationship;
			}
			set
			{
				if ((this._EmergencyContactRelationship != value))
				{
					this._EmergencyContactRelationship = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeId", DbType="NVarChar(50)")]
		public string SkypeId
		{
			get
			{
				return this._SkypeId;
			}
			set
			{
				if ((this._SkypeId != value))
				{
					this._SkypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YahooId", DbType="NVarChar(50)")]
		public string YahooId
		{
			get
			{
				return this._YahooId;
			}
			set
			{
				if ((this._YahooId != value))
				{
					this._YahooId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCode", DbType="NVarChar(20)")]
		public string SeatCode
		{
			get
			{
				return this._SeatCode;
			}
			set
			{
				if ((this._SeatCode != value))
				{
					this._SeatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this._CVFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatusid", DbType="Int")]
		public System.Nullable<int> EmpStatusid
		{
			get
			{
				return this._EmpStatusid;
			}
			set
			{
				if ((this._EmpStatusid != value))
				{
					this._EmpStatusid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(30)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this._Manager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(1008)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this._PermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentAddress", DbType="NVarChar(1008)")]
		public string VnPermanentAddress
		{
			get
			{
				return this._VnPermanentAddress;
			}
			set
			{
				if ((this._VnPermanentAddress != value))
				{
					this._VnPermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress", DbType="NVarChar(1008)")]
		public string TempAddress
		{
			get
			{
				return this._TempAddress;
			}
			set
			{
				if ((this._TempAddress != value))
				{
					this._TempAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempAddress", DbType="NVarChar(1008)")]
		public string VnTempAddress
		{
			get
			{
				return this._VnTempAddress;
			}
			set
			{
				if ((this._VnTempAddress != value))
				{
					this._VnTempAddress = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeJobtitleCertificationResult
	{
		
		private string _JobTitleName;
		
		private int _JobTitleId;
		
		public sp_GetEmployeeJobtitleCertificationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobTitleName
		{
			get
			{
				return this._JobTitleName;
			}
			set
			{
				if ((this._JobTitleName != value))
				{
					this._JobTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", DbType="Int NOT NULL")]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					this._JobTitleId = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeManagerResult
	{
		
		private string _ID;
		
		private string _OfficeEmail;
		
		public sp_GetEmployeeManagerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeProjectResult
	{
		
		private string _Project;
		
		public sp_GetEmployeeProjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeesForPRResult
	{
		
		private string _ID;
		
		private string _OldEmployeeId;
		
		private string _LastName;
		
		private string _VnLastName;
		
		private string _MiddleName;
		
		private string _VnMiddleName;
		
		private string _FirstName;
		
		private string _VnFirstName;
		
		private System.Nullable<bool> _Gender;
		
		private string _IDNumber;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ContractedDate;
		
		private string _Major;
		
		private string _Photograph;
		
		private string _JR;
		
		private string _JRApproval;
		
		private string _TempAddress;
		
		private string _VnTempAddress;
		
		private string _TempArea;
		
		private string _VnTempArea;
		
		private string _TempDistrict;
		
		private string _VnTempDistrict;
		
		private string _TempCityProvince;
		
		private string _VnTempCityProvince;
		
		private string _TempCountry;
		
		private string _VnTempCountry;
		
		private string _PermanentAddress;
		
		private string _VnPermanentAddress;
		
		private string _PermanentArea;
		
		private string _VnPermanentArea;
		
		private string _PermanentDistrict;
		
		private string _VnPermanentDistrict;
		
		private string _PermanentCityProvince;
		
		private string _VnPermanentCityProvince;
		
		private string _PermanentCountry;
		
		private string _VnPermanentCountry;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _PersonalEmail;
		
		private string _OfficeEmail;
		
		private string _ExtensionNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _POB;
		
		private string _VnPOB;
		
		private string _Nationality;
		
		private string _PlaceOfOrigin;
		
		private string _VnPlaceOfOrigin;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<double> _ResignedAllowance;
		
		private System.Nullable<bool> _LaborUnion;
		
		private System.Nullable<System.DateTime> _LaborUnionDate;
		
		private string _Remarks;
		
		private System.Nullable<bool> _MarriedStatus;
		
		private string _Floor;
		
		private string _Religion;
		
		private string _VnReligion;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private System.Nullable<int> _CandidateId;
		
		private string _EmergencyContactRelationship;
		
		private int _TitleId;
		
		private int _DepartmentId;
		
		private string _SkypeId;
		
		private string _YahooId;
		
		private string _SeatCode;
		
		private string _CVFile;
		
		private System.Nullable<int> _EmpStatusId;
		
		private string _Degree;
		
		private string _OtherDegree;
		
		private string _IDIssueLocation;
		
		private string _VnIDIssueLocation;
		
		private string _Race;
		
		private string _TaxID;
		
		private System.Nullable<System.DateTime> _TaxIssueDate;
		
		private string _SocialInsuranceNo;
		
		private string _InsuranceHospitalID;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _Project;
		
		private string _Manager;
		
		private string _ManagerId;
		
		private string _LocationCode;
		
		public sp_GetEmployeesForPRResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldEmployeeId", DbType="NVarChar(100)")]
		public string OldEmployeeId
		{
			get
			{
				return this._OldEmployeeId;
			}
			set
			{
				if ((this._OldEmployeeId != value))
				{
					this._OldEmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnLastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnLastName
		{
			get
			{
				return this._VnLastName;
			}
			set
			{
				if ((this._VnLastName != value))
				{
					this._VnLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(20)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnMiddleName", DbType="NVarChar(20)")]
		public string VnMiddleName
		{
			get
			{
				return this._VnMiddleName;
			}
			set
			{
				if ((this._VnMiddleName != value))
				{
					this._VnMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnFirstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string VnFirstName
		{
			get
			{
				return this._VnFirstName;
			}
			set
			{
				if ((this._VnFirstName != value))
				{
					this._VnFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(20)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this._IDNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractedDate
		{
			get
			{
				return this._ContractedDate;
			}
			set
			{
				if ((this._ContractedDate != value))
				{
					this._ContractedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(255)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this._Major = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRApproval", DbType="NVarChar(10)")]
		public string JRApproval
		{
			get
			{
				return this._JRApproval;
			}
			set
			{
				if ((this._JRApproval != value))
				{
					this._JRApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress", DbType="NVarChar(255)")]
		public string TempAddress
		{
			get
			{
				return this._TempAddress;
			}
			set
			{
				if ((this._TempAddress != value))
				{
					this._TempAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempAddress", DbType="NVarChar(255)")]
		public string VnTempAddress
		{
			get
			{
				return this._VnTempAddress;
			}
			set
			{
				if ((this._VnTempAddress != value))
				{
					this._VnTempAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempArea", DbType="NVarChar(255)")]
		public string TempArea
		{
			get
			{
				return this._TempArea;
			}
			set
			{
				if ((this._TempArea != value))
				{
					this._TempArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempArea", DbType="NVarChar(255)")]
		public string VnTempArea
		{
			get
			{
				return this._VnTempArea;
			}
			set
			{
				if ((this._VnTempArea != value))
				{
					this._VnTempArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempDistrict", DbType="NVarChar(255)")]
		public string TempDistrict
		{
			get
			{
				return this._TempDistrict;
			}
			set
			{
				if ((this._TempDistrict != value))
				{
					this._TempDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempDistrict", DbType="NVarChar(255)")]
		public string VnTempDistrict
		{
			get
			{
				return this._VnTempDistrict;
			}
			set
			{
				if ((this._VnTempDistrict != value))
				{
					this._VnTempDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCityProvince", DbType="NVarChar(255)")]
		public string TempCityProvince
		{
			get
			{
				return this._TempCityProvince;
			}
			set
			{
				if ((this._TempCityProvince != value))
				{
					this._TempCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCityProvince", DbType="NVarChar(255)")]
		public string VnTempCityProvince
		{
			get
			{
				return this._VnTempCityProvince;
			}
			set
			{
				if ((this._VnTempCityProvince != value))
				{
					this._VnTempCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCountry", DbType="NVarChar(255)")]
		public string TempCountry
		{
			get
			{
				return this._TempCountry;
			}
			set
			{
				if ((this._TempCountry != value))
				{
					this._TempCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempCountry", DbType="NVarChar(255)")]
		public string VnTempCountry
		{
			get
			{
				return this._VnTempCountry;
			}
			set
			{
				if ((this._VnTempCountry != value))
				{
					this._VnTempCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(255)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this._PermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentAddress", DbType="NVarChar(255)")]
		public string VnPermanentAddress
		{
			get
			{
				return this._VnPermanentAddress;
			}
			set
			{
				if ((this._VnPermanentAddress != value))
				{
					this._VnPermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentArea", DbType="NVarChar(255)")]
		public string PermanentArea
		{
			get
			{
				return this._PermanentArea;
			}
			set
			{
				if ((this._PermanentArea != value))
				{
					this._PermanentArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentArea", DbType="NVarChar(255)")]
		public string VnPermanentArea
		{
			get
			{
				return this._VnPermanentArea;
			}
			set
			{
				if ((this._VnPermanentArea != value))
				{
					this._VnPermanentArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentDistrict", DbType="NVarChar(255)")]
		public string PermanentDistrict
		{
			get
			{
				return this._PermanentDistrict;
			}
			set
			{
				if ((this._PermanentDistrict != value))
				{
					this._PermanentDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentDistrict", DbType="NVarChar(255)")]
		public string VnPermanentDistrict
		{
			get
			{
				return this._VnPermanentDistrict;
			}
			set
			{
				if ((this._VnPermanentDistrict != value))
				{
					this._VnPermanentDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityProvince", DbType="NVarChar(255)")]
		public string PermanentCityProvince
		{
			get
			{
				return this._PermanentCityProvince;
			}
			set
			{
				if ((this._PermanentCityProvince != value))
				{
					this._PermanentCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCityProvince", DbType="NVarChar(255)")]
		public string VnPermanentCityProvince
		{
			get
			{
				return this._VnPermanentCityProvince;
			}
			set
			{
				if ((this._VnPermanentCityProvince != value))
				{
					this._VnPermanentCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCountry", DbType="NVarChar(255)")]
		public string PermanentCountry
		{
			get
			{
				return this._PermanentCountry;
			}
			set
			{
				if ((this._PermanentCountry != value))
				{
					this._PermanentCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentCountry", DbType="NVarChar(255)")]
		public string VnPermanentCountry
		{
			get
			{
				return this._VnPermanentCountry;
			}
			set
			{
				if ((this._VnPermanentCountry != value))
				{
					this._VnPermanentCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(100)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(100)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalEmail", DbType="NVarChar(100)")]
		public string PersonalEmail
		{
			get
			{
				return this._PersonalEmail;
			}
			set
			{
				if ((this._PersonalEmail != value))
				{
					this._PersonalEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(10)")]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this._ExtensionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="NVarChar(100)")]
		public string POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this._POB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPOB", DbType="NVarChar(100)")]
		public string VnPOB
		{
			get
			{
				return this._VnPOB;
			}
			set
			{
				if ((this._VnPOB != value))
				{
					this._VnPOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(30)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this._PlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPlaceOfOrigin", DbType="NVarChar(100)")]
		public string VnPlaceOfOrigin
		{
			get
			{
				return this._VnPlaceOfOrigin;
			}
			set
			{
				if ((this._VnPlaceOfOrigin != value))
				{
					this._VnPlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(100)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this._BankAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this._ResignedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this._ResignedReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedAllowance", DbType="Float")]
		public System.Nullable<double> ResignedAllowance
		{
			get
			{
				return this._ResignedAllowance;
			}
			set
			{
				if ((this._ResignedAllowance != value))
				{
					this._ResignedAllowance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnion", DbType="Bit")]
		public System.Nullable<bool> LaborUnion
		{
			get
			{
				return this._LaborUnion;
			}
			set
			{
				if ((this._LaborUnion != value))
				{
					this._LaborUnion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaborUnionDate
		{
			get
			{
				return this._LaborUnionDate;
			}
			set
			{
				if ((this._LaborUnionDate != value))
				{
					this._LaborUnionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedStatus", DbType="Bit")]
		public System.Nullable<bool> MarriedStatus
		{
			get
			{
				return this._MarriedStatus;
			}
			set
			{
				if ((this._MarriedStatus != value))
				{
					this._MarriedStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(20)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this._Religion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnReligion", DbType="NVarChar(50)")]
		public string VnReligion
		{
			get
			{
				return this._VnReligion;
			}
			set
			{
				if ((this._VnReligion != value))
				{
					this._VnReligion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(100)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this._EmergencyContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(100)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this._EmergencyContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int")]
		public System.Nullable<int> CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this._CandidateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactRelationship", DbType="NVarChar(100)")]
		public string EmergencyContactRelationship
		{
			get
			{
				return this._EmergencyContactRelationship;
			}
			set
			{
				if ((this._EmergencyContactRelationship != value))
				{
					this._EmergencyContactRelationship = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int NOT NULL")]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this._TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this._DepartmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeId", DbType="NVarChar(50)")]
		public string SkypeId
		{
			get
			{
				return this._SkypeId;
			}
			set
			{
				if ((this._SkypeId != value))
				{
					this._SkypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YahooId", DbType="NVarChar(50)")]
		public string YahooId
		{
			get
			{
				return this._YahooId;
			}
			set
			{
				if ((this._YahooId != value))
				{
					this._YahooId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCode", DbType="NVarChar(20)")]
		public string SeatCode
		{
			get
			{
				return this._SeatCode;
			}
			set
			{
				if ((this._SeatCode != value))
				{
					this._SeatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this._CVFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatusId", DbType="Int")]
		public System.Nullable<int> EmpStatusId
		{
			get
			{
				return this._EmpStatusId;
			}
			set
			{
				if ((this._EmpStatusId != value))
				{
					this._EmpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(200)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this._Degree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDegree", DbType="NVarChar(200)")]
		public string OtherDegree
		{
			get
			{
				return this._OtherDegree;
			}
			set
			{
				if ((this._OtherDegree != value))
				{
					this._OtherDegree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIssueLocation", DbType="NVarChar(200)")]
		public string IDIssueLocation
		{
			get
			{
				return this._IDIssueLocation;
			}
			set
			{
				if ((this._IDIssueLocation != value))
				{
					this._IDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnIDIssueLocation", DbType="NVarChar(200)")]
		public string VnIDIssueLocation
		{
			get
			{
				return this._VnIDIssueLocation;
			}
			set
			{
				if ((this._VnIDIssueLocation != value))
				{
					this._VnIDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this._Race = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="NVarChar(20)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this._TaxID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaxIssueDate
		{
			get
			{
				return this._TaxIssueDate;
			}
			set
			{
				if ((this._TaxIssueDate != value))
				{
					this._TaxIssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialInsuranceNo", DbType="NVarChar(20)")]
		public string SocialInsuranceNo
		{
			get
			{
				return this._SocialInsuranceNo;
			}
			set
			{
				if ((this._SocialInsuranceNo != value))
				{
					this._SocialInsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceHospitalID", DbType="VarChar(6)")]
		public string InsuranceHospitalID
		{
			get
			{
				return this._InsuranceHospitalID;
			}
			set
			{
				if ((this._InsuranceHospitalID != value))
				{
					this._InsuranceHospitalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this._Manager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeesPRForHRResult
	{
		
		private string _ID;
		
		private string _EmployeeName;
		
		private string _ManagerName;
		
		private string _SubDepartment;
		
		private string _Department;
		
		public sp_GetEmployeesPRForHRResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(82)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(82)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100)")]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeSTTListResult
	{
		
		private string _ID;
		
		private string _FullName;
		
		private string _LocationCode;
		
		private string _UserName;
		
		public sp_GetEmployeeSTTListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	public partial class sp_GetEssayInfoByCandidateExamIDResult
	{
		
		private int _ID;
		
		private string _QuestionContent;
		
		private string _Essay;
		
		private int _ExamQuestionSectionID;
		
		public sp_GetEssayInfoByCandidateExamIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QuestionContent
		{
			get
			{
				return this._QuestionContent;
			}
			set
			{
				if ((this._QuestionContent != value))
				{
					this._QuestionContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Essay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Essay
		{
			get
			{
				return this._Essay;
			}
			set
			{
				if ((this._Essay != value))
				{
					this._Essay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionSectionID", DbType="Int NOT NULL")]
		public int ExamQuestionSectionID
		{
			get
			{
				return this._ExamQuestionSectionID;
			}
			set
			{
				if ((this._ExamQuestionSectionID != value))
				{
					this._ExamQuestionSectionID = value;
				}
			}
		}
	}
	
	public partial class sp_GetExamResult
	{
		
		private int _ID;
		
		private string _Title;
		
		private byte _ExamType;
		
		private string _ExamQuestionTitle;
		
		private System.DateTime _ExamDate;
		
		private string _MarkStatus;
		
		private string _ProgramingMarkStatus;
		
		public sp_GetExamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamType", DbType="TinyInt NOT NULL")]
		public byte ExamType
		{
			get
			{
				return this._ExamType;
			}
			set
			{
				if ((this._ExamType != value))
				{
					this._ExamType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamQuestionTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ExamQuestionTitle
		{
			get
			{
				return this._ExamQuestionTitle;
			}
			set
			{
				if ((this._ExamQuestionTitle != value))
				{
					this._ExamQuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this._ExamDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkStatus", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string MarkStatus
		{
			get
			{
				return this._MarkStatus;
			}
			set
			{
				if ((this._MarkStatus != value))
				{
					this._MarkStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramingMarkStatus", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string ProgramingMarkStatus
		{
			get
			{
				return this._ProgramingMarkStatus;
			}
			set
			{
				if ((this._ProgramingMarkStatus != value))
				{
					this._ProgramingMarkStatus = value;
				}
			}
		}
	}
	
	public partial class sp_GetInterviewCandidateResult
	{
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _InterviewDate;
		
		private string _Venue;
		
		private string _Pic;
		
		private string _InterviewFormId;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.Nullable<int> _CandidateId;
		
		private System.Nullable<int> _InterviewStatusId;
		
		private System.Nullable<int> _Round;
		
		private System.Nullable<int> _InterviewResultId;
		
		private string _Note;
		
		private System.Nullable<bool> _OldInterView;
		
		private System.Nullable<bool> _IsSentMailCandidate;
		
		private System.Nullable<bool> _IsSendMailInterviewer;
		
		private string _CClist;
		
		public sp_GetInterviewCandidateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InterviewDate
		{
			get
			{
				return this._InterviewDate;
			}
			set
			{
				if ((this._InterviewDate != value))
				{
					this._InterviewDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(1000)")]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this._Venue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="NVarChar(500)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this._Pic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewFormId", DbType="VarChar(5)")]
		public string InterviewFormId
		{
			get
			{
				return this._InterviewFormId;
			}
			set
			{
				if ((this._InterviewFormId != value))
				{
					this._InterviewFormId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int")]
		public System.Nullable<int> CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this._CandidateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewStatusId", DbType="Int")]
		public System.Nullable<int> InterviewStatusId
		{
			get
			{
				return this._InterviewStatusId;
			}
			set
			{
				if ((this._InterviewStatusId != value))
				{
					this._InterviewStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="Int")]
		public System.Nullable<int> Round
		{
			get
			{
				return this._Round;
			}
			set
			{
				if ((this._Round != value))
				{
					this._Round = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewResultId", DbType="Int")]
		public System.Nullable<int> InterviewResultId
		{
			get
			{
				return this._InterviewResultId;
			}
			set
			{
				if ((this._InterviewResultId != value))
				{
					this._InterviewResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInterView", DbType="Bit")]
		public System.Nullable<bool> OldInterView
		{
			get
			{
				return this._OldInterView;
			}
			set
			{
				if ((this._OldInterView != value))
				{
					this._OldInterView = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSentMailCandidate", DbType="Bit")]
		public System.Nullable<bool> IsSentMailCandidate
		{
			get
			{
				return this._IsSentMailCandidate;
			}
			set
			{
				if ((this._IsSentMailCandidate != value))
				{
					this._IsSentMailCandidate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSendMailInterviewer", DbType="Bit")]
		public System.Nullable<bool> IsSendMailInterviewer
		{
			get
			{
				return this._IsSendMailInterviewer;
			}
			set
			{
				if ((this._IsSendMailInterviewer != value))
				{
					this._IsSendMailInterviewer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CClist", DbType="NVarChar(500)")]
		public string CClist
		{
			get
			{
				return this._CClist;
			}
			set
			{
				if ((this._CClist != value))
				{
					this._CClist = value;
				}
			}
		}
	}
	
	public partial class sp_GetInterviewHistoryListResult
	{
		
		private int _ID;
		
		private string _DisplayName;
		
		private string _DisplayNameExport;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CellPhone;
		
		private string _Email;
		
		private bool _Gender;
		
		private System.DateTime _SearchDate;
		
		private string _SourceName;
		
		private string _Title;
		
		private string _ResultName;
		
		private string _Note;
		
		private System.Nullable<int> _round;
		
		private System.Nullable<int> _ResultId;
		
		public sp_GetInterviewHistoryListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayNameExport", DbType="NVarChar(82)")]
		public string DisplayNameExport
		{
			get
			{
				return this._DisplayNameExport;
			}
			set
			{
				if ((this._DisplayNameExport != value))
				{
					this._DisplayNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchDate", DbType="DateTime NOT NULL")]
		public System.DateTime SearchDate
		{
			get
			{
				return this._SearchDate;
			}
			set
			{
				if ((this._SearchDate != value))
				{
					this._SearchDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this._SourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultName", DbType="NVarChar(100)")]
		public string ResultName
		{
			get
			{
				return this._ResultName;
			}
			set
			{
				if ((this._ResultName != value))
				{
					this._ResultName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_round", DbType="Int")]
		public System.Nullable<int> round
		{
			get
			{
				return this._round;
			}
			set
			{
				if ((this._round != value))
				{
					this._round = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int")]
		public System.Nullable<int> ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
	}
	
	public partial class sp_GetInterviewListResult
	{
		
		private int _ID;
		
		private string _DisplayName;
		
		private string _DisplayNameExport;
		
		private string _SubDept;
		
		private string _Dept;
		
		private string _Position;
		
		private string _JRId;
		
		private System.Nullable<System.DateTime> _InterviewDate;
		
		private string _Venue;
		
		private string _Pic;
		
		private int _InterviewId;
		
		private System.Nullable<int> _ResultId;
		
		private string _Status;
		
		private string _ResultName;
		
		private System.Nullable<int> _round;
		
		private System.Nullable<bool> _IsSentMailCandidate;
		
		private System.Nullable<bool> _IsSendMailInterviewer;
		
		private System.Nullable<int> _MaxRound;
		
		private System.Nullable<int> _RoundInterviewed;
		
		private string _CCList;
		
		public sp_GetInterviewListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayNameExport", DbType="NVarChar(82)")]
		public string DisplayNameExport
		{
			get
			{
				return this._DisplayNameExport;
			}
			set
			{
				if ((this._DisplayNameExport != value))
				{
					this._DisplayNameExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDept", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDept
		{
			get
			{
				return this._SubDept;
			}
			set
			{
				if ((this._SubDept != value))
				{
					this._SubDept = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this._Dept = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRId", DbType="NVarChar(15)")]
		public string JRId
		{
			get
			{
				return this._JRId;
			}
			set
			{
				if ((this._JRId != value))
				{
					this._JRId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InterviewDate
		{
			get
			{
				return this._InterviewDate;
			}
			set
			{
				if ((this._InterviewDate != value))
				{
					this._InterviewDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(1000)")]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this._Venue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="NVarChar(500)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this._Pic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterviewId", DbType="Int NOT NULL")]
		public int InterviewId
		{
			get
			{
				return this._InterviewId;
			}
			set
			{
				if ((this._InterviewId != value))
				{
					this._InterviewId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int")]
		public System.Nullable<int> ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(100)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ResultName
		{
			get
			{
				return this._ResultName;
			}
			set
			{
				if ((this._ResultName != value))
				{
					this._ResultName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_round", DbType="Int")]
		public System.Nullable<int> round
		{
			get
			{
				return this._round;
			}
			set
			{
				if ((this._round != value))
				{
					this._round = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSentMailCandidate", DbType="Bit")]
		public System.Nullable<bool> IsSentMailCandidate
		{
			get
			{
				return this._IsSentMailCandidate;
			}
			set
			{
				if ((this._IsSentMailCandidate != value))
				{
					this._IsSentMailCandidate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSendMailInterviewer", DbType="Bit")]
		public System.Nullable<bool> IsSendMailInterviewer
		{
			get
			{
				return this._IsSendMailInterviewer;
			}
			set
			{
				if ((this._IsSendMailInterviewer != value))
				{
					this._IsSendMailInterviewer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRound", DbType="Int")]
		public System.Nullable<int> MaxRound
		{
			get
			{
				return this._MaxRound;
			}
			set
			{
				if ((this._MaxRound != value))
				{
					this._MaxRound = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundInterviewed", DbType="Int")]
		public System.Nullable<int> RoundInterviewed
		{
			get
			{
				return this._RoundInterviewed;
			}
			set
			{
				if ((this._RoundInterviewed != value))
				{
					this._RoundInterviewed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this._CCList = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobRequestResult
	{
		
		private int _ID;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private int _RequestorId;
		
		private System.DateTime _RequestDate;
		
		private int _DepartmentId;
		
		private int _PositionFrom;
		
		private System.Nullable<int> _PositionTo;
		
		private System.Nullable<System.DateTime> _ExpectedStartDate;
		
		private string _SalarySuggestion;
		
		private string _Justification;
		
		private string _CCList;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _RequestTypeId;
		
		private int _Quantity;
		
		private string _SubDepartment;
		
		private string _Department;
		
		private string _RequestorName;
		
		private string _Position;
		
		private string _AssignName;
		
		private string _StatusName;
		
		private string _ResolutionName;
		
		public sp_GetJobRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					this._WFStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorId", DbType="Int NOT NULL")]
		public int RequestorId
		{
			get
			{
				return this._RequestorId;
			}
			set
			{
				if ((this._RequestorId != value))
				{
					this._RequestorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this._DepartmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionFrom", DbType="Int NOT NULL")]
		public int PositionFrom
		{
			get
			{
				return this._PositionFrom;
			}
			set
			{
				if ((this._PositionFrom != value))
				{
					this._PositionFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionTo", DbType="Int")]
		public System.Nullable<int> PositionTo
		{
			get
			{
				return this._PositionTo;
			}
			set
			{
				if ((this._PositionTo != value))
				{
					this._PositionTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedStartDate
		{
			get
			{
				return this._ExpectedStartDate;
			}
			set
			{
				if ((this._ExpectedStartDate != value))
				{
					this._ExpectedStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalarySuggestion", DbType="NVarChar(100)")]
		public string SalarySuggestion
		{
			get
			{
				return this._SalarySuggestion;
			}
			set
			{
				if ((this._SalarySuggestion != value))
				{
					this._SalarySuggestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500)")]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this._Justification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this._CCList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this._AssignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(100)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this._InvolveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this._InvolveResolution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this._InvolveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="VarChar(100)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this._InvolveRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeId", DbType="Int NOT NULL")]
		public int RequestTypeId
		{
			get
			{
				return this._RequestTypeId;
			}
			set
			{
				if ((this._RequestTypeId != value))
				{
					this._RequestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this._RequestorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(204)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(103)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobRequestCompleteResult
	{
		
		private int _ID;
		
		private string _Approval;
		
		private string _Candidate;
		
		private string _EmpID;
		
		private string _Department;
		
		private string _SubDepartment;
		
		private string _Justification;
		
		private int _RequestTypeId;
		
		private string _FinalTitleName;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private int _StatusID;
		
		public sp_GetJobRequestCompleteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approval", DbType="NChar(10)")]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this._Approval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidate", DbType="NVarChar(100)")]
		public string Candidate
		{
			get
			{
				return this._Candidate;
			}
			set
			{
				if ((this._Candidate != value))
				{
					this._Candidate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500)")]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this._Justification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeId", DbType="Int NOT NULL")]
		public int RequestTypeId
		{
			get
			{
				return this._RequestTypeId;
			}
			set
			{
				if ((this._RequestTypeId != value))
				{
					this._RequestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FinalTitleName
		{
			get
			{
				return this._FinalTitleName;
			}
			set
			{
				if ((this._FinalTitleName != value))
				{
					this._FinalTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobRequestCompleteInterviewResult
	{
		
		private int _ID;
		
		private System.DateTime _RequestDate;
		
		private int _Quantity;
		
		private System.Nullable<System.DateTime> _ExpectedStartDate;
		
		private string _Department;
		
		private string _SubDepartment;
		
		private string _Justification;
		
		private int _RequestTypeId;
		
		private string _Position;
		
		public sp_GetJobRequestCompleteInterviewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedStartDate
		{
			get
			{
				return this._ExpectedStartDate;
			}
			set
			{
				if ((this._ExpectedStartDate != value))
				{
					this._ExpectedStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500)")]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this._Justification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeId", DbType="Int NOT NULL")]
		public int RequestTypeId
		{
			get
			{
				return this._RequestTypeId;
			}
			set
			{
				if ((this._RequestTypeId != value))
				{
					this._RequestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(204)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobRequestForHRResult
	{
		
		private int _ID;
		
		private int _JRItemID;
		
		private string _Approval;
		
		private int _WFStatusID;
		
		private string _WFStatusName;
		
		private int _WFResolutionID;
		
		private string _AssignName;
		
		private int _Quantity;
		
		private string _InvolveRole;
		
		private string _Position;
		
		private string _SubDepartment;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<System.DateTime> _ExpectedStartDate;
		
		private string _RequestorName;
		
		private string _StatusName;
		
		private string _Candidate;
		
		private string _EmpID;
		
		private string _FinalTitleName;
		
		private System.Nullable<System.DateTime> _ActualStartDate;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		public sp_GetJobRequestForHRResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRItemID", DbType="Int NOT NULL")]
		public int JRItemID
		{
			get
			{
				return this._JRItemID;
			}
			set
			{
				if ((this._JRItemID != value))
				{
					this._JRItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approval", DbType="NVarChar(10)")]
		public string Approval
		{
			get
			{
				return this._Approval;
			}
			set
			{
				if ((this._Approval != value))
				{
					this._Approval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					this._WFStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WFStatusName
		{
			get
			{
				return this._WFStatusName;
			}
			set
			{
				if ((this._WFStatusName != value))
				{
					this._WFStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(103)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="VarChar(100)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this._InvolveRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(204)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedStartDate
		{
			get
			{
				return this._ExpectedStartDate;
			}
			set
			{
				if ((this._ExpectedStartDate != value))
				{
					this._ExpectedStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this._RequestorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidate", DbType="NVarChar(100)")]
		public string Candidate
		{
			get
			{
				return this._Candidate;
			}
			set
			{
				if ((this._Candidate != value))
				{
					this._Candidate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTitleName", DbType="NVarChar(100)")]
		public string FinalTitleName
		{
			get
			{
				return this._FinalTitleName;
			}
			set
			{
				if ((this._FinalTitleName != value))
				{
					this._FinalTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartDate
		{
			get
			{
				return this._ActualStartDate;
			}
			set
			{
				if ((this._ActualStartDate != value))
				{
					this._ActualStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this._AssignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobRequestItemListResult
	{
		
		private int _ID;
		
		private string _Candidate;
		
		private string _EmpID;
		
		private string _DisplayName;
		
		private System.Nullable<System.DateTime> _ActualStartDate;
		
		private System.Nullable<bool> _Gender;
		
		private string _ProbationSalary;
		
		private string _ContractedSalary;
		
		public sp_GetJobRequestItemListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidate", DbType="NVarChar(100)")]
		public string Candidate
		{
			get
			{
				return this._Candidate;
			}
			set
			{
				if ((this._Candidate != value))
				{
					this._Candidate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartDate
		{
			get
			{
				return this._ActualStartDate;
			}
			set
			{
				if ((this._ActualStartDate != value))
				{
					this._ActualStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationSalary", DbType="NVarChar(256)")]
		public string ProbationSalary
		{
			get
			{
				return this._ProbationSalary;
			}
			set
			{
				if ((this._ProbationSalary != value))
				{
					this._ProbationSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedSalary", DbType="NVarChar(256)")]
		public string ContractedSalary
		{
			get
			{
				return this._ContractedSalary;
			}
			set
			{
				if ((this._ContractedSalary != value))
				{
					this._ContractedSalary = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobTitleResult
	{
		
		private int _JobTitleId;
		
		private string _JobTitleName;
		
		private int _DepartmentId;
		
		private string _Description;
		
		private bool _IsManager;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		public sp_GetJobTitleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", DbType="Int NOT NULL")]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					this._JobTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobTitleName
		{
			get
			{
				return this._JobTitleName;
			}
			set
			{
				if ((this._JobTitleName != value))
				{
					this._JobTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this._DepartmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManager", DbType="Bit NOT NULL")]
		public bool IsManager
		{
			get
			{
				return this._IsManager;
			}
			set
			{
				if ((this._IsManager != value))
				{
					this._IsManager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	public partial class sp_GetJobTitleLevelResult
	{
		
		private int _ID;
		
		private int _JobLevel;
		
		private string _DisplayName;
		
		private bool _IsActive;
		
		private bool _IsManager;
		
		private string _DepartmentName;
		
		private string _JobTitleName;
		
		public sp_GetJobTitleLevelResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobLevel", DbType="Int NOT NULL")]
		public int JobLevel
		{
			get
			{
				return this._JobLevel;
			}
			set
			{
				if ((this._JobLevel != value))
				{
					this._JobLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManager", DbType="Bit NOT NULL")]
		public bool IsManager
		{
			get
			{
				return this._IsManager;
			}
			set
			{
				if ((this._IsManager != value))
				{
					this._IsManager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobTitleName
		{
			get
			{
				return this._JobTitleName;
			}
			set
			{
				if ((this._JobTitleName != value))
				{
					this._JobTitleName = value;
				}
			}
		}
	}
	
	public partial class sp_GetJRForAdminResult
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _UserAdminId;
		
		private System.Nullable<int> _WFRoleID;
		
		private System.Nullable<bool> _IsActive;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _ID1;
		
		private System.Nullable<bool> _IsActive1;
		
		private string _UserName;
		
		private string _wfName;
		
		private string _roleName;
		
		public sp_GetJRForAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int")]
		public System.Nullable<int> UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int")]
		public System.Nullable<int> WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					this._WFRoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID1", DbType="Int")]
		public System.Nullable<int> ID1
		{
			get
			{
				return this._ID1;
			}
			set
			{
				if ((this._ID1 != value))
				{
					this._ID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive1", DbType="Bit")]
		public System.Nullable<bool> IsActive1
		{
			get
			{
				return this._IsActive1;
			}
			set
			{
				if ((this._IsActive1 != value))
				{
					this._IsActive1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wfName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string wfName
		{
			get
			{
				return this._wfName;
			}
			set
			{
				if ((this._wfName != value))
				{
					this._wfName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleName", DbType="NVarChar(50)")]
		public string roleName
		{
			get
			{
				return this._roleName;
			}
			set
			{
				if ((this._roleName != value))
				{
					this._roleName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListApprovalAssignResult
	{
		
		private string _UserName;
		
		private int _ApproverGroup;
		
		private int _ApprovalID;
		
		private string _UserAdminRole;
		
		private string _DisplayName;
		
		private int _UserAdminId;
		
		private string _Role;
		
		public sp_GetListApprovalAssignResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverGroup", DbType="Int NOT NULL")]
		public int ApproverGroup
		{
			get
			{
				return this._ApproverGroup;
			}
			set
			{
				if ((this._ApproverGroup != value))
				{
					this._ApproverGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalID", DbType="Int NOT NULL")]
		public int ApprovalID
		{
			get
			{
				return this._ApprovalID;
			}
			set
			{
				if ((this._ApprovalID != value))
				{
					this._ApprovalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminRole", DbType="VarChar(21)")]
		public string UserAdminRole
		{
			get
			{
				return this._UserAdminRole;
			}
			set
			{
				if ((this._UserAdminRole != value))
				{
					this._UserAdminRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(103) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class sp_GetListAssignByResolutionIdResult
	{
		
		private string _UserAdminRole;
		
		private string _DisplayName;
		
		private int _UserAdminId;
		
		private string _Role;
		
		private int _WFRoleID;
		
		public sp_GetListAssignByResolutionIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminRole", DbType="VarChar(21)")]
		public string UserAdminRole
		{
			get
			{
				return this._UserAdminRole;
			}
			set
			{
				if ((this._UserAdminRole != value))
				{
					this._UserAdminRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(103) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int NOT NULL")]
		public int WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					this._WFRoleID = value;
				}
			}
		}
	}
	
	public partial class sp_GetListAssignByRoleResult
	{
		
		private string _UserAdminRole;
		
		private string _DisplayName;
		
		private int _UserAdminId;
		
		private string _Role;
		
		public sp_GetListAssignByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminRole", DbType="VarChar(21)")]
		public string UserAdminRole
		{
			get
			{
				return this._UserAdminRole;
			}
			set
			{
				if ((this._UserAdminRole != value))
				{
					this._UserAdminRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(103) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class sp_GetListEmpEnglishInfoResult
	{
		
		private int _ID;
		
		private string _EmployeeId;
		
		private int _TypeId;
		
		private double _Score;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Notes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _TypeName;
		
		private string _EmployeeName;
		
		public sp_GetListEmpEnglishInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this._ExpireDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(200)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListEmployeeSttNotSeatResult
	{
		
		private string _ID;
		
		private string _FullName;
		
		public sp_GetListEmployeeSttNotSeatResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListEnglishExamOfEmployeeResult
	{
		
		private int _ExamID;
		
		private string _ExamName;
		
		private System.DateTime _ExamDate;
		
		private int _CandidateExamId;
		
		private System.Nullable<double> _ScoreMultipleChoice;
		
		private System.Nullable<double> _ScoreSentenceCorrection;
		
		private System.Nullable<double> _ScoreComprehensionSkill;
		
		private System.Nullable<double> _ScoreWritingSkill;
		
		private System.Nullable<double> _ScoreListeningSkill;
		
		private System.Nullable<double> _ScoreVerbal;
		
		private System.Nullable<int> _VerbalMarkType;
		
		public sp_GetListEnglishExamOfEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamID", DbType="Int NOT NULL")]
		public int ExamID
		{
			get
			{
				return this._ExamID;
			}
			set
			{
				if ((this._ExamID != value))
				{
					this._ExamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ExamName
		{
			get
			{
				return this._ExamName;
			}
			set
			{
				if ((this._ExamName != value))
				{
					this._ExamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this._ExamDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateExamId", DbType="Int NOT NULL")]
		public int CandidateExamId
		{
			get
			{
				return this._CandidateExamId;
			}
			set
			{
				if ((this._CandidateExamId != value))
				{
					this._CandidateExamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreMultipleChoice", DbType="Float")]
		public System.Nullable<double> ScoreMultipleChoice
		{
			get
			{
				return this._ScoreMultipleChoice;
			}
			set
			{
				if ((this._ScoreMultipleChoice != value))
				{
					this._ScoreMultipleChoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreSentenceCorrection", DbType="Float")]
		public System.Nullable<double> ScoreSentenceCorrection
		{
			get
			{
				return this._ScoreSentenceCorrection;
			}
			set
			{
				if ((this._ScoreSentenceCorrection != value))
				{
					this._ScoreSentenceCorrection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreComprehensionSkill", DbType="Float")]
		public System.Nullable<double> ScoreComprehensionSkill
		{
			get
			{
				return this._ScoreComprehensionSkill;
			}
			set
			{
				if ((this._ScoreComprehensionSkill != value))
				{
					this._ScoreComprehensionSkill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreWritingSkill", DbType="Float")]
		public System.Nullable<double> ScoreWritingSkill
		{
			get
			{
				return this._ScoreWritingSkill;
			}
			set
			{
				if ((this._ScoreWritingSkill != value))
				{
					this._ScoreWritingSkill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreListeningSkill", DbType="Float")]
		public System.Nullable<double> ScoreListeningSkill
		{
			get
			{
				return this._ScoreListeningSkill;
			}
			set
			{
				if ((this._ScoreListeningSkill != value))
				{
					this._ScoreListeningSkill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreVerbal", DbType="Float")]
		public System.Nullable<double> ScoreVerbal
		{
			get
			{
				return this._ScoreVerbal;
			}
			set
			{
				if ((this._ScoreVerbal != value))
				{
					this._ScoreVerbal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalMarkType", DbType="Int")]
		public System.Nullable<int> VerbalMarkType
		{
			get
			{
				return this._VerbalMarkType;
			}
			set
			{
				if ((this._VerbalMarkType != value))
				{
					this._VerbalMarkType = value;
				}
			}
		}
	}
	
	public partial class sp_GetListEngLishTitleMappingResult
	{
		
		private int _TitleID;
		
		private string _TitleName;
		
		private int _SkillMappingID;
		
		private double _SkillLevel;
		
		private int _VerbalMappingID;
		
		private double _VerbalLevel;
		
		private int _DepartmentId;
		
		private string _DepartmentName;
		
		public sp_GetListEngLishTitleMappingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int NOT NULL")]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this._TitleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillMappingID", DbType="Int NOT NULL")]
		public int SkillMappingID
		{
			get
			{
				return this._SkillMappingID;
			}
			set
			{
				if ((this._SkillMappingID != value))
				{
					this._SkillMappingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillLevel", DbType="Float NOT NULL")]
		public double SkillLevel
		{
			get
			{
				return this._SkillLevel;
			}
			set
			{
				if ((this._SkillLevel != value))
				{
					this._SkillLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalMappingID", DbType="Int NOT NULL")]
		public int VerbalMappingID
		{
			get
			{
				return this._VerbalMappingID;
			}
			set
			{
				if ((this._VerbalMappingID != value))
				{
					this._VerbalMappingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerbalLevel", DbType="Float NOT NULL")]
		public double VerbalLevel
		{
			get
			{
				return this._VerbalLevel;
			}
			set
			{
				if ((this._VerbalLevel != value))
				{
					this._VerbalLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this._DepartmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListeningTopicListByExamQuestionSectionIDResult
	{
		
		private int _ID;
		
		private int _ListeningTopicID;
		
		private string _TopicName;
		
		public sp_GetListeningTopicListByExamQuestionSectionIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListeningTopicID", DbType="Int NOT NULL")]
		public int ListeningTopicID
		{
			get
			{
				return this._ListeningTopicID;
			}
			set
			{
				if ((this._ListeningTopicID != value))
				{
					this._ListeningTopicID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TopicName
		{
			get
			{
				return this._TopicName;
			}
			set
			{
				if ((this._TopicName != value))
				{
					this._TopicName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListInterviewedByResult
	{
		
		private string _Pic;
		
		public sp_GetListInterviewedByResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="NVarChar(500)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this._Pic = value;
				}
			}
		}
	}
	
	public partial class sp_GetListItHelpDeskResult
	{
		
		private int _ID;
		
		private string _Name;
		
		public sp_GetListItHelpDeskResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetListMaterialResult
	{
		
		private int _ID;
		
		private int _TypeOfMaterial;
		
		private System.Nullable<int> _CourseId;
		
		private string _Category;
		
		private int _DisplayOrder;
		
		private string _UploadFile;
		
		private string _UploadFileDisplayName;
		
		private string _Title;
		
		private int _Permission;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Description;
		
		private int _DownloadTimes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _CourseName;
		
		public sp_GetListMaterialResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfMaterial", DbType="Int NOT NULL")]
		public int TypeOfMaterial
		{
			get
			{
				return this._TypeOfMaterial;
			}
			set
			{
				if ((this._TypeOfMaterial != value))
				{
					this._TypeOfMaterial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int")]
		public System.Nullable<int> CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFile", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UploadFile
		{
			get
			{
				return this._UploadFile;
			}
			set
			{
				if ((this._UploadFile != value))
				{
					this._UploadFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFileDisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UploadFileDisplayName
		{
			get
			{
				return this._UploadFileDisplayName;
			}
			set
			{
				if ((this._UploadFileDisplayName != value))
				{
					this._UploadFileDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="Int NOT NULL")]
		public int Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this._Permission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadTimes", DbType="Int NOT NULL")]
		public int DownloadTimes
		{
			get
			{
				return this._DownloadTimes;
			}
			set
			{
				if ((this._DownloadTimes != value))
				{
					this._DownloadTimes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(200)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
	}
	
	public partial class sp_GetListUSAccountingResult
	{
		
		private string _UserName;
		
		private int _UserAdminId;
		
		public sp_GetListUSAccountingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
	}
	
	public partial class sp_GetListUserAdminResult
	{
		
		private string _UserAdminRole;
		
		private string _DisplayName;
		
		private int _UserAdminId;
		
		private string _Role;
		
		private int _WFRoleID;
		
		public sp_GetListUserAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminRole", DbType="VarChar(21)")]
		public string UserAdminRole
		{
			get
			{
				return this._UserAdminRole;
			}
			set
			{
				if ((this._UserAdminRole != value))
				{
					this._UserAdminRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(103) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int NOT NULL")]
		public int WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					this._WFRoleID = value;
				}
			}
		}
	}
	
	public partial class sp_GetListUserOfModuleResult
	{
		
		private int _ID;
		
		private string _Name;
		
		public sp_GetListUserOfModuleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetManagerResult
	{
		
		private string _Title;
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _DepartmentName;
		
		public sp_GetManagerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class sp_GetManageWorkFlowResult
	{
		
		private int _WFRoleID;
		
		private int _WFResolutionID;
		
		private bool _IsHold;
		
		private string _RoleName;
		
		private string _ResolutionName;
		
		private string _WorkFlowName;
		
		public sp_GetManageWorkFlowResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFRoleID", DbType="Int NOT NULL")]
		public int WFRoleID
		{
			get
			{
				return this._WFRoleID;
			}
			set
			{
				if ((this._WFRoleID != value))
				{
					this._WFRoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHold", DbType="Bit NOT NULL")]
		public bool IsHold
		{
			get
			{
				return this._IsHold;
			}
			set
			{
				if ((this._IsHold != value))
				{
					this._IsHold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkFlowName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WorkFlowName
		{
			get
			{
				return this._WorkFlowName;
			}
			set
			{
				if ((this._WorkFlowName != value))
				{
					this._WorkFlowName = value;
				}
			}
		}
	}
	
	public partial class sp_GetMaxMarkByCandidateExamIDResult
	{
		
		private int _ID;
		
		private int _maxMark;
		
		public sp_GetMaxMarkByCandidateExamIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxMark", DbType="Int NOT NULL")]
		public int maxMark
		{
			get
			{
				return this._maxMark;
			}
			set
			{
				if ((this._maxMark != value))
				{
					this._maxMark = value;
				}
			}
		}
	}
	
	public partial class sp_GetModulePermissionResult
	{
		
		private int _ModuleId;
		
		private int _PermissionId;
		
		public sp_GetModulePermissionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this._ModuleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL")]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this._PermissionId = value;
				}
			}
		}
	}
	
	public partial class sp_GetPerformanceReviewListResult
	{
		
		private string _ID;
		
		private string _EmployeeID;
		
		private string _ManagerID;
		
		private string _AssignID;
		
		private int _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _CCEmail;
		
		private System.Nullable<System.DateTime> _NextReviewDate;
		
		private int _EFormID;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private bool _DeleteFlag;
		
		private System.DateTime _PRDate;
		
		private string _EmployeeName;
		
		private string _AssignName;
		
		private string _ManagerName;
		
		private string _DepartmentName;
		
		private string _StatusName;
		
		private string _ResolutionName;
		
		public sp_GetPerformanceReviewListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ManagerID
		{
			get
			{
				return this._ManagerID;
			}
			set
			{
				if ((this._ManagerID != value))
				{
					this._ManagerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this._AssignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int NOT NULL")]
		public int AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(100)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this._InvolveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this._InvolveResolution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCEmail", DbType="NVarChar(500)")]
		public string CCEmail
		{
			get
			{
				return this._CCEmail;
			}
			set
			{
				if ((this._CCEmail != value))
				{
					this._CCEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextReviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextReviewDate
		{
			get
			{
				return this._NextReviewDate;
			}
			set
			{
				if ((this._NextReviewDate != value))
				{
					this._NextReviewDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFormID", DbType="Int NOT NULL")]
		public int EFormID
		{
			get
			{
				return this._EFormID;
			}
			set
			{
				if ((this._EFormID != value))
				{
					this._EFormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					this._WFStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this._InvolveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="NVarChar(100)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this._InvolveRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRDate", DbType="DateTime NOT NULL")]
		public System.DateTime PRDate
		{
			get
			{
				return this._PRDate;
			}
			set
			{
				if ((this._PRDate != value))
				{
					this._PRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(82)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(135)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(82)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50)")]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
	}
	
	public partial class sp_GetPositionResult
	{
		
		private string _ID;
		
		private string _FullName;
		
		private string _ManagerId;
		
		private string _ManagerFullName;
		
		private string _Project;
		
		private System.Nullable<int> _TitleId;
		
		private string _LocationCode;
		
		private int _IsSTT;
		
		public sp_GetPositionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="NVarChar(10)")]
		public string ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this._ManagerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerFullName", DbType="NVarChar(200)")]
		public string ManagerFullName
		{
			get
			{
				return this._ManagerFullName;
			}
			set
			{
				if ((this._ManagerFullName != value))
				{
					this._ManagerFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int")]
		public System.Nullable<int> TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this._TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSTT", DbType="Int NOT NULL")]
		public int IsSTT
		{
			get
			{
				return this._IsSTT;
			}
			set
			{
				if ((this._IsSTT != value))
				{
					this._IsSTT = value;
				}
			}
		}
	}
	
	public partial class sp_GetPTODetailByEmployeeIDResult
	{
		
		private string _ID;
		
		private System.Nullable<double> _FinalTimeOff;
		
		public sp_GetPTODetailByEmployeeIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTimeOff", DbType="Float")]
		public System.Nullable<double> FinalTimeOff
		{
			get
			{
				return this._FinalTimeOff;
			}
			set
			{
				if ((this._FinalTimeOff != value))
				{
					this._FinalTimeOff = value;
				}
			}
		}
	}
	
	public partial class sp_GetPTOEmployeeListResult
	{
		
		private string _Submitter;
		
		private string _SubmitterExport;
		
		private string _SubmitTo;
		
		private string _SubmitToExport;
		
		private string _ID;
		
		private string _StatusName;
		
		private int _StatusID;
		
		private string _TypeName;
		
		private int _TypeID;
		
		private string _Reason;
		
		private System.Nullable<double> _Hours;
		
		private int _key_id;
		
		private System.DateTime _CreateDate;
		
		public sp_GetPTOEmployeeListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submitter", DbType="NVarChar(82)")]
		public string Submitter
		{
			get
			{
				return this._Submitter;
			}
			set
			{
				if ((this._Submitter != value))
				{
					this._Submitter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitterExport", DbType="NVarChar(82)")]
		public string SubmitterExport
		{
			get
			{
				return this._SubmitterExport;
			}
			set
			{
				if ((this._SubmitterExport != value))
				{
					this._SubmitterExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitTo", DbType="NVarChar(82)")]
		public string SubmitTo
		{
			get
			{
				return this._SubmitTo;
			}
			set
			{
				if ((this._SubmitTo != value))
				{
					this._SubmitTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitToExport", DbType="NVarChar(82)")]
		public string SubmitToExport
		{
			get
			{
				return this._SubmitToExport;
			}
			set
			{
				if ((this._SubmitToExport != value))
				{
					this._SubmitToExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Float")]
		public System.Nullable<double> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this._Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_id", DbType="Int NOT NULL")]
		public int key_id
		{
			get
			{
				return this._key_id;
			}
			set
			{
				if ((this._key_id != value))
				{
					this._key_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetPTOEmployeeListForManagerResult
	{
		
		private string _Submitter;
		
		private string _SubmitterExport;
		
		private string _SubmitTo;
		
		private string _SubmitToExport;
		
		private string _ID;
		
		private string _EmployeeID;
		
		private string _StatusName;
		
		private int _StatusID;
		
		private string _TypeName;
		
		private int _TypeID;
		
		private string _Reason;
		
		private System.Nullable<double> _Hours;
		
		private System.Nullable<int> _Balance;
		
		private System.DateTime _CreateDate;
		
		private int _key_id;
		
		public sp_GetPTOEmployeeListForManagerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submitter", DbType="NVarChar(82)")]
		public string Submitter
		{
			get
			{
				return this._Submitter;
			}
			set
			{
				if ((this._Submitter != value))
				{
					this._Submitter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitterExport", DbType="NVarChar(82)")]
		public string SubmitterExport
		{
			get
			{
				return this._SubmitterExport;
			}
			set
			{
				if ((this._SubmitterExport != value))
				{
					this._SubmitterExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitTo", DbType="NVarChar(82)")]
		public string SubmitTo
		{
			get
			{
				return this._SubmitTo;
			}
			set
			{
				if ((this._SubmitTo != value))
				{
					this._SubmitTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitToExport", DbType="NVarChar(82)")]
		public string SubmitToExport
		{
			get
			{
				return this._SubmitToExport;
			}
			set
			{
				if ((this._SubmitToExport != value))
				{
					this._SubmitToExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Float")]
		public System.Nullable<double> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this._Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_id", DbType="Int NOT NULL")]
		public int key_id
		{
			get
			{
				return this._key_id;
			}
			set
			{
				if ((this._key_id != value))
				{
					this._key_id = value;
				}
			}
		}
	}
	
	public partial class sp_GetPTOListForAdminResult
	{
		
		private string _Submitter;
		
		private string _SubmitterExport;
		
		private string _ID;
		
		private int _Key_ID;
		
		private string _EmployeeID;
		
		private string _StatusName;
		
		private int _StatusID;
		
		private string _TypeName;
		
		private int _TypeID;
		
		private string _Reason;
		
		private System.Nullable<double> _Hours;
		
		private System.Nullable<int> _Balance;
		
		private System.DateTime _CreateDate;
		
		public sp_GetPTOListForAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submitter", DbType="NVarChar(82)")]
		public string Submitter
		{
			get
			{
				return this._Submitter;
			}
			set
			{
				if ((this._Submitter != value))
				{
					this._Submitter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitterExport", DbType="NVarChar(82)")]
		public string SubmitterExport
		{
			get
			{
				return this._SubmitterExport;
			}
			set
			{
				if ((this._SubmitterExport != value))
				{
					this._SubmitterExport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key_ID", DbType="Int NOT NULL")]
		public int Key_ID
		{
			get
			{
				return this._Key_ID;
			}
			set
			{
				if ((this._Key_ID != value))
				{
					this._Key_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Float")]
		public System.Nullable<double> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this._Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetPTOReportResult
	{
		
		private int _ID;
		
		private string _EmployeeID;
		
		private int _CarriedForward;
		
		private int _MonthlyVacation;
		
		private string _DisplayName;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ContractedDate;
		
		private System.Nullable<int> _SubtractedBalance;
		
		private System.Nullable<double> _Used;
		
		private System.Nullable<int> _EOMBalance;
		
		private System.Nullable<int> _UnpaidLeave;
		
		private string _Comment;
		
		public sp_GetPTOReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarriedForward", DbType="Int NOT NULL")]
		public int CarriedForward
		{
			get
			{
				return this._CarriedForward;
			}
			set
			{
				if ((this._CarriedForward != value))
				{
					this._CarriedForward = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyVacation", DbType="Int NOT NULL")]
		public int MonthlyVacation
		{
			get
			{
				return this._MonthlyVacation;
			}
			set
			{
				if ((this._MonthlyVacation != value))
				{
					this._MonthlyVacation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractedDate
		{
			get
			{
				return this._ContractedDate;
			}
			set
			{
				if ((this._ContractedDate != value))
				{
					this._ContractedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubtractedBalance", DbType="Int")]
		public System.Nullable<int> SubtractedBalance
		{
			get
			{
				return this._SubtractedBalance;
			}
			set
			{
				if ((this._SubtractedBalance != value))
				{
					this._SubtractedBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Used", DbType="Float")]
		public System.Nullable<double> Used
		{
			get
			{
				return this._Used;
			}
			set
			{
				if ((this._Used != value))
				{
					this._Used = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EOMBalance", DbType="Int")]
		public System.Nullable<int> EOMBalance
		{
			get
			{
				return this._EOMBalance;
			}
			set
			{
				if ((this._EOMBalance != value))
				{
					this._EOMBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnpaidLeave", DbType="Int")]
		public System.Nullable<int> UnpaidLeave
		{
			get
			{
				return this._UnpaidLeave;
			}
			set
			{
				if ((this._UnpaidLeave != value))
				{
					this._UnpaidLeave = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(4000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	public partial class sp_GetPurchaseRequestResult
	{
		
		private int _ID;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private int _Requestor;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<System.DateTime> _ExpectedDate;
		
		private int _SubDepartment;
		
		private string _Justification;
		
		private bool _BillableToClient;
		
		private System.Nullable<int> _Priority;
		
		private string _VendorName;
		
		private string _VendorPhone;
		
		private string _VendorEmail;
		
		private string _VendorAddress;
		
		private int _MoneyType;
		
		private System.Nullable<double> _OtherCost;
		
		private string _SaleTaxName;
		
		private System.Nullable<double> _SaleTaxValue;
		
		private System.Nullable<double> _Shipping;
		
		private System.Nullable<double> _ServiceCharge;
		
		private System.Nullable<double> _Discount;
		
		private string _CCList;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private string _PurchaseAppoval;
		
		private string _PaymentAppoval;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _PaymentID;
		
		private System.Nullable<int> _USAccounting;
		
		private bool _IsUSPurchasing;
		
		private System.Nullable<int> _US_PaymentMethod;
		
		private string _SubDepartmentName;
		
		private string _Department;
		
		private string _RequestorName;
		
		private string _AssignName;
		
		private string _StatusName;
		
		private string _ResolutionName;
		
		private string _Total;
		
		public sp_GetPurchaseRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					this._WFStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requestor", DbType="Int NOT NULL")]
		public int Requestor
		{
			get
			{
				return this._Requestor;
			}
			set
			{
				if ((this._Requestor != value))
				{
					this._Requestor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._ExpectedDate;
			}
			set
			{
				if ((this._ExpectedDate != value))
				{
					this._ExpectedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="Int NOT NULL")]
		public int SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this._Justification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillableToClient", DbType="Bit NOT NULL")]
		public bool BillableToClient
		{
			get
			{
				return this._BillableToClient;
			}
			set
			{
				if ((this._BillableToClient != value))
				{
					this._BillableToClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(100)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPhone", DbType="NVarChar(50)")]
		public string VendorPhone
		{
			get
			{
				return this._VendorPhone;
			}
			set
			{
				if ((this._VendorPhone != value))
				{
					this._VendorPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorEmail", DbType="NVarChar(100)")]
		public string VendorEmail
		{
			get
			{
				return this._VendorEmail;
			}
			set
			{
				if ((this._VendorEmail != value))
				{
					this._VendorEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddress", DbType="NVarChar(200)")]
		public string VendorAddress
		{
			get
			{
				return this._VendorAddress;
			}
			set
			{
				if ((this._VendorAddress != value))
				{
					this._VendorAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyType", DbType="Int NOT NULL")]
		public int MoneyType
		{
			get
			{
				return this._MoneyType;
			}
			set
			{
				if ((this._MoneyType != value))
				{
					this._MoneyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCost", DbType="Float")]
		public System.Nullable<double> OtherCost
		{
			get
			{
				return this._OtherCost;
			}
			set
			{
				if ((this._OtherCost != value))
				{
					this._OtherCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxName", DbType="NVarChar(50)")]
		public string SaleTaxName
		{
			get
			{
				return this._SaleTaxName;
			}
			set
			{
				if ((this._SaleTaxName != value))
				{
					this._SaleTaxName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxValue", DbType="Float")]
		public System.Nullable<double> SaleTaxValue
		{
			get
			{
				return this._SaleTaxValue;
			}
			set
			{
				if ((this._SaleTaxValue != value))
				{
					this._SaleTaxValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="Float")]
		public System.Nullable<double> Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this._Shipping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Float")]
		public System.Nullable<double> ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this._ServiceCharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this._CCList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this._AssignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(500)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this._InvolveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this._InvolveResolution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this._InvolveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="NVarChar(500)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this._InvolveRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAppoval", DbType="NVarChar(50)")]
		public string PurchaseAppoval
		{
			get
			{
				return this._PurchaseAppoval;
			}
			set
			{
				if ((this._PurchaseAppoval != value))
				{
					this._PurchaseAppoval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAppoval", DbType="NVarChar(50)")]
		public string PaymentAppoval
		{
			get
			{
				return this._PaymentAppoval;
			}
			set
			{
				if ((this._PaymentAppoval != value))
				{
					this._PaymentAppoval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int NOT NULL")]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this._PaymentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USAccounting", DbType="Int")]
		public System.Nullable<int> USAccounting
		{
			get
			{
				return this._USAccounting;
			}
			set
			{
				if ((this._USAccounting != value))
				{
					this._USAccounting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSPurchasing", DbType="Bit NOT NULL")]
		public bool IsUSPurchasing
		{
			get
			{
				return this._IsUSPurchasing;
			}
			set
			{
				if ((this._IsUSPurchasing != value))
				{
					this._IsUSPurchasing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_US_PaymentMethod", DbType="Int")]
		public System.Nullable<int> US_PaymentMethod
		{
			get
			{
				return this._US_PaymentMethod;
			}
			set
			{
				if ((this._US_PaymentMethod != value))
				{
					this._US_PaymentMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartmentName
		{
			get
			{
				return this._SubDepartmentName;
			}
			set
			{
				if ((this._SubDepartmentName != value))
				{
					this._SubDepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this._RequestorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(103)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="VarChar(34)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class sp_GetPurchaseRequestByIdResult
	{
		
		private int _ID;
		
		private int _WFStatusID;
		
		private int _WFResolutionID;
		
		private int _Requestor;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<System.DateTime> _ExpectedDate;
		
		private int _SubDepartment;
		
		private string _Justification;
		
		private bool _BillableToClient;
		
		private System.Nullable<int> _Priority;
		
		private string _VendorName;
		
		private string _VendorPhone;
		
		private string _VendorEmail;
		
		private string _VendorAddress;
		
		private int _MoneyType;
		
		private System.Nullable<double> _OtherCost;
		
		private string _SaleTaxName;
		
		private System.Nullable<double> _SaleTaxValue;
		
		private System.Nullable<double> _Shipping;
		
		private System.Nullable<double> _ServiceCharge;
		
		private System.Nullable<double> _Discount;
		
		private string _CCList;
		
		private System.Nullable<int> _AssignID;
		
		private System.Nullable<int> _AssignRole;
		
		private string _InvolveID;
		
		private string _InvolveResolution;
		
		private string _InvolveDate;
		
		private string _InvolveRole;
		
		private string _PurchaseAppoval;
		
		private string _PaymentAppoval;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdateDate;
		
		private int _PaymentID;
		
		private System.Nullable<int> _USAccounting;
		
		private bool _IsUSPurchasing;
		
		private System.Nullable<int> _US_PaymentMethod;
		
		private string _SubDepartmentName;
		
		private string _Department;
		
		private string _RequestorName;
		
		private string _AssignName;
		
		private string _StatusName;
		
		private string _ResolutionName;
		
		private string _Total;
		
		public sp_GetPurchaseRequestByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFStatusID", DbType="Int NOT NULL")]
		public int WFStatusID
		{
			get
			{
				return this._WFStatusID;
			}
			set
			{
				if ((this._WFStatusID != value))
				{
					this._WFStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requestor", DbType="Int NOT NULL")]
		public int Requestor
		{
			get
			{
				return this._Requestor;
			}
			set
			{
				if ((this._Requestor != value))
				{
					this._Requestor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._ExpectedDate;
			}
			set
			{
				if ((this._ExpectedDate != value))
				{
					this._ExpectedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="Int NOT NULL")]
		public int SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this._Justification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillableToClient", DbType="Bit NOT NULL")]
		public bool BillableToClient
		{
			get
			{
				return this._BillableToClient;
			}
			set
			{
				if ((this._BillableToClient != value))
				{
					this._BillableToClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(100)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPhone", DbType="NVarChar(50)")]
		public string VendorPhone
		{
			get
			{
				return this._VendorPhone;
			}
			set
			{
				if ((this._VendorPhone != value))
				{
					this._VendorPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorEmail", DbType="NVarChar(100)")]
		public string VendorEmail
		{
			get
			{
				return this._VendorEmail;
			}
			set
			{
				if ((this._VendorEmail != value))
				{
					this._VendorEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddress", DbType="NVarChar(200)")]
		public string VendorAddress
		{
			get
			{
				return this._VendorAddress;
			}
			set
			{
				if ((this._VendorAddress != value))
				{
					this._VendorAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyType", DbType="Int NOT NULL")]
		public int MoneyType
		{
			get
			{
				return this._MoneyType;
			}
			set
			{
				if ((this._MoneyType != value))
				{
					this._MoneyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCost", DbType="Float")]
		public System.Nullable<double> OtherCost
		{
			get
			{
				return this._OtherCost;
			}
			set
			{
				if ((this._OtherCost != value))
				{
					this._OtherCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxName", DbType="NVarChar(50)")]
		public string SaleTaxName
		{
			get
			{
				return this._SaleTaxName;
			}
			set
			{
				if ((this._SaleTaxName != value))
				{
					this._SaleTaxName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTaxValue", DbType="Float")]
		public System.Nullable<double> SaleTaxValue
		{
			get
			{
				return this._SaleTaxValue;
			}
			set
			{
				if ((this._SaleTaxValue != value))
				{
					this._SaleTaxValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="Float")]
		public System.Nullable<double> Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this._Shipping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Float")]
		public System.Nullable<double> ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this._ServiceCharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCList", DbType="NVarChar(500)")]
		public string CCList
		{
			get
			{
				return this._CCList;
			}
			set
			{
				if ((this._CCList != value))
				{
					this._CCList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignID", DbType="Int")]
		public System.Nullable<int> AssignID
		{
			get
			{
				return this._AssignID;
			}
			set
			{
				if ((this._AssignID != value))
				{
					this._AssignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int")]
		public System.Nullable<int> AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveID", DbType="VarChar(500)")]
		public string InvolveID
		{
			get
			{
				return this._InvolveID;
			}
			set
			{
				if ((this._InvolveID != value))
				{
					this._InvolveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveResolution", DbType="NVarChar(4000)")]
		public string InvolveResolution
		{
			get
			{
				return this._InvolveResolution;
			}
			set
			{
				if ((this._InvolveResolution != value))
				{
					this._InvolveResolution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveDate", DbType="NVarChar(4000)")]
		public string InvolveDate
		{
			get
			{
				return this._InvolveDate;
			}
			set
			{
				if ((this._InvolveDate != value))
				{
					this._InvolveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvolveRole", DbType="NVarChar(500)")]
		public string InvolveRole
		{
			get
			{
				return this._InvolveRole;
			}
			set
			{
				if ((this._InvolveRole != value))
				{
					this._InvolveRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAppoval", DbType="NVarChar(50)")]
		public string PurchaseAppoval
		{
			get
			{
				return this._PurchaseAppoval;
			}
			set
			{
				if ((this._PurchaseAppoval != value))
				{
					this._PurchaseAppoval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAppoval", DbType="NVarChar(50)")]
		public string PaymentAppoval
		{
			get
			{
				return this._PaymentAppoval;
			}
			set
			{
				if ((this._PaymentAppoval != value))
				{
					this._PaymentAppoval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int NOT NULL")]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this._PaymentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USAccounting", DbType="Int")]
		public System.Nullable<int> USAccounting
		{
			get
			{
				return this._USAccounting;
			}
			set
			{
				if ((this._USAccounting != value))
				{
					this._USAccounting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSPurchasing", DbType="Bit NOT NULL")]
		public bool IsUSPurchasing
		{
			get
			{
				return this._IsUSPurchasing;
			}
			set
			{
				if ((this._IsUSPurchasing != value))
				{
					this._IsUSPurchasing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_US_PaymentMethod", DbType="Int")]
		public System.Nullable<int> US_PaymentMethod
		{
			get
			{
				return this._US_PaymentMethod;
			}
			set
			{
				if ((this._US_PaymentMethod != value))
				{
					this._US_PaymentMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartmentName
		{
			get
			{
				return this._SubDepartmentName;
			}
			set
			{
				if ((this._SubDepartmentName != value))
				{
					this._SubDepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this._RequestorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(103)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="VarChar(24)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class sp_GetQuestionListByExamQuestionSectionIDResult
	{
		
		private int _ID;
		
		private int _QuestionID;
		
		private string _QuestionContent;
		
		public sp_GetQuestionListByExamQuestionSectionIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QuestionContent
		{
			get
			{
				return this._QuestionContent;
			}
			set
			{
				if ((this._QuestionContent != value))
				{
					this._QuestionContent = value;
				}
			}
		}
	}
	
	public partial class sp_GetQuestionListRandomBySectionIDResult
	{
		
		private int _ID;
		
		private int _SectionID;
		
		private string _QuestionContent;
		
		private bool _IsMultipleChoice;
		
		private System.Nullable<int> _ListeningTopicID;
		
		private System.Nullable<int> _ParagraphID;
		
		private System.Nullable<int> _ProgrammingTypeID;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		public sp_GetQuestionListRandomBySectionIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this._SectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QuestionContent
		{
			get
			{
				return this._QuestionContent;
			}
			set
			{
				if ((this._QuestionContent != value))
				{
					this._QuestionContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultipleChoice", DbType="Bit NOT NULL")]
		public bool IsMultipleChoice
		{
			get
			{
				return this._IsMultipleChoice;
			}
			set
			{
				if ((this._IsMultipleChoice != value))
				{
					this._IsMultipleChoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListeningTopicID", DbType="Int")]
		public System.Nullable<int> ListeningTopicID
		{
			get
			{
				return this._ListeningTopicID;
			}
			set
			{
				if ((this._ListeningTopicID != value))
				{
					this._ListeningTopicID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphID", DbType="Int")]
		public System.Nullable<int> ParagraphID
		{
			get
			{
				return this._ParagraphID;
			}
			set
			{
				if ((this._ParagraphID != value))
				{
					this._ParagraphID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgrammingTypeID", DbType="Int")]
		public System.Nullable<int> ProgrammingTypeID
		{
			get
			{
				return this._ProgrammingTypeID;
			}
			set
			{
				if ((this._ProgrammingTypeID != value))
				{
					this._ProgrammingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetRandomComprehensionParagraphResult
	{
		
		private int _ID;
		
		private string _ParagraphContent;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		public sp_GetRandomComprehensionParagraphResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ParagraphContent
		{
			get
			{
				return this._ParagraphContent;
			}
			set
			{
				if ((this._ParagraphContent != value))
				{
					this._ParagraphContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetRandomListeningTopicResult
	{
		
		private int _ID;
		
		private string _TopicName;
		
		private string _FileName;
		
		private int _RepeatTimes;
		
		private bool _DeleteFlag;
		
		private string _CreatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		public sp_GetRandomListeningTopicResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TopicName
		{
			get
			{
				return this._TopicName;
			}
			set
			{
				if ((this._TopicName != value))
				{
					this._TopicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatTimes", DbType="Int NOT NULL")]
		public int RepeatTimes
		{
			get
			{
				return this._RepeatTimes;
			}
			set
			{
				if ((this._RepeatTimes != value))
				{
					this._RepeatTimes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetResolutionByRoleResult
	{
		
		private int _WFResolutionID;
		
		public sp_GetResolutionByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFResolutionID", DbType="Int NOT NULL")]
		public int WFResolutionID
		{
			get
			{
				return this._WFResolutionID;
			}
			set
			{
				if ((this._WFResolutionID != value))
				{
					this._WFResolutionID = value;
				}
			}
		}
	}
	
	public partial class sp_GetSeatCodeResult
	{
		
		private int _SeatCodeID;
		
		private string _SeatCodeName;
		
		private int _FloorID;
		
		private string _FloorName;
		
		private int _OfficeID;
		
		private string _OfficeName;
		
		private int _BranchID;
		
		private string _BranchName;
		
		private System.Nullable<bool> _IsAvailable;
		
		public sp_GetSeatCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeID", DbType="Int NOT NULL")]
		public int SeatCodeID
		{
			get
			{
				return this._SeatCodeID;
			}
			set
			{
				if ((this._SeatCodeID != value))
				{
					this._SeatCodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SeatCodeName
		{
			get
			{
				return this._SeatCodeName;
			}
			set
			{
				if ((this._SeatCodeName != value))
				{
					this._SeatCodeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorID", DbType="Int NOT NULL")]
		public int FloorID
		{
			get
			{
				return this._FloorID;
			}
			set
			{
				if ((this._FloorID != value))
				{
					this._FloorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FloorName
		{
			get
			{
				return this._FloorName;
			}
			set
			{
				if ((this._FloorName != value))
				{
					this._FloorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this._OfficeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this._BranchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit")]
		public System.Nullable<bool> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
	}
	
	public partial class sp_GetSeatCodeAndEmployeeSTTResult
	{
		
		private int _SeatCodeID;
		
		private string _SeatCodeName;
		
		private int _FloorID;
		
		private string _FloorName;
		
		private int _OfficeID;
		
		private string _OfficeName;
		
		private int _BranchID;
		
		private string _BranchName;
		
		private System.Nullable<bool> _IsAvailable;
		
		public sp_GetSeatCodeAndEmployeeSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeID", DbType="Int NOT NULL")]
		public int SeatCodeID
		{
			get
			{
				return this._SeatCodeID;
			}
			set
			{
				if ((this._SeatCodeID != value))
				{
					this._SeatCodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCodeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SeatCodeName
		{
			get
			{
				return this._SeatCodeName;
			}
			set
			{
				if ((this._SeatCodeName != value))
				{
					this._SeatCodeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorID", DbType="Int NOT NULL")]
		public int FloorID
		{
			get
			{
				return this._FloorID;
			}
			set
			{
				if ((this._FloorID != value))
				{
					this._FloorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FloorName
		{
			get
			{
				return this._FloorName;
			}
			set
			{
				if ((this._FloorName != value))
				{
					this._FloorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this._OfficeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this._BranchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit")]
		public System.Nullable<bool> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this._IsAvailable = value;
				}
			}
		}
	}
	
	public partial class sp_GetSectionListByExamQuestionIDResult
	{
		
		private int _ID;
		
		private int _SectionID;
		
		private bool _IsRandom;
		
		private int _MaxMark;
		
		private string _SectionName;
		
		private string _Description;
		
		public sp_GetSectionListByExamQuestionIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this._SectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRandom", DbType="Bit NOT NULL")]
		public bool IsRandom
		{
			get
			{
				return this._IsRandom;
			}
			set
			{
				if ((this._IsRandom != value))
				{
					this._IsRandom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMark", DbType="Int NOT NULL")]
		public int MaxMark
		{
			get
			{
				return this._MaxMark;
			}
			set
			{
				if ((this._MaxMark != value))
				{
					this._MaxMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this._SectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class sp_GetSR_SettingResult
	{
		
		private int _ID;
		
		private int _OfficeID;
		
		private string _OfficeName;
		
		private string _ProjectName;
		
		private int _UserAdminID;
		
		private string _UserName;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		public sp_GetSR_SettingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					this._OfficeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminID", DbType="Int NOT NULL")]
		public int UserAdminID
		{
			get
			{
				return this._UserAdminID;
			}
			set
			{
				if ((this._UserAdminID != value))
				{
					this._UserAdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	public partial class sp_GetSRCategoryResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _ParentName;
		
		private System.Nullable<bool> _IsParentActive;
		
		private System.Nullable<int> _ParentOrder;
		
		private string _ParentDescription;
		
		private System.Nullable<int> _SubCount;
		
		public sp_GetSRCategoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(100)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParentActive", DbType="Bit")]
		public System.Nullable<bool> IsParentActive
		{
			get
			{
				return this._IsParentActive;
			}
			set
			{
				if ((this._IsParentActive != value))
				{
					this._IsParentActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentOrder", DbType="Int")]
		public System.Nullable<int> ParentOrder
		{
			get
			{
				return this._ParentOrder;
			}
			set
			{
				if ((this._ParentOrder != value))
				{
					this._ParentOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDescription", DbType="NVarChar(500)")]
		public string ParentDescription
		{
			get
			{
				return this._ParentDescription;
			}
			set
			{
				if ((this._ParentDescription != value))
				{
					this._ParentDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCount", DbType="Int")]
		public System.Nullable<int> SubCount
		{
			get
			{
				return this._SubCount;
			}
			set
			{
				if ((this._SubCount != value))
				{
					this._SubCount = value;
				}
			}
		}
	}
	
	public partial class sp_GetSTTResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private int _STTStatusId;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ExpectedEndDate;
		
		private System.Nullable<int> _ResultId;
		
		private string _Remarks;
		
		private string _Status;
		
		private string _OfficeEmail;
		
		private string _JR;
		
		private string _Result;
		
		private string _LocationCode;
		
		public sp_GetSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STTStatusId", DbType="Int NOT NULL")]
		public int STTStatusId
		{
			get
			{
				return this._STTStatusId;
			}
			set
			{
				if ((this._STTStatusId != value))
				{
					this._STTStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedEndDate
		{
			get
			{
				return this._ExpectedEndDate;
			}
			set
			{
				if ((this._ExpectedEndDate != value))
				{
					this._ExpectedEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int")]
		public System.Nullable<int> ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(50)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
	}
	
	public partial class sp_GetSTTClassResult
	{
		
		private string _ids;
		
		public sp_GetSTTClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ids", DbType="NVarChar(10)")]
		public string ids
		{
			get
			{
				return this._ids;
			}
			set
			{
				if ((this._ids != value))
				{
					this._ids = value;
				}
			}
		}
	}
	
	public partial class sp_GetSTTForExportResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _Department;
		
		private string _SubDepartment;
		
		private string _Title;
		
		private string _VnDisplayName;
		
		private System.Nullable<bool> _Gender;
		
		private string _IDNumber;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ExpectedEndDate;
		
		private string _Photograph;
		
		private string _JR;
		
		private string _JRApproval;
		
		private string _TempAddress;
		
		private string _TempArea;
		
		private string _TempDistrict;
		
		private string _TempCityProvince;
		
		private string _TempCountry;
		
		private string _PermanentAddress;
		
		private string _PermanentArea;
		
		private string _PermanentDistrict;
		
		private string _PermanentCityProvince;
		
		private string _PermanentCountry;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _PersonalEmail;
		
		private string _OfficeEmail;
		
		private string _ExtensionNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Major;
		
		private string _POB;
		
		private string _VnPOB;
		
		private string _Nationality;
		
		private string _PlaceOfOrigin;
		
		private string _VnPlaceOfOrigin;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _IDIssueLocation;
		
		private string _VnIDIssueLocation;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<double> _ResignedAllowance;
		
		private System.Nullable<bool> _LaborUnion;
		
		private System.Nullable<System.DateTime> _LaborUnionDate;
		
		private string _Remarks;
		
		private System.Nullable<bool> _MarriedStatus;
		
		private string _Degree;
		
		private string _OtherDegree;
		
		private string _Floor;
		
		private string _Religion;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private string _EmergencyContactRelationship;
		
		private string _SkypeId;
		
		private string _YahooId;
		
		private string _SeatCode;
		
		private string _CVFile;
		
		private int _STTStatusId;
		
		private System.Nullable<int> _ResultId;
		
		private string _BankAccount1;
		
		private string _BankName1;
		
		private string _Project;
		
		private string _Manager;
		
		private string _Race;
		
		private string _PermanentAddress1;
		
		private string _VnPermanentAddress;
		
		private string _TempAddress1;
		
		private string _VnTempAddress;
		
		private string _Status;
		
		private string _Result;
		
		public sp_GetSTTForExportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnDisplayName", DbType="NVarChar(152)")]
		public string VnDisplayName
		{
			get
			{
				return this._VnDisplayName;
			}
			set
			{
				if ((this._VnDisplayName != value))
				{
					this._VnDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(20)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this._IDNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedEndDate
		{
			get
			{
				return this._ExpectedEndDate;
			}
			set
			{
				if ((this._ExpectedEndDate != value))
				{
					this._ExpectedEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photograph", DbType="NVarChar(50)")]
		public string Photograph
		{
			get
			{
				return this._Photograph;
			}
			set
			{
				if ((this._Photograph != value))
				{
					this._Photograph = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JRApproval", DbType="NVarChar(10)")]
		public string JRApproval
		{
			get
			{
				return this._JRApproval;
			}
			set
			{
				if ((this._JRApproval != value))
				{
					this._JRApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress", DbType="NVarChar(255)")]
		public string TempAddress
		{
			get
			{
				return this._TempAddress;
			}
			set
			{
				if ((this._TempAddress != value))
				{
					this._TempAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempArea", DbType="NVarChar(30)")]
		public string TempArea
		{
			get
			{
				return this._TempArea;
			}
			set
			{
				if ((this._TempArea != value))
				{
					this._TempArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempDistrict", DbType="NVarChar(30)")]
		public string TempDistrict
		{
			get
			{
				return this._TempDistrict;
			}
			set
			{
				if ((this._TempDistrict != value))
				{
					this._TempDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCityProvince", DbType="NVarChar(30)")]
		public string TempCityProvince
		{
			get
			{
				return this._TempCityProvince;
			}
			set
			{
				if ((this._TempCityProvince != value))
				{
					this._TempCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCountry", DbType="NVarChar(30)")]
		public string TempCountry
		{
			get
			{
				return this._TempCountry;
			}
			set
			{
				if ((this._TempCountry != value))
				{
					this._TempCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="NVarChar(255)")]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this._PermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentArea", DbType="NVarChar(30)")]
		public string PermanentArea
		{
			get
			{
				return this._PermanentArea;
			}
			set
			{
				if ((this._PermanentArea != value))
				{
					this._PermanentArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentDistrict", DbType="NVarChar(30)")]
		public string PermanentDistrict
		{
			get
			{
				return this._PermanentDistrict;
			}
			set
			{
				if ((this._PermanentDistrict != value))
				{
					this._PermanentDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCityProvince", DbType="NVarChar(30)")]
		public string PermanentCityProvince
		{
			get
			{
				return this._PermanentCityProvince;
			}
			set
			{
				if ((this._PermanentCityProvince != value))
				{
					this._PermanentCityProvince = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentCountry", DbType="NVarChar(30)")]
		public string PermanentCountry
		{
			get
			{
				return this._PermanentCountry;
			}
			set
			{
				if ((this._PermanentCountry != value))
				{
					this._PermanentCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this._CellPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalEmail", DbType="NVarChar(50)")]
		public string PersonalEmail
		{
			get
			{
				return this._PersonalEmail;
			}
			set
			{
				if ((this._PersonalEmail != value))
				{
					this._PersonalEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(50)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionNumber", DbType="NVarChar(10)")]
		public string ExtensionNumber
		{
			get
			{
				return this._ExtensionNumber;
			}
			set
			{
				if ((this._ExtensionNumber != value))
				{
					this._ExtensionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="NVarChar(255)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this._Major = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="NVarChar(50)")]
		public string POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this._POB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPOB", DbType="NVarChar(50)")]
		public string VnPOB
		{
			get
			{
				return this._VnPOB;
			}
			set
			{
				if ((this._VnPOB != value))
				{
					this._VnPOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(30)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfOrigin", DbType="NVarChar(100)")]
		public string PlaceOfOrigin
		{
			get
			{
				return this._PlaceOfOrigin;
			}
			set
			{
				if ((this._PlaceOfOrigin != value))
				{
					this._PlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPlaceOfOrigin", DbType="NVarChar(100)")]
		public string VnPlaceOfOrigin
		{
			get
			{
				return this._VnPlaceOfOrigin;
			}
			set
			{
				if ((this._VnPlaceOfOrigin != value))
				{
					this._VnPlaceOfOrigin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIssueLocation", DbType="NVarChar(200)")]
		public string IDIssueLocation
		{
			get
			{
				return this._IDIssueLocation;
			}
			set
			{
				if ((this._IDIssueLocation != value))
				{
					this._IDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnIDIssueLocation", DbType="NVarChar(200)")]
		public string VnIDIssueLocation
		{
			get
			{
				return this._VnIDIssueLocation;
			}
			set
			{
				if ((this._VnIDIssueLocation != value))
				{
					this._VnIDIssueLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(20)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this._BankAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this._ResignedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this._ResignedReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedAllowance", DbType="Float")]
		public System.Nullable<double> ResignedAllowance
		{
			get
			{
				return this._ResignedAllowance;
			}
			set
			{
				if ((this._ResignedAllowance != value))
				{
					this._ResignedAllowance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnion", DbType="Bit")]
		public System.Nullable<bool> LaborUnion
		{
			get
			{
				return this._LaborUnion;
			}
			set
			{
				if ((this._LaborUnion != value))
				{
					this._LaborUnion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborUnionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaborUnionDate
		{
			get
			{
				return this._LaborUnionDate;
			}
			set
			{
				if ((this._LaborUnionDate != value))
				{
					this._LaborUnionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedStatus", DbType="Bit")]
		public System.Nullable<bool> MarriedStatus
		{
			get
			{
				return this._MarriedStatus;
			}
			set
			{
				if ((this._MarriedStatus != value))
				{
					this._MarriedStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(200)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this._Degree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDegree", DbType="NVarChar(200)")]
		public string OtherDegree
		{
			get
			{
				return this._OtherDegree;
			}
			set
			{
				if ((this._OtherDegree != value))
				{
					this._OtherDegree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(20)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this._Religion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(50)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this._EmergencyContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(20)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this._EmergencyContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactRelationship", DbType="NVarChar(50)")]
		public string EmergencyContactRelationship
		{
			get
			{
				return this._EmergencyContactRelationship;
			}
			set
			{
				if ((this._EmergencyContactRelationship != value))
				{
					this._EmergencyContactRelationship = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeId", DbType="NVarChar(50)")]
		public string SkypeId
		{
			get
			{
				return this._SkypeId;
			}
			set
			{
				if ((this._SkypeId != value))
				{
					this._SkypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YahooId", DbType="NVarChar(50)")]
		public string YahooId
		{
			get
			{
				return this._YahooId;
			}
			set
			{
				if ((this._YahooId != value))
				{
					this._YahooId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatCode", DbType="NVarChar(10)")]
		public string SeatCode
		{
			get
			{
				return this._SeatCode;
			}
			set
			{
				if ((this._SeatCode != value))
				{
					this._SeatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVFile", DbType="NVarChar(100)")]
		public string CVFile
		{
			get
			{
				return this._CVFile;
			}
			set
			{
				if ((this._CVFile != value))
				{
					this._CVFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STTStatusId", DbType="Int NOT NULL")]
		public int STTStatusId
		{
			get
			{
				return this._STTStatusId;
			}
			set
			{
				if ((this._STTStatusId != value))
				{
					this._STTStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="Int")]
		public System.Nullable<int> ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount1", DbType="NVarChar(20)")]
		public string BankAccount1
		{
			get
			{
				return this._BankAccount1;
			}
			set
			{
				if ((this._BankAccount1 != value))
				{
					this._BankAccount1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName1", DbType="NVarChar(100)")]
		public string BankName1
		{
			get
			{
				return this._BankName1;
			}
			set
			{
				if ((this._BankName1 != value))
				{
					this._BankName1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this._Manager = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this._Race = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress1", DbType="NVarChar(1008)")]
		public string PermanentAddress1
		{
			get
			{
				return this._PermanentAddress1;
			}
			set
			{
				if ((this._PermanentAddress1 != value))
				{
					this._PermanentAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnPermanentAddress", DbType="NVarChar(1008)")]
		public string VnPermanentAddress
		{
			get
			{
				return this._VnPermanentAddress;
			}
			set
			{
				if ((this._VnPermanentAddress != value))
				{
					this._VnPermanentAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempAddress1", DbType="NVarChar(1008)")]
		public string TempAddress1
		{
			get
			{
				return this._TempAddress1;
			}
			set
			{
				if ((this._TempAddress1 != value))
				{
					this._TempAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnTempAddress", DbType="NVarChar(1008)")]
		public string VnTempAddress
		{
			get
			{
				return this._VnTempAddress;
			}
			set
			{
				if ((this._VnTempAddress != value))
				{
					this._VnTempAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
	}
	
	public partial class sp_GetSubListPerformanceReviewHRResult
	{
		
		private string _ID;
		
		private System.DateTime _PRDate;
		
		private string _RequestorName;
		
		private string _AssignName;
		
		private string _ManagerName;
		
		private string _DepartmentName;
		
		private string _StatusName;
		
		private string _ResolutionName;
		
		private int _AssignRole;
		
		public sp_GetSubListPerformanceReviewHRResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRDate", DbType="DateTime NOT NULL")]
		public System.DateTime PRDate
		{
			get
			{
				return this._PRDate;
			}
			set
			{
				if ((this._PRDate != value))
				{
					this._PRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(82)")]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this._RequestorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="NVarChar(82)")]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this._AssignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(82)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionName", DbType="NVarChar(50)")]
		public string ResolutionName
		{
			get
			{
				return this._ResolutionName;
			}
			set
			{
				if ((this._ResolutionName != value))
				{
					this._ResolutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignRole", DbType="Int NOT NULL")]
		public int AssignRole
		{
			get
			{
				return this._AssignRole;
			}
			set
			{
				if ((this._AssignRole != value))
				{
					this._AssignRole = value;
				}
			}
		}
	}
	
	public partial class sp_GetTrainingCertificationResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		public sp_GetTrainingCertificationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	public partial class sp_GetTrainingCoursesResult
	{
		
		private int _ID;
		
		private string _CourseId;
		
		private string _Name;
		
		private int _TypeOfCourse;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<int> _StatusId;
		
		private bool _Active;
		
		private System.Nullable<double> _Duration;
		
		private string _Objectives;
		
		private string _Overview;
		
		private string _Requirements;
		
		private string _KeyTrainers;
		
		private string _Notes;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdatedBy;
		
		private string _TypeName;
		
		private string _StatusName;
		
		public sp_GetTrainingCoursesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfCourse", DbType="Int NOT NULL")]
		public int TypeOfCourse
		{
			get
			{
				return this._TypeOfCourse;
			}
			set
			{
				if ((this._TypeOfCourse != value))
				{
					this._TypeOfCourse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this._StatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="NVarChar(1000)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this._Objectives = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="NVarChar(1000)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this._Overview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="NVarChar(1000)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this._Requirements = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyTrainers", DbType="NVarChar(1000)")]
		public string KeyTrainers
		{
			get
			{
				return this._KeyTrainers;
			}
			set
			{
				if ((this._KeyTrainers != value))
				{
					this._KeyTrainers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserInPurchaseRequestResult
	{
		
		private string _UserName;
		
		private int _UserAdminId;
		
		public sp_GetUserInPurchaseRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdminId", DbType="Int NOT NULL")]
		public int UserAdminId
		{
			get
			{
				return this._UserAdminId;
			}
			set
			{
				if ((this._UserAdminId != value))
				{
					this._UserAdminId = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserMenuPermissonResult
	{
		
		private int _MenuId;
		
		private System.Nullable<int> _ParentId;
		
		private string _Name;
		
		public sp_GetUserMenuPermissonResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this._MenuId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetWFStatusResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _DeleteFlag;
		
		public sp_GetWFStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
	}
	
	public partial class sp_LogDetailResult
	{
		
		private string _DetailId;
		
		private string _LogId;
		
		private string _ColumnName;
		
		private string _DisplayColumnName;
		
		private string _OldValue;
		
		private string _NewValue;
		
		public sp_LogDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this._DetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this._LogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(30)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayColumnName", DbType="NVarChar(50)")]
		public string DisplayColumnName
		{
			get
			{
				return this._DisplayColumnName;
			}
			set
			{
				if ((this._DisplayColumnName != value))
				{
					this._DisplayColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(1000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this._OldValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(1000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this._NewValue = value;
				}
			}
		}
	}
	
	public partial class sp_LogDetailGroupResult
	{
		
		private string _LogId;
		
		private string _TableName;
		
		private System.DateTime _LogDate;
		
		public sp_LogDetailGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this._LogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this._LogDate = value;
				}
			}
		}
	}
	
	public partial class sp_LogMasterResult
	{
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		public sp_LogMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this._LogDate = value;
				}
			}
		}
	}
	
	public partial class sp_LogMasterGroupResult
	{
		
		private string _TableName;
		
		private string _ActionName;
		
		private System.Nullable<int> _Count;
		
		public sp_LogMasterGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this._ActionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetFilesOfService_reqResult
	{
		
		private int _Id;
		
		private string _file_id;
		
		private string _file_name;
		
		public sp_SR_GetFilesOfService_reqResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_id", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string file_id
		{
			get
			{
				return this._file_id;
			}
			set
			{
				if ((this._file_id != value))
				{
					this._file_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_name", DbType="NVarChar(255)")]
		public string file_name
		{
			get
			{
				return this._file_name;
			}
			set
			{
				if ((this._file_name != value))
				{
					this._file_name = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetListActivityResult
	{
		
		private int _ID;
		
		private System.Nullable<double> _TotalTime;
		
		private string _Title;
		
		private string _Description;
		
		private string _RequestUser;
		
		private System.DateTime _CreateDate;
		
		private string _AssignUser;
		
		private string _StatusName;
		
		public sp_SR_GetListActivityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestUser
		{
			get
			{
				return this._RequestUser;
			}
			set
			{
				if ((this._RequestUser != value))
				{
					this._RequestUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this._AssignUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetListOpenCloseRequestResult
	{
		
		private int _ID;
		
		private System.Nullable<double> _TotalTime;
		
		private string _Title;
		
		private string _Description;
		
		private string _RequestUser;
		
		private System.DateTime _CreateDate;
		
		private string _AssignUser;
		
		private string _StatusName;
		
		public sp_SR_GetListOpenCloseRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestUser
		{
			get
			{
				return this._RequestUser;
			}
			set
			{
				if ((this._RequestUser != value))
				{
					this._RequestUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this._AssignUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetListReportITTeamResult
	{
		
		private int _ID;
		
		private System.Nullable<double> _TotalTime;
		
		private string _Title;
		
		private string _Description;
		
		private string _RequestUser;
		
		private System.DateTime _CreateDate;
		
		private string _AssignUser;
		
		private string _StatusName;
		
		public sp_SR_GetListReportITTeamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestUser
		{
			get
			{
				return this._RequestUser;
			}
			set
			{
				if ((this._RequestUser != value))
				{
					this._RequestUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this._AssignUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetListReportStatusResult
	{
		
		private int _ID;
		
		private System.Nullable<double> _TotalTime;
		
		private string _Title;
		
		private string _Description;
		
		private string _RequestUser;
		
		private System.DateTime _CreateDate;
		
		private string _AssignUser;
		
		private string _StatusName;
		
		public sp_SR_GetListReportStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestUser
		{
			get
			{
				return this._RequestUser;
			}
			set
			{
				if ((this._RequestUser != value))
				{
					this._RequestUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this._AssignUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetNotesOfService_reqResult
	{
		
		private int _Id;
		
		private string _notes;
		
		public sp_SR_GetNotesOfService_reqResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this._notes = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetOpenCloseRequestResult
	{
		
		private string _Name;
		
		private System.Nullable<int> _TotalOpened;
		
		private System.Nullable<int> _TotalClosed;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<int> _CategoryId;
		
		public sp_SR_GetOpenCloseRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOpened", DbType="Int")]
		public System.Nullable<int> TotalOpened
		{
			get
			{
				return this._TotalOpened;
			}
			set
			{
				if ((this._TotalOpened != value))
				{
					this._TotalOpened = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalClosed", DbType="Int")]
		public System.Nullable<int> TotalClosed
		{
			get
			{
				return this._TotalClosed;
			}
			set
			{
				if ((this._TotalClosed != value))
				{
					this._TotalClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetReportAllStatusResult
	{
		
		private System.Nullable<int> _TotalActive;
		
		private System.Nullable<int> _TotalNew;
		
		private System.Nullable<int> _TotalOpen;
		
		private System.Nullable<int> _TotalToBeApprove;
		
		private System.Nullable<int> _TotalClosed;
		
		private System.Nullable<int> _TotalVerifiedClosed;
		
		private System.Nullable<int> _TotalPending;
		
		private System.Nullable<int> _TotalPostponed;
		
		private System.Nullable<int> _TotalApproved;
		
		private System.Nullable<int> _TotalRejected;
		
		private string _DisplayName;
		
		public sp_SR_GetReportAllStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalActive", DbType="Int")]
		public System.Nullable<int> TotalActive
		{
			get
			{
				return this._TotalActive;
			}
			set
			{
				if ((this._TotalActive != value))
				{
					this._TotalActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNew", DbType="Int")]
		public System.Nullable<int> TotalNew
		{
			get
			{
				return this._TotalNew;
			}
			set
			{
				if ((this._TotalNew != value))
				{
					this._TotalNew = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOpen", DbType="Int")]
		public System.Nullable<int> TotalOpen
		{
			get
			{
				return this._TotalOpen;
			}
			set
			{
				if ((this._TotalOpen != value))
				{
					this._TotalOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalToBeApprove", DbType="Int")]
		public System.Nullable<int> TotalToBeApprove
		{
			get
			{
				return this._TotalToBeApprove;
			}
			set
			{
				if ((this._TotalToBeApprove != value))
				{
					this._TotalToBeApprove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalClosed", DbType="Int")]
		public System.Nullable<int> TotalClosed
		{
			get
			{
				return this._TotalClosed;
			}
			set
			{
				if ((this._TotalClosed != value))
				{
					this._TotalClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVerifiedClosed", DbType="Int")]
		public System.Nullable<int> TotalVerifiedClosed
		{
			get
			{
				return this._TotalVerifiedClosed;
			}
			set
			{
				if ((this._TotalVerifiedClosed != value))
				{
					this._TotalVerifiedClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPending", DbType="Int")]
		public System.Nullable<int> TotalPending
		{
			get
			{
				return this._TotalPending;
			}
			set
			{
				if ((this._TotalPending != value))
				{
					this._TotalPending = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPostponed", DbType="Int")]
		public System.Nullable<int> TotalPostponed
		{
			get
			{
				return this._TotalPostponed;
			}
			set
			{
				if ((this._TotalPostponed != value))
				{
					this._TotalPostponed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalApproved", DbType="Int")]
		public System.Nullable<int> TotalApproved
		{
			get
			{
				return this._TotalApproved;
			}
			set
			{
				if ((this._TotalApproved != value))
				{
					this._TotalApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRejected", DbType="Int")]
		public System.Nullable<int> TotalRejected
		{
			get
			{
				return this._TotalRejected;
			}
			set
			{
				if ((this._TotalRejected != value))
				{
					this._TotalRejected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetReportITTeamResult
	{
		
		private System.Nullable<int> _TotalOpened;
		
		private System.Nullable<int> _TotalClosed;
		
		private string _DisplayName;
		
		private System.Nullable<double> _TotalTime;
		
		private System.Nullable<int> _TotalDoing;
		
		public sp_SR_GetReportITTeamResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOpened", DbType="Int")]
		public System.Nullable<int> TotalOpened
		{
			get
			{
				return this._TotalOpened;
			}
			set
			{
				if ((this._TotalOpened != value))
				{
					this._TotalOpened = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalClosed", DbType="Int")]
		public System.Nullable<int> TotalClosed
		{
			get
			{
				return this._TotalClosed;
			}
			set
			{
				if ((this._TotalClosed != value))
				{
					this._TotalClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDoing", DbType="Int")]
		public System.Nullable<int> TotalDoing
		{
			get
			{
				return this._TotalDoing;
			}
			set
			{
				if ((this._TotalDoing != value))
				{
					this._TotalDoing = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetRequestClosedResult
	{
		
		private int _ID;
		
		private string _AssignUser;
		
		private string _DisplayName;
		
		public sp_SR_GetRequestClosedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssignUser
		{
			get
			{
				return this._AssignUser;
			}
			set
			{
				if ((this._AssignUser != value))
				{
					this._AssignUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetServiceRequestResult
	{
		
		private string _Urgency;
		
		private string _Icon;
		
		private string _Title;
		
		private string _Description;
		
		private string _SubCategory;
		
		private string _Category;
		
		private int _ID;
		
		private System.DateTime _RequestDate;
		
		private string _Status;
		
		private string _AssginName;
		
		private int _StatusID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		public sp_SR_GetServiceRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urgency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Urgency
		{
			get
			{
				return this._Urgency;
			}
			set
			{
				if ((this._Urgency != value))
				{
					this._Urgency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(100)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this._Icon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssginName
		{
			get
			{
				return this._AssginName;
			}
			set
			{
				if ((this._AssginName != value))
				{
					this._AssginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this._CloseDate = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetServiceRequest4AdminResult
	{
		
		private string _Urgency;
		
		private string _Icon;
		
		private string _Title;
		
		private string _Description;
		
		private string _SubCategory;
		
		private string _Category;
		
		private int _ID;
		
		private System.DateTime _RequestDate;
		
		private string _Status;
		
		private string _AssginName;
		
		private int _StatusID;
		
		private string _Requestor;
		
		public sp_SR_GetServiceRequest4AdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urgency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Urgency
		{
			get
			{
				return this._Urgency;
			}
			set
			{
				if ((this._Urgency != value))
				{
					this._Urgency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(100)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this._Icon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssginName
		{
			get
			{
				return this._AssginName;
			}
			set
			{
				if ((this._AssginName != value))
				{
					this._AssginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requestor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Requestor
		{
			get
			{
				return this._Requestor;
			}
			set
			{
				if ((this._Requestor != value))
				{
					this._Requestor = value;
				}
			}
		}
	}
	
	public partial class sp_SR_GetSRActivityResult
	{
		
		private System.Nullable<int> _SR_Count;
		
		private string _SubDepartment;
		
		private System.Nullable<double> _TotalTime;
		
		private string _Department;
		
		private int _DepartmentId;
		
		public sp_SR_GetSRActivityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_Count", DbType="Int")]
		public System.Nullable<int> SR_Count
		{
			get
			{
				return this._SR_Count;
			}
			set
			{
				if ((this._SR_Count != value))
				{
					this._SR_Count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartment", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartment
		{
			get
			{
				return this._SubDepartment;
			}
			set
			{
				if ((this._SubDepartment != value))
				{
					this._SubDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this._DepartmentId = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetClassEmpAttendResult
	{
		
		private int _ID;
		
		private string _ClassId;
		
		private System.DateTime _StartDate;
		
		private string _Result;
		
		private string _Remark;
		
		private string _CourseName;
		
		private string _SkillName;
		
		public sp_TC_GetClassEmpAttendResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SkillName
		{
			get
			{
				return this._SkillName;
			}
			set
			{
				if ((this._SkillName != value))
				{
					this._SkillName = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetClassEmpNotAttendResult
	{
		
		private int _ID;
		
		private string _CourseId;
		
		private string _Name;
		
		private string _Objectives;
		
		private string _Requirements;
		
		private string _Overview;
		
		private string _SkillName;
		
		public sp_TC_GetClassEmpNotAttendResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="NVarChar(1000)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this._Objectives = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="NVarChar(1000)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this._Requirements = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="NVarChar(1000)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this._Overview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SkillName
		{
			get
			{
				return this._SkillName;
			}
			set
			{
				if ((this._SkillName != value))
				{
					this._SkillName = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetCourseEmpAttendResult
	{
		
		private string _Result;
		
		private string _CourseName;
		
		private int _CourseId;
		
		private int _ClassId;
		
		public sp_TC_GetCourseEmpAttendResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this._CourseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int NOT NULL")]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetEnglishCourseAttendanceResult
	{
		
		private string _ID;
		
		private string _FullName;
		
		private string _DepartmentName;
		
		private string _TitleName;
		
		private int _TitleID;
		
		private string _Department;
		
		private string _ManagerName;
		
		public sp_TC_GetEnglishCourseAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int NOT NULL")]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this._TitleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(200)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetListAttendeesOfClassResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _DepartmentName;
		
		private string _Department;
		
		private string _Result;
		
		private string _Remark;
		
		private string _Project;
		
		private string _ManagerName;
		
		public sp_TC_GetListAttendeesOfClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(100)")]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this._Project = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(82)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this._ManagerName = value;
				}
			}
		}
	}
	
	public partial class sp_TC_GetMaterialListResult
	{
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _amount;
		
		public sp_TC_GetMaterialListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
	}
	
	public partial class SplitResult
	{
		
		private int _Id;
		
		private string _Data;
		
		public SplitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(100)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
	}
	
	public partial class sp_GetEmployeeResult
	{
		
		private string _ID;
		
		private string _DisplayName;
		
		private string _DepartmentName;
		
		private string _TitleName;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _ResignedDate;
		
		private string _ResignedReason;
		
		private System.Nullable<int> _EmpStatusId;
		
		private string _StatusName;
		
		private string _OfficeEmail;
		
		private string _JR;
		
		private string _Department;
		
		private string _LocationCode;
		
		public sp_GetEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(82)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResignedDate
		{
			get
			{
				return this._ResignedDate;
			}
			set
			{
				if ((this._ResignedDate != value))
				{
					this._ResignedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResignedReason", DbType="NVarChar(500)")]
		public string ResignedReason
		{
			get
			{
				return this._ResignedReason;
			}
			set
			{
				if ((this._ResignedReason != value))
				{
					this._ResignedReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatusId", DbType="Int")]
		public System.Nullable<int> EmpStatusId
		{
			get
			{
				return this._EmpStatusId;
			}
			set
			{
				if ((this._EmpStatusId != value))
				{
					this._EmpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(30)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeEmail", DbType="NVarChar(100)")]
		public string OfficeEmail
		{
			get
			{
				return this._OfficeEmail;
			}
			set
			{
				if ((this._OfficeEmail != value))
				{
					this._OfficeEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JR", DbType="NVarChar(10)")]
		public string JR
		{
			get
			{
				return this._JR;
			}
			set
			{
				if ((this._JR != value))
				{
					this._JR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
