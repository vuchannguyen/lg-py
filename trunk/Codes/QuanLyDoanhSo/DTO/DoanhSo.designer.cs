#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyDoanhSo")]
	public partial class DoanhSoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanHang(BanHang instance);
    partial void UpdateBanHang(BanHang instance);
    partial void DeleteBanHang(BanHang instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertBanHang_MenhGiaTien(BanHang_MenhGiaTien instance);
    partial void UpdateBanHang_MenhGiaTien(BanHang_MenhGiaTien instance);
    partial void DeleteBanHang_MenhGiaTien(BanHang_MenhGiaTien instance);
    partial void InsertBanHangChiTiet(BanHangChiTiet instance);
    partial void UpdateBanHangChiTiet(BanHangChiTiet instance);
    partial void DeleteBanHangChiTiet(BanHangChiTiet instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertMenhGiaTien(MenhGiaTien instance);
    partial void UpdateMenhGiaTien(MenhGiaTien instance);
    partial void DeleteMenhGiaTien(MenhGiaTien instance);
    partial void InsertNguonCungCap(NguonCungCap instance);
    partial void UpdateNguonCungCap(NguonCungCap instance);
    partial void DeleteNguonCungCap(NguonCungCap instance);
    partial void InsertNhapHang(NhapHang instance);
    partial void UpdateNhapHang(NhapHang instance);
    partial void DeleteNhapHang(NhapHang instance);
    partial void InsertNhapHangChiTiet(NhapHangChiTiet instance);
    partial void UpdateNhapHangChiTiet(NhapHangChiTiet instance);
    partial void DeleteNhapHangChiTiet(NhapHangChiTiet instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DoanhSoDataContext() : 
				base(global::DTO.Properties.Settings.Default.QuanLyDoanhSoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoanhSoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoanhSoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoanhSoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoanhSoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BanHang> BanHangs
		{
			get
			{
				return this.GetTable<BanHang>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<BanHang_MenhGiaTien> BanHang_MenhGiaTiens
		{
			get
			{
				return this.GetTable<BanHang_MenhGiaTien>();
			}
		}
		
		public System.Data.Linq.Table<BanHangChiTiet> BanHangChiTiets
		{
			get
			{
				return this.GetTable<BanHangChiTiet>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<MenhGiaTien> MenhGiaTiens
		{
			get
			{
				return this.GetTable<MenhGiaTien>();
			}
		}
		
		public System.Data.Linq.Table<NguonCungCap> NguonCungCaps
		{
			get
			{
				return this.GetTable<NguonCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhapHang> NhapHangs
		{
			get
			{
				return this.GetTable<NhapHang>();
			}
		}
		
		public System.Data.Linq.Table<NhapHangChiTiet> NhapHangChiTiets
		{
			get
			{
				return this.GetTable<NhapHangChiTiet>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanHang")]
	public partial class BanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdUser;
		
		private int _IdSanPham;
		
		private System.Nullable<int> _IdSanPhamKhuyenMai;
		
		private System.DateTime _Ngay;
		
		private string _GhiChu;
		
		private bool _DeleteFlag;
		
		private EntitySet<BanHang_MenhGiaTien> _BanHang_MenhGiaTiens;
		
		private EntitySet<BanHangChiTiet> _BanHangChiTiets;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<SanPham> _SanPham1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(System.Nullable<int> value);
    partial void OnIdUserChanged();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnIdSanPhamKhuyenMaiChanging(System.Nullable<int> value);
    partial void OnIdSanPhamKhuyenMaiChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public BanHang()
		{
			this._BanHang_MenhGiaTiens = new EntitySet<BanHang_MenhGiaTien>(new Action<BanHang_MenhGiaTien>(this.attach_BanHang_MenhGiaTiens), new Action<BanHang_MenhGiaTien>(this.detach_BanHang_MenhGiaTiens));
			this._BanHangChiTiets = new EntitySet<BanHangChiTiet>(new Action<BanHangChiTiet>(this.attach_BanHangChiTiets), new Action<BanHangChiTiet>(this.detach_BanHangChiTiets));
			this._SanPham = default(EntityRef<SanPham>);
			this._SanPham1 = default(EntityRef<SanPham>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPhamKhuyenMai", DbType="Int")]
		public System.Nullable<int> IdSanPhamKhuyenMai
		{
			get
			{
				return this._IdSanPhamKhuyenMai;
			}
			set
			{
				if ((this._IdSanPhamKhuyenMai != value))
				{
					if (this._SanPham1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._IdSanPhamKhuyenMai = value;
					this.SendPropertyChanged("IdSanPhamKhuyenMai");
					this.OnIdSanPhamKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanHang_BanHang_MenhGiaTien", Storage="_BanHang_MenhGiaTiens", ThisKey="Id", OtherKey="IdBanHang")]
		public EntitySet<BanHang_MenhGiaTien> BanHang_MenhGiaTiens
		{
			get
			{
				return this._BanHang_MenhGiaTiens;
			}
			set
			{
				this._BanHang_MenhGiaTiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanHang_BanHangChiTiet", Storage="_BanHangChiTiets", ThisKey="Id", OtherKey="IdBanHang")]
		public EntitySet<BanHangChiTiet> BanHangChiTiets
		{
			get
			{
				return this._BanHangChiTiets;
			}
			set
			{
				this._BanHangChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHang", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BanHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BanHangs.Add(this);
						this._IdSanPham = value.Id;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHang1", Storage="_SanPham1", ThisKey="IdSanPhamKhuyenMai", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham1
		{
			get
			{
				return this._SanPham1.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham1.Entity;
				if (((previousValue != value) 
							|| (this._SanPham1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham1.Entity = null;
						previousValue.BanHangs1.Remove(this);
					}
					this._SanPham1.Entity = value;
					if ((value != null))
					{
						value.BanHangs1.Add(this);
						this._IdSanPhamKhuyenMai = value.Id;
					}
					else
					{
						this._IdSanPhamKhuyenMai = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanHang", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BanHangs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BanHangs.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanHang_MenhGiaTiens(BanHang_MenhGiaTien entity)
		{
			this.SendPropertyChanging();
			entity.BanHang = this;
		}
		
		private void detach_BanHang_MenhGiaTiens(BanHang_MenhGiaTien entity)
		{
			this.SendPropertyChanging();
			entity.BanHang = null;
		}
		
		private void attach_BanHangChiTiets(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.BanHang = this;
		}
		
		private void detach_BanHangChiTiets(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.BanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroup")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private string _GhiChu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public UserGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanHang_MenhGiaTien")]
	public partial class BanHang_MenhGiaTien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdBanHang;
		
		private int _IdMenhGiaTien;
		
		private int _SoLuong;
		
		private int _ThanhTien;
		
		private string _GhiChu;
		
		private EntityRef<BanHang> _BanHang;
		
		private EntityRef<MenhGiaTien> _MenhGiaTien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdBanHangChanging(int value);
    partial void OnIdBanHangChanged();
    partial void OnIdMenhGiaTienChanging(int value);
    partial void OnIdMenhGiaTienChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(int value);
    partial void OnThanhTienChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public BanHang_MenhGiaTien()
		{
			this._BanHang = default(EntityRef<BanHang>);
			this._MenhGiaTien = default(EntityRef<MenhGiaTien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanHang", DbType="Int NOT NULL")]
		public int IdBanHang
		{
			get
			{
				return this._IdBanHang;
			}
			set
			{
				if ((this._IdBanHang != value))
				{
					if (this._BanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBanHangChanging(value);
					this.SendPropertyChanging();
					this._IdBanHang = value;
					this.SendPropertyChanged("IdBanHang");
					this.OnIdBanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMenhGiaTien", DbType="Int NOT NULL")]
		public int IdMenhGiaTien
		{
			get
			{
				return this._IdMenhGiaTien;
			}
			set
			{
				if ((this._IdMenhGiaTien != value))
				{
					if (this._MenhGiaTien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMenhGiaTienChanging(value);
					this.SendPropertyChanging();
					this._IdMenhGiaTien = value;
					this.SendPropertyChanged("IdMenhGiaTien");
					this.OnIdMenhGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int NOT NULL")]
		public int ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanHang_BanHang_MenhGiaTien", Storage="_BanHang", ThisKey="IdBanHang", OtherKey="Id", IsForeignKey=true)]
		public BanHang BanHang
		{
			get
			{
				return this._BanHang.Entity;
			}
			set
			{
				BanHang previousValue = this._BanHang.Entity;
				if (((previousValue != value) 
							|| (this._BanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanHang.Entity = null;
						previousValue.BanHang_MenhGiaTiens.Remove(this);
					}
					this._BanHang.Entity = value;
					if ((value != null))
					{
						value.BanHang_MenhGiaTiens.Add(this);
						this._IdBanHang = value.Id;
					}
					else
					{
						this._IdBanHang = default(int);
					}
					this.SendPropertyChanged("BanHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenhGiaTien_BanHang_MenhGiaTien", Storage="_MenhGiaTien", ThisKey="IdMenhGiaTien", OtherKey="Id", IsForeignKey=true)]
		public MenhGiaTien MenhGiaTien
		{
			get
			{
				return this._MenhGiaTien.Entity;
			}
			set
			{
				MenhGiaTien previousValue = this._MenhGiaTien.Entity;
				if (((previousValue != value) 
							|| (this._MenhGiaTien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenhGiaTien.Entity = null;
						previousValue.BanHang_MenhGiaTiens.Remove(this);
					}
					this._MenhGiaTien.Entity = value;
					if ((value != null))
					{
						value.BanHang_MenhGiaTiens.Add(this);
						this._IdMenhGiaTien = value.Id;
					}
					else
					{
						this._IdMenhGiaTien = default(int);
					}
					this.SendPropertyChanged("MenhGiaTien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanHangChiTiet")]
	public partial class BanHangChiTiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdBanHang;
		
		private int _IdSanPham;
		
		private int _TonDau;
		
		private int _LuongNhan;
		
		private int _LuongBan;
		
		private int _TonCuoi;
		
		private System.Nullable<int> _IdSanPhamKhuyenMai;
		
		private System.Nullable<int> _SoLuongKhuyenMai;
		
		private int _Gia;
		
		private int _ThanhTien;
		
		private EntityRef<BanHang> _BanHang;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<SanPham> _SanPham1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdBanHangChanging(int value);
    partial void OnIdBanHangChanged();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnTonDauChanging(int value);
    partial void OnTonDauChanged();
    partial void OnLuongNhanChanging(int value);
    partial void OnLuongNhanChanged();
    partial void OnLuongBanChanging(int value);
    partial void OnLuongBanChanged();
    partial void OnTonCuoiChanging(int value);
    partial void OnTonCuoiChanged();
    partial void OnIdSanPhamKhuyenMaiChanging(System.Nullable<int> value);
    partial void OnIdSanPhamKhuyenMaiChanged();
    partial void OnSoLuongKhuyenMaiChanging(System.Nullable<int> value);
    partial void OnSoLuongKhuyenMaiChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnThanhTienChanging(int value);
    partial void OnThanhTienChanged();
    #endregion
		
		public BanHangChiTiet()
		{
			this._BanHang = default(EntityRef<BanHang>);
			this._SanPham = default(EntityRef<SanPham>);
			this._SanPham1 = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBanHang", DbType="Int NOT NULL")]
		public int IdBanHang
		{
			get
			{
				return this._IdBanHang;
			}
			set
			{
				if ((this._IdBanHang != value))
				{
					if (this._BanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBanHangChanging(value);
					this.SendPropertyChanging();
					this._IdBanHang = value;
					this.SendPropertyChanged("IdBanHang");
					this.OnIdBanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonDau", DbType="Int NOT NULL")]
		public int TonDau
		{
			get
			{
				return this._TonDau;
			}
			set
			{
				if ((this._TonDau != value))
				{
					this.OnTonDauChanging(value);
					this.SendPropertyChanging();
					this._TonDau = value;
					this.SendPropertyChanged("TonDau");
					this.OnTonDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongNhan", DbType="Int NOT NULL")]
		public int LuongNhan
		{
			get
			{
				return this._LuongNhan;
			}
			set
			{
				if ((this._LuongNhan != value))
				{
					this.OnLuongNhanChanging(value);
					this.SendPropertyChanging();
					this._LuongNhan = value;
					this.SendPropertyChanged("LuongNhan");
					this.OnLuongNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongBan", DbType="Int NOT NULL")]
		public int LuongBan
		{
			get
			{
				return this._LuongBan;
			}
			set
			{
				if ((this._LuongBan != value))
				{
					this.OnLuongBanChanging(value);
					this.SendPropertyChanging();
					this._LuongBan = value;
					this.SendPropertyChanged("LuongBan");
					this.OnLuongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonCuoi", DbType="Int NOT NULL")]
		public int TonCuoi
		{
			get
			{
				return this._TonCuoi;
			}
			set
			{
				if ((this._TonCuoi != value))
				{
					this.OnTonCuoiChanging(value);
					this.SendPropertyChanging();
					this._TonCuoi = value;
					this.SendPropertyChanged("TonCuoi");
					this.OnTonCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPhamKhuyenMai", DbType="Int")]
		public System.Nullable<int> IdSanPhamKhuyenMai
		{
			get
			{
				return this._IdSanPhamKhuyenMai;
			}
			set
			{
				if ((this._IdSanPhamKhuyenMai != value))
				{
					if (this._SanPham1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._IdSanPhamKhuyenMai = value;
					this.SendPropertyChanged("IdSanPhamKhuyenMai");
					this.OnIdSanPhamKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongKhuyenMai", DbType="Int")]
		public System.Nullable<int> SoLuongKhuyenMai
		{
			get
			{
				return this._SoLuongKhuyenMai;
			}
			set
			{
				if ((this._SoLuongKhuyenMai != value))
				{
					this.OnSoLuongKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._SoLuongKhuyenMai = value;
					this.SendPropertyChanged("SoLuongKhuyenMai");
					this.OnSoLuongKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int NOT NULL")]
		public int ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanHang_BanHangChiTiet", Storage="_BanHang", ThisKey="IdBanHang", OtherKey="Id", IsForeignKey=true)]
		public BanHang BanHang
		{
			get
			{
				return this._BanHang.Entity;
			}
			set
			{
				BanHang previousValue = this._BanHang.Entity;
				if (((previousValue != value) 
							|| (this._BanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanHang.Entity = null;
						previousValue.BanHangChiTiets.Remove(this);
					}
					this._BanHang.Entity = value;
					if ((value != null))
					{
						value.BanHangChiTiets.Add(this);
						this._IdBanHang = value.Id;
					}
					else
					{
						this._IdBanHang = default(int);
					}
					this.SendPropertyChanged("BanHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHangChiTiet", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BanHangChiTiets.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BanHangChiTiets.Add(this);
						this._IdSanPham = value.Id;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHangChiTiet1", Storage="_SanPham1", ThisKey="IdSanPhamKhuyenMai", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham1
		{
			get
			{
				return this._SanPham1.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham1.Entity;
				if (((previousValue != value) 
							|| (this._SanPham1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham1.Entity = null;
						previousValue.BanHangChiTiets1.Remove(this);
					}
					this._SanPham1.Entity = value;
					if ((value != null))
					{
						value.BanHangChiTiets1.Add(this);
						this._IdSanPhamKhuyenMai = value.Id;
					}
					else
					{
						this._IdSanPhamKhuyenMai = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdSanPham;
		
		private int _SoLuongSanPham;
		
		private int _IdSanPhamKhuyenMai;
		
		private int _SoLuongSanPhamKhuyenMai;
		
		private double _DonViLamTron;
		
		private string _GhiChu;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<SanPham> _SanPham1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongSanPhamChanging(int value);
    partial void OnSoLuongSanPhamChanged();
    partial void OnIdSanPhamKhuyenMaiChanging(int value);
    partial void OnIdSanPhamKhuyenMaiChanged();
    partial void OnSoLuongSanPhamKhuyenMaiChanging(int value);
    partial void OnSoLuongSanPhamKhuyenMaiChanged();
    partial void OnDonViLamTronChanging(double value);
    partial void OnDonViLamTronChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._SanPham1 = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSanPham", DbType="Int NOT NULL")]
		public int SoLuongSanPham
		{
			get
			{
				return this._SoLuongSanPham;
			}
			set
			{
				if ((this._SoLuongSanPham != value))
				{
					this.OnSoLuongSanPhamChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSanPham = value;
					this.SendPropertyChanged("SoLuongSanPham");
					this.OnSoLuongSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPhamKhuyenMai", DbType="Int NOT NULL")]
		public int IdSanPhamKhuyenMai
		{
			get
			{
				return this._IdSanPhamKhuyenMai;
			}
			set
			{
				if ((this._IdSanPhamKhuyenMai != value))
				{
					if (this._SanPham1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._IdSanPhamKhuyenMai = value;
					this.SendPropertyChanged("IdSanPhamKhuyenMai");
					this.OnIdSanPhamKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSanPhamKhuyenMai", DbType="Int NOT NULL")]
		public int SoLuongSanPhamKhuyenMai
		{
			get
			{
				return this._SoLuongSanPhamKhuyenMai;
			}
			set
			{
				if ((this._SoLuongSanPhamKhuyenMai != value))
				{
					this.OnSoLuongSanPhamKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSanPhamKhuyenMai = value;
					this.SendPropertyChanged("SoLuongSanPhamKhuyenMai");
					this.OnSoLuongSanPhamKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViLamTron", DbType="Float NOT NULL")]
		public double DonViLamTron
		{
			get
			{
				return this._DonViLamTron;
			}
			set
			{
				if ((this._DonViLamTron != value))
				{
					this.OnDonViLamTronChanging(value);
					this.SendPropertyChanging();
					this._DonViLamTron = value;
					this.SendPropertyChanged("DonViLamTron");
					this.OnDonViLamTronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.KhuyenMais.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.KhuyenMais.Add(this);
						this._IdSanPham = value.Id;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai1", Storage="_SanPham1", ThisKey="IdSanPhamKhuyenMai", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham1
		{
			get
			{
				return this._SanPham1.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham1.Entity;
				if (((previousValue != value) 
							|| (this._SanPham1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham1.Entity = null;
						previousValue.KhuyenMais1.Remove(this);
					}
					this._SanPham1.Entity = value;
					if ((value != null))
					{
						value.KhuyenMais1.Add(this);
						this._IdSanPhamKhuyenMai = value.Id;
					}
					else
					{
						this._IdSanPhamKhuyenMai = default(int);
					}
					this.SendPropertyChanged("SanPham1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenhGiaTien")]
	public partial class MenhGiaTien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private int _Gia;
		
		private string _GhiChu;
		
		private bool _IsActived;
		
		private bool _DeleteFlag;
		
		private EntitySet<BanHang_MenhGiaTien> _BanHang_MenhGiaTiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIsActivedChanging(bool value);
    partial void OnIsActivedChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public MenhGiaTien()
		{
			this._BanHang_MenhGiaTiens = new EntitySet<BanHang_MenhGiaTien>(new Action<BanHang_MenhGiaTien>(this.attach_BanHang_MenhGiaTiens), new Action<BanHang_MenhGiaTien>(this.detach_BanHang_MenhGiaTiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActived", DbType="Bit NOT NULL")]
		public bool IsActived
		{
			get
			{
				return this._IsActived;
			}
			set
			{
				if ((this._IsActived != value))
				{
					this.OnIsActivedChanging(value);
					this.SendPropertyChanging();
					this._IsActived = value;
					this.SendPropertyChanged("IsActived");
					this.OnIsActivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenhGiaTien_BanHang_MenhGiaTien", Storage="_BanHang_MenhGiaTiens", ThisKey="Id", OtherKey="IdMenhGiaTien")]
		public EntitySet<BanHang_MenhGiaTien> BanHang_MenhGiaTiens
		{
			get
			{
				return this._BanHang_MenhGiaTiens;
			}
			set
			{
				this._BanHang_MenhGiaTiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanHang_MenhGiaTiens(BanHang_MenhGiaTien entity)
		{
			this.SendPropertyChanging();
			entity.MenhGiaTien = this;
		}
		
		private void detach_BanHang_MenhGiaTiens(BanHang_MenhGiaTien entity)
		{
			this.SendPropertyChanging();
			entity.MenhGiaTien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguonCungCap")]
	public partial class NguonCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _DTDD;
		
		private string _Email;
		
		private string _Fax;
		
		private string _MaSoThue;
		
		private string _GhiChu;
		
		private bool _DeleteFlag;
		
		private EntitySet<NhapHang> _NhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDTDDChanging(string value);
    partial void OnDTDDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMaSoThueChanging(string value);
    partial void OnMaSoThueChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public NguonCungCap()
		{
			this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(30)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTDD", DbType="NVarChar(30)")]
		public string DTDD
		{
			get
			{
				return this._DTDD;
			}
			set
			{
				if ((this._DTDD != value))
				{
					this.OnDTDDChanging(value);
					this.SendPropertyChanging();
					this._DTDD = value;
					this.SendPropertyChanged("DTDD");
					this.OnDTDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoThue", DbType="NVarChar(20)")]
		public string MaSoThue
		{
			get
			{
				return this._MaSoThue;
			}
			set
			{
				if ((this._MaSoThue != value))
				{
					this.OnMaSoThueChanging(value);
					this.SendPropertyChanging();
					this._MaSoThue = value;
					this.SendPropertyChanged("MaSoThue");
					this.OnMaSoThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguonCungCap_NhapHang", Storage="_NhapHangs", ThisKey="Id", OtherKey="IdNguonCungCap")]
		public EntitySet<NhapHang> NhapHangs
		{
			get
			{
				return this._NhapHangs;
			}
			set
			{
				this._NhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NguonCungCap = this;
		}
		
		private void detach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NguonCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapHang")]
	public partial class NhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private System.Nullable<int> _IdNguonCungCap;
		
		private System.DateTime _Ngay;
		
		private string _GhiChu;
		
		private bool _DeleteFlag;
		
		private EntitySet<NhapHangChiTiet> _NhapHangChiTiets;
		
		private EntityRef<NguonCungCap> _NguonCungCap;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnIdNguonCungCapChanging(System.Nullable<int> value);
    partial void OnIdNguonCungCapChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public NhapHang()
		{
			this._NhapHangChiTiets = new EntitySet<NhapHangChiTiet>(new Action<NhapHangChiTiet>(this.attach_NhapHangChiTiets), new Action<NhapHangChiTiet>(this.detach_NhapHangChiTiets));
			this._NguonCungCap = default(EntityRef<NguonCungCap>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguonCungCap", DbType="Int")]
		public System.Nullable<int> IdNguonCungCap
		{
			get
			{
				return this._IdNguonCungCap;
			}
			set
			{
				if ((this._IdNguonCungCap != value))
				{
					if (this._NguonCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguonCungCapChanging(value);
					this.SendPropertyChanging();
					this._IdNguonCungCap = value;
					this.SendPropertyChanged("IdNguonCungCap");
					this.OnIdNguonCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_NhapHangChiTiet", Storage="_NhapHangChiTiets", ThisKey="Id", OtherKey="IdNhapHang")]
		public EntitySet<NhapHangChiTiet> NhapHangChiTiets
		{
			get
			{
				return this._NhapHangChiTiets;
			}
			set
			{
				this._NhapHangChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguonCungCap_NhapHang", Storage="_NguonCungCap", ThisKey="IdNguonCungCap", OtherKey="Id", IsForeignKey=true)]
		public NguonCungCap NguonCungCap
		{
			get
			{
				return this._NguonCungCap.Entity;
			}
			set
			{
				NguonCungCap previousValue = this._NguonCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NguonCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguonCungCap.Entity = null;
						previousValue.NhapHangs.Remove(this);
					}
					this._NguonCungCap.Entity = value;
					if ((value != null))
					{
						value.NhapHangs.Add(this);
						this._IdNguonCungCap = value.Id;
					}
					else
					{
						this._IdNguonCungCap = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguonCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NhapHang", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.NhapHangs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.NhapHangs.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapHangChiTiets(NhapHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.NhapHang = this;
		}
		
		private void detach_NhapHangChiTiets(NhapHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.NhapHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapHangChiTiet")]
	public partial class NhapHangChiTiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNhapHang;
		
		private int _IdSanPham;
		
		private int _SoLuong;
		
		private int _Gia;
		
		private int _ThanhTien;
		
		private EntityRef<NhapHang> _NhapHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNhapHangChanging(int value);
    partial void OnIdNhapHangChanged();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnThanhTienChanging(int value);
    partial void OnThanhTienChanged();
    #endregion
		
		public NhapHangChiTiet()
		{
			this._NhapHang = default(EntityRef<NhapHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhapHang", DbType="Int NOT NULL")]
		public int IdNhapHang
		{
			get
			{
				return this._IdNhapHang;
			}
			set
			{
				if ((this._IdNhapHang != value))
				{
					if (this._NhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhapHangChanging(value);
					this.SendPropertyChanging();
					this._IdNhapHang = value;
					this.SendPropertyChanged("IdNhapHang");
					this.OnIdNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int NOT NULL")]
		public int ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_NhapHangChiTiet", Storage="_NhapHang", ThisKey="IdNhapHang", OtherKey="Id", IsForeignKey=true)]
		public NhapHang NhapHang
		{
			get
			{
				return this._NhapHang.Entity;
			}
			set
			{
				NhapHang previousValue = this._NhapHang.Entity;
				if (((previousValue != value) 
							|| (this._NhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhapHang.Entity = null;
						previousValue.NhapHangChiTiets.Remove(this);
					}
					this._NhapHang.Entity = value;
					if ((value != null))
					{
						value.NhapHangChiTiets.Add(this);
						this._IdNhapHang = value.Id;
					}
					else
					{
						this._IdNhapHang = default(int);
					}
					this.SendPropertyChanged("NhapHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhapHangChiTiet", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.NhapHangChiTiets.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.NhapHangChiTiets.Add(this);
						this._IdSanPham = value.Id;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private int _Gia;
		
		private string _DonViTinh;
		
		private string _GhiChu;
		
		private bool _IsActived;
		
		private bool _DeleteFlag;
		
		private EntitySet<BanHang> _BanHangs;
		
		private EntitySet<BanHang> _BanHangs1;
		
		private EntitySet<BanHangChiTiet> _BanHangChiTiets;
		
		private EntitySet<BanHangChiTiet> _BanHangChiTiets1;
		
		private EntitySet<KhuyenMai> _KhuyenMais;
		
		private EntitySet<KhuyenMai> _KhuyenMais1;
		
		private EntitySet<NhapHangChiTiet> _NhapHangChiTiets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIsActivedChanging(bool value);
    partial void OnIsActivedChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public SanPham()
		{
			this._BanHangs = new EntitySet<BanHang>(new Action<BanHang>(this.attach_BanHangs), new Action<BanHang>(this.detach_BanHangs));
			this._BanHangs1 = new EntitySet<BanHang>(new Action<BanHang>(this.attach_BanHangs1), new Action<BanHang>(this.detach_BanHangs1));
			this._BanHangChiTiets = new EntitySet<BanHangChiTiet>(new Action<BanHangChiTiet>(this.attach_BanHangChiTiets), new Action<BanHangChiTiet>(this.detach_BanHangChiTiets));
			this._BanHangChiTiets1 = new EntitySet<BanHangChiTiet>(new Action<BanHangChiTiet>(this.attach_BanHangChiTiets1), new Action<BanHangChiTiet>(this.detach_BanHangChiTiets1));
			this._KhuyenMais = new EntitySet<KhuyenMai>(new Action<KhuyenMai>(this.attach_KhuyenMais), new Action<KhuyenMai>(this.detach_KhuyenMais));
			this._KhuyenMais1 = new EntitySet<KhuyenMai>(new Action<KhuyenMai>(this.attach_KhuyenMais1), new Action<KhuyenMai>(this.detach_KhuyenMais1));
			this._NhapHangChiTiets = new EntitySet<NhapHangChiTiet>(new Action<NhapHangChiTiet>(this.attach_NhapHangChiTiets), new Action<NhapHangChiTiet>(this.detach_NhapHangChiTiets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(20)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActived", DbType="Bit NOT NULL")]
		public bool IsActived
		{
			get
			{
				return this._IsActived;
			}
			set
			{
				if ((this._IsActived != value))
				{
					this.OnIsActivedChanging(value);
					this.SendPropertyChanging();
					this._IsActived = value;
					this.SendPropertyChanged("IsActived");
					this.OnIsActivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHang", Storage="_BanHangs", ThisKey="Id", OtherKey="IdSanPham")]
		public EntitySet<BanHang> BanHangs
		{
			get
			{
				return this._BanHangs;
			}
			set
			{
				this._BanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHang1", Storage="_BanHangs1", ThisKey="Id", OtherKey="IdSanPhamKhuyenMai")]
		public EntitySet<BanHang> BanHangs1
		{
			get
			{
				return this._BanHangs1;
			}
			set
			{
				this._BanHangs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHangChiTiet", Storage="_BanHangChiTiets", ThisKey="Id", OtherKey="IdSanPham")]
		public EntitySet<BanHangChiTiet> BanHangChiTiets
		{
			get
			{
				return this._BanHangChiTiets;
			}
			set
			{
				this._BanHangChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BanHangChiTiet1", Storage="_BanHangChiTiets1", ThisKey="Id", OtherKey="IdSanPhamKhuyenMai")]
		public EntitySet<BanHangChiTiet> BanHangChiTiets1
		{
			get
			{
				return this._BanHangChiTiets1;
			}
			set
			{
				this._BanHangChiTiets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai", Storage="_KhuyenMais", ThisKey="Id", OtherKey="IdSanPham")]
		public EntitySet<KhuyenMai> KhuyenMais
		{
			get
			{
				return this._KhuyenMais;
			}
			set
			{
				this._KhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhuyenMai1", Storage="_KhuyenMais1", ThisKey="Id", OtherKey="IdSanPhamKhuyenMai")]
		public EntitySet<KhuyenMai> KhuyenMais1
		{
			get
			{
				return this._KhuyenMais1;
			}
			set
			{
				this._KhuyenMais1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhapHangChiTiet", Storage="_NhapHangChiTiets", ThisKey="Id", OtherKey="IdSanPham")]
		public EntitySet<NhapHangChiTiet> NhapHangChiTiets
		{
			get
			{
				return this._NhapHangChiTiets;
			}
			set
			{
				this._NhapHangChiTiets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanHangs(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BanHangs(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_BanHangs1(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = this;
		}
		
		private void detach_BanHangs1(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = null;
		}
		
		private void attach_BanHangChiTiets(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BanHangChiTiets(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_BanHangChiTiets1(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = this;
		}
		
		private void detach_BanHangChiTiets1(BanHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = null;
		}
		
		private void attach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_KhuyenMais(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_KhuyenMais1(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = this;
		}
		
		private void detach_KhuyenMais1(KhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = null;
		}
		
		private void attach_NhapHangChiTiets(NhapHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_NhapHangChiTiets(NhapHangChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUserGroup;
		
		private string _Ten;
		
		private string _UserName;
		
		private string _Password;
		
		private string _GioiTinh;
		
		private System.Nullable<int> _To;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CMND;
		
		private System.Nullable<System.DateTime> _NgayCap;
		
		private string _NoiCap;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _DTDD;
		
		private string _Email;
		
		private string _GhiChu;
		
		private bool _DeleteFlag;
		
		private EntitySet<BanHang> _BanHangs;
		
		private EntitySet<NhapHang> _NhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserGroupChanging(int value);
    partial void OnIdUserGroupChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnToChanging(System.Nullable<int> value);
    partial void OnToChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnNgayCapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapChanged();
    partial void OnNoiCapChanging(string value);
    partial void OnNoiCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDTDDChanging(string value);
    partial void OnDTDDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public User()
		{
			this._BanHangs = new EntitySet<BanHang>(new Action<BanHang>(this.attach_BanHangs), new Action<BanHang>(this.detach_BanHangs));
			this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserGroup", DbType="Int NOT NULL")]
		public int IdUserGroup
		{
			get
			{
				return this._IdUserGroup;
			}
			set
			{
				if ((this._IdUserGroup != value))
				{
					this.OnIdUserGroupChanging(value);
					this.SendPropertyChanging();
					this._IdUserGroup = value;
					this.SendPropertyChanged("IdUserGroup");
					this.OnIdUserGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="Int")]
		public System.Nullable<int> To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this.OnToChanging(value);
					this.SendPropertyChanging();
					this._To = value;
					this.SendPropertyChanged("To");
					this.OnToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(10)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this.OnNgayCapChanging(value);
					this.SendPropertyChanging();
					this._NgayCap = value;
					this.SendPropertyChanged("NgayCap");
					this.OnNgayCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiCap", DbType="NVarChar(50)")]
		public string NoiCap
		{
			get
			{
				return this._NoiCap;
			}
			set
			{
				if ((this._NoiCap != value))
				{
					this.OnNoiCapChanging(value);
					this.SendPropertyChanging();
					this._NoiCap = value;
					this.SendPropertyChanged("NoiCap");
					this.OnNoiCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(30)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTDD", DbType="NVarChar(30)")]
		public string DTDD
		{
			get
			{
				return this._DTDD;
			}
			set
			{
				if ((this._DTDD != value))
				{
					this.OnDTDDChanging(value);
					this.SendPropertyChanging();
					this._DTDD = value;
					this.SendPropertyChanged("DTDD");
					this.OnDTDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanHang", Storage="_BanHangs", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<BanHang> BanHangs
		{
			get
			{
				return this._BanHangs;
			}
			set
			{
				this._BanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NhapHang", Storage="_NhapHangs", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<NhapHang> NhapHangs
		{
			get
			{
				return this._NhapHangs;
			}
			set
			{
				this._NhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanHangs(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BanHangs(BanHang entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
